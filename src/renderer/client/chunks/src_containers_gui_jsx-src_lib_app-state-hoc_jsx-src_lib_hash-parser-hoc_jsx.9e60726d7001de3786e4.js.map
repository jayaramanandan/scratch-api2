{"version":3,"file":"chunks/src_containers_gui_jsx-src_lib_app-state-hoc_jsx-src_lib_hash-parser-hoc_jsx.9e60726d7001de3786e4.js","mappings":";;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAIA;AAAA;AAGA;AACA;AAAA;AAKA;AACA;AAAA;AAKA;AAAA;AAGA;AAEA;AACA;AACA;AAGA;AAAA;AAIA;AAAA;AAGA;AACA;AAAA;AAGA;AAEA;AAAA;AAMA;AACA;AAAA;AAGA;AAEA;AAAA;AAMA;AACA;AAAA;AAGA;AAEA;AAAA;AAMA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;AC3IA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAGA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAGA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1IA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAQA;AAEA;AAAA;AAEA;AAEA;AAAA;AAMA;AAAA;AAEA;AACA;AAAA;AAGA;AAEA;AAAA;AAKA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAEA;AAAA;AAIA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AChHA;AACA;AACA;AAEA;AAEA;AAQA;AAPA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAIA;AAEA;AAIA;AACA;AAAA;AAIA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAIA;AACA;AAAA;AAGA;AAGA;AACA;AAEA;AAGA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AACA;AACA;AAEA;AAEA;AAGA;AAAA;AAIA;AAGA;AAAA;AAAA;AAAA;AAIA;AAGA;AAAA;AAAA;AAAA;AAIA;AAGA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAEA;AAEA;AAAA;AAIA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAIA;AAEA;AAAA;AAKA;AAIA;AAAA;AAMA;AAEA;AACA;AACA;AACA;AAAA;AAKA;AACA;AAAA;AAGA;AAEA;AAAA;AAOA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAIA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAEA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAKA;AACA;AAAA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AASA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;ACpMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AAEA;AAEA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AAAA;AAGA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAUA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1MA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AADA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACxGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAGA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AAAA;AAGA;AAGA;AAGA;AACA;AACA;AAAA;AAGA;AAEA;AAAA;AAMA;AAGA;AAIA;AACA;AAAA;AAMA;AAGA;AAIA;AACA;AACA;AAAA;AAGA;AAEA;AAAA;AAKA;AACA;AAAA;AAUA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/GA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAOA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzHA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAIA;AAAA;AAEA;AACA;AAAA;AAIA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAAA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AAEA;AAAA;AAIA;AAAA;AAEA;AAEA;AAAA;AAIA;AAAA;AAEA;AAEA;AAAA;AAIA;AAAA;AAEA;AAEA;AAAA;AAIA;AAAA;AAEA;AAEA;AAAA;AAIA;AAAA;AAEA;AAEA;AAAA;AAIA;AAAA;AAEA;AAEA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC7JA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AAAA;AAGA;AAEA;AAAA;AAIA;AACA;AAAA;AAGA;AAEA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACrGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAKA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAKA;AACA;AAIA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAQA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1LA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAGA;AAAA;AAIA;AACA;AAAA;AAMA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAGA;AAEA;AAGA;AAEA;AAAA;AACA;AAAA;AAGA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AAIA;AAAA;AAMA;AAEA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAKA;AACA;AAAA;AAMA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzJA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAEA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AAEA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAOA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAEA;AAAA;AAIA;AAAA;AAKA;AAAA;AAEA;AACA;AAAA;AAGA;AAEA;AAAA;AAKA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAEA;AAAA;AAIA;AAAA;AAKA;AAGA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;AC7FA;AACA;AACA;AAEA;AAKA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AADA;AAEA;AAGA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;ACvFA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAOA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAEA;AAEA;AAAA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAKA;AACA;AACA;AACA;AAeA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AADA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACxMA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;AC9RA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AADA;AAEA;AAGA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAKA;AACA;;AAEA;AACA;AACA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AADA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;ACzcA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;AC9EA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AAEA;AAAA;AAIA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;ACtNA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AADA;AAEA;AACA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1HA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAIA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAEA;AAEA;AACA;AAAA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAIA;AAKA;AAEA;;;;;;;;;;;;;;;;;;ACjLA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;ACzOA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;ACtCA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AChBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;ACrDA;AAGA;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;AChCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;ACtFA;AACA;AACA;AACA;AAEA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAKA;;;;;;;;;;;;;;;;;;ACrFA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;AC7BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAIA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AACA;AAEA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AAGA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACn/DA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC/TA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AADA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAIA;AAEA;;;;;;;;;;;;;;;;;ACtDA;AACA;AAEA;;;;;;;;;;;;;;;;;;ACHA;AACA;AAEA;AAEA;;AAEA;AACA;AACA;AAIA;AACA;AA+HA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAoIA;AAEA;AACA;AACA;AAoDA;AAEA;AACA;AACA;AAoCA;AAEA;AACA;AACA;AAgDA;AAEA;AACA;AACA;AACA;AA2EA;AAEA;AACA;AACA;AACA;AACA;AACA;AAyLA;AAEA;AACA;AACA;AASA;AAEA;AACA;AACA;AASA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAaA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;AC1yBA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AC7CA;AAEA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtPA;AACA;AACA;AACA;AACA;AAEA;AACA;AAUA;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAEA;AAEA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;;AAktcA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AADA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;AC/DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AAIA;AAIA;AACA;AAAA;AAAA;AAAA;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAEA;AAGA;AAAA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAKA;;;;;;;;;;;;;;;;;;;AC5QA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;ACjGA;AAEA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;ACjCA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAGA;AACA;AACA;AACA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;AC3FA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AADA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AAEA;;;;;;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACpxGA;AACA;AAEA;AAIA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACvEA;AAEA;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAEA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;;;;;;;;;;;;;;;;AC5GA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;AClBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC7BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9RA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpNA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAEA;AAEA;AACA;AAAA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AAIA;AAKA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AC5JA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACjNA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACxBA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACthCA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC1DA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5BA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACvKA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AClJA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnjHA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACtjTA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACvBA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAIA;AAIA;AAKA;AAGA;AAGA;AAKA;AAGA;AAGA;AAGA;AAMA;AAIA;AAGA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;ACxfA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AClBA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1BA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/EA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAGA;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvBA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnnBA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA","sources":["webpack://GUI/./src/lib/default-project/83a9787d4cb6f3b7632b4ddfebf74367.wav","webpack://GUI/./src/lib/default-project/83c36d806dc92327b9e7049a565c6bff.wav","webpack://GUI/./src/components/alerts/alert.jsx","webpack://GUI/./src/components/alerts/alerts.jsx","webpack://GUI/./src/components/box/box.jsx","webpack://GUI/./src/components/browser-modal/browser-modal.jsx","webpack://GUI/./src/components/button/button.jsx","webpack://GUI/./src/components/close-button/close-button.jsx","webpack://GUI/./src/components/context-menu/context-menu.jsx","webpack://GUI/./src/components/controls/controls.jsx","webpack://GUI/./src/components/crash-message/crash-message.jsx","webpack://GUI/./src/components/forms/input.jsx","webpack://GUI/./src/components/green-flag/green-flag.jsx","webpack://GUI/./src/components/gui/gui.jsx","webpack://GUI/./src/components/loader/loader.jsx","webpack://GUI/./src/components/loupe/loupe.jsx","webpack://GUI/./src/components/mic-indicator/mic-indicator.jsx","webpack://GUI/./src/components/modal/modal.jsx","webpack://GUI/./src/components/monitor-list/monitor-list.jsx","webpack://GUI/./src/components/monitor/default-monitor.jsx","webpack://GUI/./src/components/monitor/large-monitor.jsx","webpack://GUI/./src/components/monitor/list-monitor-scroller.jsx","webpack://GUI/./src/components/monitor/list-monitor.jsx","webpack://GUI/./src/components/monitor/monitor.jsx","webpack://GUI/./src/components/monitor/slider-monitor.jsx","webpack://GUI/./src/components/question/question.jsx","webpack://GUI/./src/components/slider-prompt/slider-prompt.jsx","webpack://GUI/./src/components/spinner/spinner.jsx","webpack://GUI/./src/components/stage-header/stage-header.jsx","webpack://GUI/./src/components/stage-wrapper/stage-wrapper.jsx","webpack://GUI/./src/components/stage/stage.jsx","webpack://GUI/./src/components/stop-all/stop-all.jsx","webpack://GUI/./src/components/toggle-buttons/toggle-buttons.jsx","webpack://GUI/./src/components/turbo-mode/turbo-mode.jsx","webpack://GUI/./src/components/webgl-modal/webgl-modal.jsx","webpack://GUI/./src/containers/alert.jsx","webpack://GUI/./src/containers/alerts.jsx","webpack://GUI/./src/containers/controls.jsx","webpack://GUI/./src/containers/dom-element-renderer.jsx","webpack://GUI/./src/containers/error-boundary.jsx","webpack://GUI/./src/containers/green-flag-overlay.jsx","webpack://GUI/./src/containers/gui.jsx","webpack://GUI/./src/containers/list-monitor.jsx","webpack://GUI/./src/containers/modal.jsx","webpack://GUI/./src/containers/monitor-list.jsx","webpack://GUI/./src/containers/monitor.jsx","webpack://GUI/./src/containers/question.jsx","webpack://GUI/./src/containers/sb3-downloader.jsx","webpack://GUI/./src/containers/slider-monitor.jsx","webpack://GUI/./src/containers/slider-prompt.jsx","webpack://GUI/./src/containers/stage-header.jsx","webpack://GUI/./src/containers/stage-wrapper.jsx","webpack://GUI/./src/containers/stage.jsx","webpack://GUI/./src/containers/target-highlight.jsx","webpack://GUI/./src/containers/webgl-modal.jsx","webpack://GUI/./src/lib/alerts/index.jsx","webpack://GUI/./src/lib/analytics.js","webpack://GUI/./src/lib/app-state-hoc.jsx","webpack://GUI/./src/lib/cloud-manager-hoc.jsx","webpack://GUI/./src/lib/cloud-provider.js","webpack://GUI/./src/lib/collect-metadata.js","webpack://GUI/./src/lib/connected-intl-provider.jsx","webpack://GUI/./src/lib/data-uri-to-blob.js","webpack://GUI/./src/lib/default-project/index.js","webpack://GUI/./src/lib/default-project/project-data.js","webpack://GUI/./src/lib/detect-locale.js","webpack://GUI/./src/lib/download-blob.js","webpack://GUI/./src/lib/error-boundary-hoc.jsx","webpack://GUI/./src/lib/font-loader-hoc.jsx","webpack://GUI/./src/lib/hash-parser-hoc.jsx","webpack://GUI/./src/lib/import-csv.js","webpack://GUI/./src/lib/isScratchDesktop.js","webpack://GUI/./src/lib/layout-constants.js","webpack://GUI/./src/lib/libraries/decks/index.jsx","webpack://GUI/./src/lib/libraries/extensions/index.jsx","webpack://GUI/./src/lib/localization-hoc.jsx","webpack://GUI/./src/lib/log.js","webpack://GUI/./src/lib/make-toolbox-xml.js","webpack://GUI/./src/lib/monitor-adapter.js","webpack://GUI/./src/lib/opcode-labels.js","webpack://GUI/./src/lib/project-fetcher-hoc.jsx","webpack://GUI/./src/lib/project-saver-hoc.jsx","webpack://GUI/./src/lib/query-parser-hoc.jsx","webpack://GUI/./src/lib/save-project-to-server.js","webpack://GUI/./src/lib/sb-file-uploader-hoc.jsx","webpack://GUI/./src/lib/screen-utils.js","webpack://GUI/./src/lib/shared-messages.js","webpack://GUI/./src/lib/storage.js","webpack://GUI/./src/lib/supported-browser.js","webpack://GUI/./src/lib/system-preferences-hoc.jsx","webpack://GUI/./src/lib/themes/dark/index.js","webpack://GUI/./src/lib/themes/default/index.js","webpack://GUI/./src/lib/themes/high-contrast/index.js","webpack://GUI/./src/lib/themes/index.js","webpack://GUI/./src/lib/themes/themePersistance.js","webpack://GUI/./src/lib/titled-hoc.jsx","webpack://GUI/./src/lib/touch-utils.js","webpack://GUI/./src/lib/tutorial-from-url.js","webpack://GUI/./src/lib/variable-utils.js","webpack://GUI/./src/lib/video/camera.js","webpack://GUI/./src/lib/video/video-provider.js","webpack://GUI/./src/lib/vm-listener-hoc.jsx","webpack://GUI/./src/lib/vm-manager-hoc.jsx","webpack://GUI/./src/reducers/alerts.js","webpack://GUI/./src/reducers/asset-drag.js","webpack://GUI/./src/reducers/block-drag.js","webpack://GUI/./src/reducers/cards.js","webpack://GUI/./src/reducers/color-picker.js","webpack://GUI/./src/reducers/connection-modal.js","webpack://GUI/./src/reducers/custom-procedures.js","webpack://GUI/./src/reducers/editor-tab.js","webpack://GUI/./src/reducers/fonts-loaded.js","webpack://GUI/./src/reducers/gui.js","webpack://GUI/./src/reducers/hovered-target.js","webpack://GUI/./src/reducers/locales.js","webpack://GUI/./src/reducers/menus.js","webpack://GUI/./src/reducers/mic-indicator.js","webpack://GUI/./src/reducers/modals.js","webpack://GUI/./src/reducers/mode.js","webpack://GUI/./src/reducers/monitor-layout.js","webpack://GUI/./src/reducers/monitors.js","webpack://GUI/./src/reducers/project-changed.js","webpack://GUI/./src/reducers/project-state.js","webpack://GUI/./src/reducers/project-title.js","webpack://GUI/./src/reducers/restore-deletion.js","webpack://GUI/./src/reducers/stage-size.js","webpack://GUI/./src/reducers/targets.js","webpack://GUI/./src/reducers/theme.js","webpack://GUI/./src/reducers/time-travel.js","webpack://GUI/./src/reducers/timeout.js","webpack://GUI/./src/reducers/toolbox.js","webpack://GUI/./src/reducers/vm-status.js","webpack://GUI/./src/reducers/vm.js","webpack://GUI/./src/reducers/workspace-metrics.js","webpack://GUI/./src/components/alerts/alert.css","webpack://GUI/./src/components/alerts/alerts.css","webpack://GUI/./src/components/box/box.css","webpack://GUI/./src/components/browser-modal/browser-modal.css","webpack://GUI/./src/components/button/button.css","webpack://GUI/./src/components/close-button/close-button.css","webpack://GUI/./src/components/context-menu/context-menu.css","webpack://GUI/./src/components/controls/controls.css","webpack://GUI/./src/components/crash-message/crash-message.css","webpack://GUI/./src/components/forms/input.css","webpack://GUI/./src/components/green-flag/green-flag.css","webpack://GUI/./src/components/gui/gui.css","webpack://GUI/./src/components/loader/loader.css","webpack://GUI/./src/components/loupe/loupe.css","webpack://GUI/./src/components/mic-indicator/mic-indicator.css","webpack://GUI/./src/components/modal/modal.css","webpack://GUI/./src/components/monitor-list/monitor-list.css","webpack://GUI/./src/components/monitor/monitor.css","webpack://GUI/./src/components/question/question.css","webpack://GUI/./src/components/slider-prompt/slider-prompt.css","webpack://GUI/./src/components/spinner/spinner.css","webpack://GUI/./src/components/stage-header/stage-header.css","webpack://GUI/./src/components/stage-wrapper/stage-wrapper.css","webpack://GUI/./src/components/stage/stage.css","webpack://GUI/./src/components/stop-all/stop-all.css","webpack://GUI/./src/components/toggle-buttons/toggle-buttons.css","webpack://GUI/./src/components/turbo-mode/turbo-mode.css","webpack://GUI/./src/components/webgl-modal/webgl-modal.css","webpack://GUI/./src/lib/default-project/0fb9be3e8397c983338cb71dc84d0b25.svg","webpack://GUI/./src/lib/default-project/bcf454acf82e4504149f7ffe07081dbc.svg","webpack://GUI/./src/lib/default-project/cd21514d0531fdffb22204e0ec5ed84a.svg","webpack://GUI/./src/components/alerts/alert.css?1cb0","webpack://GUI/./src/components/alerts/alerts.css?7321","webpack://GUI/./src/components/box/box.css?9444","webpack://GUI/./src/components/browser-modal/browser-modal.css?51b7","webpack://GUI/./src/components/button/button.css?12c8","webpack://GUI/./src/components/close-button/close-button.css?4ed6","webpack://GUI/./src/components/context-menu/context-menu.css?19fa","webpack://GUI/./src/components/controls/controls.css?b44c","webpack://GUI/./src/components/crash-message/crash-message.css?8fa7","webpack://GUI/./src/components/forms/input.css?a4e1","webpack://GUI/./src/components/green-flag/green-flag.css?df6a","webpack://GUI/./src/components/gui/gui.css?7139","webpack://GUI/./src/components/loader/loader.css?0aad","webpack://GUI/./src/components/loupe/loupe.css?ccb9","webpack://GUI/./src/components/mic-indicator/mic-indicator.css?7f75","webpack://GUI/./src/components/modal/modal.css?89b3","webpack://GUI/./src/components/monitor-list/monitor-list.css?d947","webpack://GUI/./src/components/monitor/monitor.css?54f2","webpack://GUI/./src/components/question/question.css?c4a3","webpack://GUI/./src/components/slider-prompt/slider-prompt.css?7926","webpack://GUI/./src/components/spinner/spinner.css?45f4","webpack://GUI/./src/components/stage-header/stage-header.css?dc22","webpack://GUI/./src/components/stage-wrapper/stage-wrapper.css?608d","webpack://GUI/./src/components/stage/stage.css?572b","webpack://GUI/./src/components/stop-all/stop-all.css?acdd","webpack://GUI/./src/components/toggle-buttons/toggle-buttons.css?264f","webpack://GUI/./src/components/turbo-mode/turbo-mode.css?4add","webpack://GUI/./src/components/webgl-modal/webgl-modal.css?fd14","webpack://GUI/ignored|/home/jayaram/Projects/scratch-gui (copy 1)/node_modules/@scratch/paper/dist|./node/extend.js","webpack://GUI/ignored|/home/jayaram/Projects/scratch-gui (copy 1)/node_modules/@scratch/paper/dist|./node/self.js","webpack://GUI/ignored|/home/jayaram/Projects/scratch-gui (copy 1)/node_modules/intl-messageformat|./lib/locales","webpack://GUI/ignored|/home/jayaram/Projects/scratch-gui (copy 1)/node_modules/intl-relativeformat|./lib/locales","webpack://GUI/ignored|/home/jayaram/Projects/scratch-gui (copy 1)/node_modules/object-inspect|./util.inspect","webpack://GUI/ignored|/home/jayaram/Projects/scratch-gui (copy 1)/node_modules/react-intl/lib|../locale-data/index.js","webpack://GUI/ignored|/home/jayaram/Projects/scratch-gui (copy 1)/node_modules/scratch-vm/node_modules/htmlparser2/lib|readable-stream","webpack://GUI/ignored|/home/jayaram/Projects/scratch-gui (copy 1)/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams|util","webpack://GUI/ignored|/home/jayaram/Projects/scratch-gui (copy 1)/node_modules/stream-browserify/node_modules/readable-stream/lib|util"],"sourcesContent":["module.exports = require(\"../../../node_modules/arraybuffer-loader/lib/to-array-buffer.js\")(\"UklGRigCAABXQVZFZm10IBAAAAABAAEAESsAACJWAAACABAAZGF0YQQCAADVAAMDvQdyDe8VUx08I5sk4iCrFnMGVfFf2mDEjbNpqZKo5bFHxUHh8wLtJtFHSmF9byNwCmHOROodKvMPyWqn/ZElje6YObXo3eIMnTpEYHB2tXmiaNhFZxdK5Gy1epLegWuGcZ+OyCH84jB9Xd955H83calNthyp50+4jJYDiWmRT6712VwMADxQX+9vF2lWTgokcfJZxWejtpN4mfiyaNqjCY42a1cpZqJfvEb1H8jyA8r1rc6iH6syxPHqwBSrOShR8VY0SU4rAwQs27667KgOqdG8jN28BjwugEsUWSdSXTmsExzqccWtrSmnurMb0LD2pR56P8hRylFrP30f5/nT1oG+H7ZVvqzVvPUqGIIz9UGEQCwvDBNX8p/Vs8P1v3TLnON6AnogiTaGP9I4OiTDBpLnG86GvwjAFc9R6WsIfiUgOghBtTiWI1MGL+hWzyrC6sJa0QXqSQeUItc10DzsNUojWglH7hvYd8sNy2bWb+qxApIZMyp4MKorPB30CGTzv+G41/bWrN8Q780BKRNcH6gjSB+rE68DUvNw5rrf2+Az6cz2JAbbE/IcSh+EGskPfAHk8jXnDeGG4XroZ/ShAiwQXxoQH4wdXhY9C3T+5/LK6pbnhOng7/n41AIIC0oQkhHZDjcJGQJ5+532lvTd9df5H/+OBJcIFwqKCFUEYf4=\")","module.exports = require(\"../../../node_modules/arraybuffer-loader/lib/to-array-buffer.js\")(\"\")","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {FormattedMessage} from 'react-intl';\n\nimport Box from '../box/box.jsx';\nimport CloseButton from '../close-button/close-button.jsx';\nimport Spinner from '../spinner/spinner.jsx';\nimport {AlertLevels} from '../../lib/alerts/index.jsx';\n\nimport styles from './alert.css';\n\nconst closeButtonColors = {\n    [AlertLevels.SUCCESS]: CloseButton.COLOR_GREEN,\n    [AlertLevels.WARN]: CloseButton.COLOR_ORANGE\n};\n\nconst AlertComponent = ({\n    content,\n    closeButton,\n    extensionName,\n    iconSpinner,\n    iconURL,\n    level,\n    showDownload,\n    showSaveNow,\n    onCloseAlert,\n    onDownload,\n    onSaveNow,\n    onReconnect,\n    showReconnect\n}) => (\n    <Box\n        className={classNames(styles.alert, styles[level])}\n    >\n        {/* TODO: implement Rtl handling */}\n        {(iconSpinner || iconURL) && (\n            <div className={styles.iconSection}>\n                {iconSpinner && (\n                    <Spinner\n                        className={styles.alertSpinner}\n                        level={level}\n                    />\n                )}\n                {iconURL && (\n                    <img\n                        className={styles.alertIcon}\n                        src={iconURL}\n                    />\n                )}\n            </div>\n        )}\n        <div className={styles.alertMessage}>\n            {extensionName ? (\n                <FormattedMessage\n                    defaultMessage=\"Scratch lost connection to {extensionName}.\"\n                    description=\"Message indicating that an extension peripheral has been disconnected\"\n                    id=\"gui.alerts.lostPeripheralConnection\"\n                    values={{\n                        extensionName: (\n                            `${extensionName}`\n                        )\n                    }}\n                />\n            ) : content}\n        </div>\n        <div className={styles.alertButtons}>\n            {showSaveNow && (\n                <button\n                    className={styles.alertConnectionButton}\n                    onClick={onSaveNow}\n                >\n                    <FormattedMessage\n                        defaultMessage=\"Try Again\"\n                        description=\"Button to try saving again\"\n                        id=\"gui.alerts.tryAgain\"\n                    />\n                </button>\n            )}\n            {showDownload && (\n                <button\n                    className={styles.alertConnectionButton}\n                    onClick={onDownload}\n                >\n                    <FormattedMessage\n                        defaultMessage=\"Download\"\n                        description=\"Button to download project locally\"\n                        id=\"gui.alerts.download\"\n                    />\n                </button>\n            )}\n            {showReconnect && (\n                <button\n                    className={styles.alertConnectionButton}\n                    onClick={onReconnect}\n                >\n                    <FormattedMessage\n                        defaultMessage=\"Reconnect\"\n                        description=\"Button to reconnect the device\"\n                        id=\"gui.connection.reconnect\"\n                    />\n                </button>\n            )}\n            {closeButton && (\n                <Box\n                    className={styles.alertCloseButtonContainer}\n                >\n                    <CloseButton\n                        className={classNames(styles.alertCloseButton)}\n                        color={closeButtonColors[level]}\n                        size={CloseButton.SIZE_LARGE}\n                        onClick={onCloseAlert}\n                    />\n                </Box>\n            )}\n        </div>\n    </Box>\n);\n\nAlertComponent.propTypes = {\n    closeButton: PropTypes.bool,\n    content: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n    extensionName: PropTypes.string,\n    iconSpinner: PropTypes.bool,\n    iconURL: PropTypes.string,\n    level: PropTypes.string,\n    onCloseAlert: PropTypes.func.isRequired,\n    onDownload: PropTypes.func,\n    onReconnect: PropTypes.func,\n    onSaveNow: PropTypes.func,\n    showDownload: PropTypes.func,\n    showReconnect: PropTypes.bool,\n    showSaveNow: PropTypes.bool\n};\n\nAlertComponent.defaultProps = {\n    level: AlertLevels.WARN\n};\n\nexport default AlertComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Box from '../box/box.jsx';\nimport Alert from '../../containers/alert.jsx';\n\nimport styles from './alerts.css';\n\nconst AlertsComponent = ({\n    alertsList,\n    className,\n    onCloseAlert\n}) => (\n    <Box\n        bounds=\"parent\"\n        className={className}\n    >\n        <Box className={styles.alertsInnerContainer} >\n            {alertsList.map((a, index) => (\n                <Alert\n                    closeButton={a.closeButton}\n                    content={a.content}\n                    extensionId={a.extensionId}\n                    extensionName={a.extensionName}\n                    iconSpinner={a.iconSpinner}\n                    iconURL={a.iconURL}\n                    index={index}\n                    key={index}\n                    level={a.level}\n                    message={a.message}\n                    showDownload={a.showDownload}\n                    showReconnect={a.showReconnect}\n                    showSaveNow={a.showSaveNow}\n                    onCloseAlert={onCloseAlert}\n                />\n            ))}\n        </Box>\n    </Box>\n);\n\nAlertsComponent.propTypes = {\n    alertsList: PropTypes.arrayOf(PropTypes.object),\n    className: PropTypes.string,\n    onCloseAlert: PropTypes.func\n};\n\nexport default AlertsComponent;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport stylePropType from 'react-style-proptype';\nimport styles from './box.css';\n\nconst getRandomColor = (function () {\n    // In \"DEBUG\" mode this is used to output a random background color for each\n    // box. The function gives the same \"random\" set for each seed, allowing re-\n    // renders of the same content to give the same random display.\n    const random = (function (seed) {\n        let mW = seed;\n        let mZ = 987654321;\n        const mask = 0xffffffff;\n        return function () {\n            mZ = ((36969 * (mZ & 65535)) + (mZ >> 16)) & mask;\n            mW = ((18000 * (mW & 65535)) + (mW >> 16)) & mask;\n            let result = ((mZ << 16) + mW) & mask;\n            result /= 4294967296;\n            return result + 1;\n        };\n    }(601));\n    return function () {\n        const r = Math.max(parseInt(random() * 100, 10) % 256, 1);\n        const g = Math.max(parseInt(random() * 100, 10) % 256, 1);\n        const b = Math.max(parseInt(random() * 100, 10) % 256, 1);\n        return `rgb(${r},${g},${b})`;\n    };\n}());\n\nconst Box = props => {\n    const {\n        alignContent,\n        alignItems,\n        alignSelf,\n        basis,\n        children,\n        className,\n        componentRef,\n        direction,\n        element,\n        grow,\n        height,\n        justifyContent,\n        width,\n        wrap,\n        shrink,\n        style,\n        ...componentProps\n    } = props;\n    return React.createElement(element, {\n        className: classNames(className, styles.box),\n        ref: componentRef,\n        style: Object.assign(\n            {\n                alignContent: alignContent,\n                alignItems: alignItems,\n                alignSelf: alignSelf,\n                flexBasis: basis,\n                flexDirection: direction,\n                flexGrow: grow,\n                flexShrink: shrink,\n                flexWrap: wrap,\n                justifyContent: justifyContent,\n                width: width,\n                height: height\n            },\n            process.env.DEBUG ? {\n                backgroundColor: getRandomColor(),\n                outline: `1px solid black`\n            } : {},\n            style\n        ),\n        ...componentProps\n    }, children);\n};\nBox.propTypes = {\n    /** Defines how the browser distributes space between and around content items vertically within this box. */\n    alignContent: PropTypes.oneOf([\n        'flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'stretch'\n    ]),\n    /** Defines how the browser distributes space between and around flex items horizontally within this box. */\n    alignItems: PropTypes.oneOf([\n        'flex-start', 'flex-end', 'center', 'baseline', 'stretch'\n    ]),\n    /** Specifies how this box should be aligned inside of its container (requires the container to be flexable). */\n    alignSelf: PropTypes.oneOf([\n        'auto', 'flex-start', 'flex-end', 'center', 'baseline', 'stretch'\n    ]),\n    /** Specifies the initial length of this box */\n    basis: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.oneOf(['auto'])\n    ]),\n    /** Specifies the the HTML nodes which will be child elements of this box. */\n    children: PropTypes.node,\n    /** Specifies the class name that will be set on this box */\n    className: PropTypes.string,\n    /**\n     * A callback function whose first parameter is the underlying dom elements.\n     * This call back will be executed immediately after the component is mounted or unmounted\n     */\n    componentRef: PropTypes.func,\n    /** https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction */\n    direction: PropTypes.oneOf([\n        'row', 'row-reverse', 'column', 'column-reverse'\n    ]),\n    /** Specifies the type of HTML element of this box. Defaults to div. */\n    element: PropTypes.string,\n    /** Specifies the flex grow factor of a flex item. */\n    grow: PropTypes.number,\n    /** The height in pixels (if specified as a number) or a string if different units are required. */\n    height: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string\n    ]),\n    /** https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content */\n    justifyContent: PropTypes.oneOf([\n        'flex-start', 'flex-end', 'center', 'space-between', 'space-around'\n    ]),\n    /** Specifies the flex shrink factor of a flex item. */\n    shrink: PropTypes.number,\n    /** An object whose keys are css property names and whose values correspond the the css property. */\n    style: stylePropType,\n    /** The width in pixels (if specified as a number) or a string if different units are required. */\n    width: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string\n    ]),\n    /** How whitespace should wrap within this block. */\n    wrap: PropTypes.oneOf([\n        'nowrap', 'wrap', 'wrap-reverse'\n    ])\n};\nBox.defaultProps = {\n    element: 'div',\n    style: {}\n};\nexport default Box;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactModal from 'react-modal';\nimport Box from '../box/box.jsx';\nimport {defineMessages, injectIntl, intlShape, FormattedMessage} from 'react-intl';\n\nimport styles from './browser-modal.css';\nimport unhappyBrowser from './unsupported-browser.svg';\n\nconst messages = defineMessages({\n    label: {\n        id: 'gui.unsupportedBrowser.label',\n        defaultMessage: 'Browser is not supported',\n        description: ''\n    },\n    error: {\n        id: 'gui.unsupportedBrowser.errorLabel',\n        defaultMessage: 'An Error Occurred',\n        description: 'Heading shown when there is an unhandled exception in an unsupported browser'\n    }\n});\n\nconst BrowserModal = ({intl, ...props}) => {\n    const label = props.error ? messages.error : messages.label;\n    return (\n        <ReactModal\n            isOpen\n            className={styles.modalContent}\n            contentLabel={intl.formatMessage({...messages.label})}\n            overlayClassName={styles.modalOverlay}\n            onRequestClose={props.onBack}\n        >\n            <div dir={props.isRtl ? 'rtl' : 'ltr'} >\n                <Box className={styles.illustration}>\n                    <img src={unhappyBrowser} />\n                </Box>\n\n                <Box className={styles.body}>\n                    <h2>\n                        <FormattedMessage {...label} />\n                    </h2>\n                    <p>\n                        { /* eslint-disable max-len */ }\n                        {\n                            props.error ? <FormattedMessage\n                                defaultMessage=\"We are very sorry, but it looks like you are using a browser version that Scratch does not support. We recommend updating to the latest version of a supported browser such as Google Chrome, Mozilla Firefox, Microsoft Edge, or Apple Safari. \"\n                                description=\"Error message when the browser does not meet our minimum requirements\"\n                                id=\"gui.unsupportedBrowser.notRecommended\"\n                            /> : <FormattedMessage\n                                defaultMessage=\"We are very sorry, but Scratch does not support this browser. We recommend updating to the latest version of a supported browser such as Google Chrome, Mozilla Firefox, Microsoft Edge, or Apple Safari.\"\n                                description=\"Error message when the browser does not work at all (IE)\"\n                                id=\"gui.unsupportedBrowser.description\"\n                            />\n                        }\n                        { /* eslint-enable max-len */ }\n                    </p>\n\n                    <Box className={styles.buttonRow}>\n                        <button\n                            className={styles.backButton}\n                            onClick={props.onBack}\n                        >\n                            <FormattedMessage\n                                defaultMessage=\"Back\"\n                                description=\"Button to go back in unsupported browser modal\"\n                                id=\"gui.unsupportedBrowser.back\"\n                            />\n                        </button>\n\n                    </Box>\n                    <div className={styles.faqLinkText}>\n                        <FormattedMessage\n                            defaultMessage=\"To learn more, go to the {previewFaqLink}.\"\n                            description=\"Invitation to try 3.0 preview\"\n                            id=\"gui.unsupportedBrowser.previewfaq\"\n                            values={{\n                                previewFaqLink: (\n                                    <a\n                                        className={styles.faqLink}\n                                        href=\"//scratch.mit.edu/3faq\"\n                                    >\n                                        <FormattedMessage\n                                            defaultMessage=\"FAQ\"\n                                            description=\"link to Scratch 3.0 FAQ page\"\n                                            id=\"gui.unsupportedBrowser.previewfaqlinktext\"\n                                        />\n                                    </a>\n                                )\n                            }}\n                        />\n                    </div>\n                </Box>\n            </div>\n        </ReactModal>\n    );\n};\n\nBrowserModal.propTypes = {\n    error: PropTypes.bool,\n    intl: intlShape.isRequired,\n    isRtl: PropTypes.bool,\n    onBack: PropTypes.func.isRequired\n};\n\nBrowserModal.defaultProps = {\n    error: false\n};\n\nconst WrappedBrowserModal = injectIntl(BrowserModal);\n\nWrappedBrowserModal.setAppElement = ReactModal.setAppElement;\n\nexport default WrappedBrowserModal;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport styles from './button.css';\n\nconst ButtonComponent = ({\n    className,\n    disabled,\n    iconClassName,\n    iconSrc,\n    onClick,\n    children,\n    ...props\n}) => {\n\n    if (disabled) {\n        onClick = function () {};\n    }\n\n    const icon = iconSrc && (\n        <img\n            className={classNames(iconClassName, styles.icon)}\n            draggable={false}\n            src={iconSrc}\n        />\n    );\n\n    return (\n        <span\n            className={classNames(\n                styles.outlinedButton,\n                className\n            )}\n            role=\"button\"\n            onClick={onClick}\n            {...props}\n        >\n            {icon}\n            <div className={styles.content}>{children}</div>\n        </span>\n    );\n};\n\nButtonComponent.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    iconClassName: PropTypes.string,\n    iconSrc: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default ButtonComponent;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\n\nimport styles from './close-button.css';\nimport closeIcon from './icon--close.svg';\nimport closeIconOrange from './icon--close-orange.svg';\nimport backIcon from '../../lib/assets/icon--back.svg';\n\nlet closeIcons = {};\n\nconst CloseButton = props => (\n    <div\n        aria-label=\"Close\"\n        className={classNames(\n            styles.closeButton,\n            props.className,\n            {\n                [styles.small]: props.size === CloseButton.SIZE_SMALL,\n                [styles.large]: props.size === CloseButton.SIZE_LARGE,\n                [styles.orange]: props.color === CloseButton.COLOR_ORANGE\n            }\n        )}\n        role=\"button\"\n        tabIndex=\"0\"\n        onClick={props.onClick}\n    >\n        {props.buttonType === 'back' ?\n            <img\n                className={styles.backIcon}\n                src={backIcon}\n            /> :\n            <img\n                className={classNames(\n                    styles.closeIcon,\n                    {\n                        [styles[props.color]]: (props.color !== CloseButton.COLOR_NEUTRAL)\n                    }\n                )}\n                src={(props.color && closeIcons[props.color]) ?\n                    closeIcons[props.color] :\n                    closeIcon\n                }\n            />\n        }\n    </div>\n);\n\nCloseButton.SIZE_SMALL = 'small';\nCloseButton.SIZE_LARGE = 'large';\n\nCloseButton.COLOR_NEUTRAL = 'neutral';\nCloseButton.COLOR_GREEN = 'green';\nCloseButton.COLOR_ORANGE = 'orange';\ncloseIcons = {\n    [CloseButton.COLOR_NEUTRAL]: closeIcon,\n    [CloseButton.COLOR_GREEN]: closeIcon, // TODO: temporary, need green icon\n    [CloseButton.COLOR_ORANGE]: closeIconOrange\n};\n\n\nCloseButton.propTypes = {\n    buttonType: PropTypes.oneOf(['back', 'close']),\n    className: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func.isRequired,\n    size: PropTypes.oneOf([CloseButton.SIZE_SMALL, CloseButton.SIZE_LARGE])\n};\n\nCloseButton.defaultProps = {\n    color: CloseButton.COLOR_NEUTRAL,\n    size: CloseButton.SIZE_LARGE,\n    buttonType: 'close'\n};\n\nexport default CloseButton;\n","import React from 'react';\nimport {ContextMenu, MenuItem} from 'react-contextmenu';\nimport classNames from 'classnames';\n\nimport styles from './context-menu.css';\n\nconst StyledContextMenu = props => (\n    <ContextMenu\n        {...props}\n        className={styles.contextMenu}\n    />\n);\n\nconst StyledMenuItem = props => (\n    <MenuItem\n        {...props}\n        attributes={{className: styles.menuItem}}\n    />\n);\n\nconst BorderedMenuItem = props => (\n    <MenuItem\n        {...props}\n        attributes={{className: classNames(styles.menuItem, styles.menuItemBordered)}}\n    />\n);\n\nconst DangerousMenuItem = props => (\n    <MenuItem\n        {...props}\n        attributes={{className: classNames(styles.menuItem, styles.menuItemBordered, styles.menuItemDanger)}}\n    />\n);\n\n\nexport {\n    BorderedMenuItem,\n    DangerousMenuItem,\n    StyledContextMenu as ContextMenu,\n    StyledMenuItem as MenuItem\n};\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {defineMessages, injectIntl, intlShape} from 'react-intl';\n\nimport GreenFlag from '../green-flag/green-flag.jsx';\nimport StopAll from '../stop-all/stop-all.jsx';\nimport TurboMode from '../turbo-mode/turbo-mode.jsx';\n\nimport styles from './controls.css';\n\nconst messages = defineMessages({\n    goTitle: {\n        id: 'gui.controls.go',\n        defaultMessage: 'Go',\n        description: 'Green flag button title'\n    },\n    stopTitle: {\n        id: 'gui.controls.stop',\n        defaultMessage: 'Stop',\n        description: 'Stop button title'\n    }\n});\n\nconst Controls = function (props) {\n    const {\n        active,\n        className,\n        intl,\n        onGreenFlagClick,\n        onStopAllClick,\n        turbo,\n        ...componentProps\n    } = props;\n    return (\n        <div\n            className={classNames(styles.controlsContainer, className)}\n            {...componentProps}\n        >\n            <GreenFlag\n                active={active}\n                title={intl.formatMessage(messages.goTitle)}\n                onClick={onGreenFlagClick}\n            />\n            <StopAll\n                active={active}\n                title={intl.formatMessage(messages.stopTitle)}\n                onClick={onStopAllClick}\n            />\n            {turbo ? (\n                <TurboMode />\n            ) : null}\n        </div>\n    );\n};\n\nControls.propTypes = {\n    active: PropTypes.bool,\n    className: PropTypes.string,\n    intl: intlShape.isRequired,\n    onGreenFlagClick: PropTypes.func.isRequired,\n    onStopAllClick: PropTypes.func.isRequired,\n    turbo: PropTypes.bool\n};\n\nControls.defaultProps = {\n    active: false,\n    turbo: false\n};\n\nexport default injectIntl(Controls);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Box from '../box/box.jsx';\nimport {FormattedMessage} from 'react-intl';\n\nimport styles from './crash-message.css';\nimport reloadIcon from './reload.svg';\n\nconst CrashMessage = props => (\n    <div className={styles.crashWrapper}>\n        <Box className={styles.body}>\n            <img\n                className={styles.reloadIcon}\n                src={reloadIcon}\n            />\n            <h2>\n                <FormattedMessage\n                    defaultMessage=\"Oops! Something went wrong.\"\n                    description=\"Crash Message title\"\n                    id=\"gui.crashMessage.label\"\n                />\n            </h2>\n            <p>\n                <FormattedMessage\n                    defaultMessage={'We are so sorry, but it looks like Scratch has crashed. This bug has been' +\n                        ' automatically reported to the Scratch Team. Please refresh your page to try' +\n                        ' again.'}\n                    description=\"Message to inform the user that page has crashed.\"\n                    id=\"gui.crashMessage.description\"\n                />\n            </p>\n            {props.eventId && (\n                <p>\n                    <FormattedMessage\n                        defaultMessage=\"Your error was logged with id {errorId}\"\n                        description=\"Message to inform the user that page has crashed.\"\n                        id=\"gui.crashMessage.errorNumber\"\n                        values={{\n                            errorId: props.eventId\n                        }}\n                    />\n                </p>\n            )}\n            <button\n                className={styles.reloadButton}\n                onClick={props.onReload}\n            >\n                <FormattedMessage\n                    defaultMessage=\"Reload\"\n                    description=\"Button to reload the page when page crashes\"\n                    id=\"gui.crashMessage.reload\"\n                />\n            </button>\n        </Box>\n    </div>\n);\n\nCrashMessage.propTypes = {\n    eventId: PropTypes.string,\n    onReload: PropTypes.func.isRequired\n};\n\nexport default CrashMessage;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\n\nimport styles from './input.css';\n\nconst Input = props => {\n    const {small, ...componentProps} = props;\n    return (\n        <input\n            {...componentProps}\n            className={classNames(\n                styles.inputForm,\n                props.className,\n                {\n                    [styles.inputSmall]: small\n                }\n            )}\n        />\n    );\n};\n\nInput.propTypes = {\n    className: PropTypes.string,\n    small: PropTypes.bool\n};\n\nInput.defaultProps = {\n    small: false\n};\n\nexport default Input;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport greenFlagIcon from './icon--green-flag.svg';\nimport styles from './green-flag.css';\n\nconst GreenFlagComponent = function (props) {\n    const {\n        active,\n        className,\n        onClick,\n        title,\n        ...componentProps\n    } = props;\n    return (\n        <img\n            className={classNames(\n                className,\n                styles.greenFlag,\n                {\n                    [styles.isActive]: active\n                }\n            )}\n            draggable={false}\n            src={greenFlagIcon}\n            title={title}\n            onClick={onClick}\n            {...componentProps}\n        />\n    );\n};\nGreenFlagComponent.propTypes = {\n    active: PropTypes.bool,\n    className: PropTypes.string,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\nGreenFlagComponent.defaultProps = {\n    active: false,\n    title: 'Go'\n};\nexport default GreenFlagComponent;\n","import classNames from 'classnames';\nimport omit from 'lodash.omit';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport MediaQuery from 'react-responsive';\nimport VM from 'scratch-vm';\nimport Renderer from 'scratch-render';\nimport {injectIntl} from 'react-intl';\n\nimport StageWrapper from '../../containers/stage-wrapper.jsx';\nimport Loader from '../loader/loader.jsx';\nimport Box from '../box/box.jsx';\n\nimport WebGlModal from '../../containers/webgl-modal.jsx';\nimport Alerts from '../../containers/alerts.jsx';\n\nimport layout, {STAGE_SIZE_MODES} from '../../lib/layout-constants';\nimport {resolveStageSize} from '../../lib/screen-utils';\n\nimport styles from './gui.css';\n\n// Cache this value to only retrieve it once the first time.\n// Assume that it doesn't change for a session.\nlet isRendererSupported = null;\n\nconst GUIComponent = props => {\n    const {\n        alertsVisible,\n        children,\n        isCreating,\n        isFullScreen,\n        isPlayerOnly,\n        isRtl,\n        loading,\n        stageSizeMode,\n        vm,\n        ...componentProps\n    } = omit(props, 'dispatch');\n    if (children) {\n        return <Box {...componentProps}>{children}</Box>;\n    }\n\n    if (isRendererSupported === null) {\n        isRendererSupported = Renderer.isSupported();\n    }\n\n    return (<MediaQuery minWidth={layout.fullSizeMinWidth}>{isFullSize => {\n        const stageSize = resolveStageSize(stageSizeMode, isFullSize);\n\n        return isPlayerOnly ? (\n            <StageWrapper\n                isFullScreen={isFullScreen}\n                isRendererSupported={isRendererSupported}\n                isRtl={isRtl}\n                loading={loading}\n                stageSize={STAGE_SIZE_MODES.large}\n                vm={vm}\n            >\n                {alertsVisible ? (\n                    <Alerts className={styles.alertsContainer} />\n                ) : null}\n            </StageWrapper>\n        ) : (\n            <Box\n                className={styles.pageWrapper}\n                dir={isRtl ? 'rtl' : 'ltr'}\n                {...componentProps}\n            >\n                \n                {loading ? (\n                    <Loader />\n                ) : null}\n                {isCreating ? (\n                    <Loader messageId=\"gui.loader.creating\" />\n                ) : null}\n                {isRendererSupported ? null : (\n                    <WebGlModal isRtl={isRtl} />\n                )}\n                <Box className={styles.bodyWrapper}>\n                    <Box className={styles.flexWrapper}>\n                        <Box className={classNames(styles.stageAndTargetWrapper, styles[stageSize])}>\n                            <StageWrapper\n                                isFullScreen\n                                isRendererSupported={isRendererSupported}\n                                isRtl={isRtl}\n                                stageSize={stageSize}\n                                vm={vm}\n                            />\n\n                        </Box>\n                    </Box>\n                </Box>\n                \n            </Box>\n        );\n    }}</MediaQuery>);\n};\n\nGUIComponent.propTypes = {\n    accountNavOpen: PropTypes.bool,\n    activeTabIndex: PropTypes.number,\n    authorId: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]), // can be false\n    authorThumbnailUrl: PropTypes.string,\n    authorUsername: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]), // can be false\n    backdropLibraryVisible: PropTypes.bool,\n    backpackHost: PropTypes.string,\n    backpackVisible: PropTypes.bool,\n    basePath: PropTypes.string,\n    blocksTabVisible: PropTypes.bool,\n    blocksId: PropTypes.string,\n    canChangeLanguage: PropTypes.bool,\n    canChangeTheme: PropTypes.bool,\n    canCreateCopy: PropTypes.bool,\n    canCreateNew: PropTypes.bool,\n    canEditTitle: PropTypes.bool,\n    canManageFiles: PropTypes.bool,\n    canRemix: PropTypes.bool,\n    canSave: PropTypes.bool,\n    canShare: PropTypes.bool,\n    canUseCloud: PropTypes.bool,\n    cardsVisible: PropTypes.bool,\n    children: PropTypes.node,\n    costumeLibraryVisible: PropTypes.bool,\n    costumesTabVisible: PropTypes.bool,\n    enableCommunity: PropTypes.bool,\n    isCreating: PropTypes.bool,\n    isFullScreen: PropTypes.bool,\n    isPlayerOnly: PropTypes.bool,\n    isRtl: PropTypes.bool,\n    isShared: PropTypes.bool,\n    isTotallyNormal: PropTypes.bool,\n    loading: PropTypes.bool,\n    logo: PropTypes.string,\n    onActivateCostumesTab: PropTypes.func,\n    onActivateSoundsTab: PropTypes.func,\n    onActivateTab: PropTypes.func,\n    onClickAccountNav: PropTypes.func,\n    onClickLogo: PropTypes.func,\n    onCloseAccountNav: PropTypes.func,\n    onExtensionButtonClick: PropTypes.func,\n    onLogOut: PropTypes.func,\n    onOpenRegistration: PropTypes.func,\n    onRequestCloseBackdropLibrary: PropTypes.func,\n    onRequestCloseCostumeLibrary: PropTypes.func,\n    onRequestCloseTelemetryModal: PropTypes.func,\n    onSeeCommunity: PropTypes.func,\n    onShare: PropTypes.func,\n    onShowPrivacyPolicy: PropTypes.func,\n    onStartSelectingFileUpload: PropTypes.func,\n    onTabSelect: PropTypes.func,\n    onTelemetryModalCancel: PropTypes.func,\n    onTelemetryModalOptIn: PropTypes.func,\n    onTelemetryModalOptOut: PropTypes.func,\n    onToggleLoginOpen: PropTypes.func,\n    renderLogin: PropTypes.func,\n    showComingSoon: PropTypes.bool,\n    soundsTabVisible: PropTypes.bool,\n    stageSizeMode: PropTypes.oneOf(Object.keys(STAGE_SIZE_MODES)),\n    targetIsStage: PropTypes.bool,\n    telemetryModalVisible: PropTypes.bool,\n    theme: PropTypes.string,\n    tipsLibraryVisible: PropTypes.bool,\n    vm: PropTypes.instanceOf(VM).isRequired\n};\nGUIComponent.defaultProps = {\n    backpackHost: null,\n    backpackVisible: false,\n    basePath: './',\n    blocksId: 'original',\n    canChangeLanguage: true,\n    canChangeTheme: true,\n    canCreateNew: false,\n    canEditTitle: false,\n    canManageFiles: true,\n    canRemix: false,\n    canSave: false,\n    canCreateCopy: false,\n    canShare: false,\n    canUseCloud: false,\n    enableCommunity: false,\n    isCreating: false,\n    isShared: false,\n    isTotallyNormal: false,\n    loading: false,\n    showComingSoon: false,\n    stageSizeMode: STAGE_SIZE_MODES.large\n};\n\nconst mapStateToProps = state => ({\n    // This is the button's mode, as opposed to the actual current state\n    blocksId: state.scratchGui.timeTravel.year.toString(),\n    stageSizeMode: state.scratchGui.stageSize.stageSize,\n    theme: state.scratchGui.theme.theme\n});\n\nexport default injectIntl(connect(\n    mapStateToProps\n)(GUIComponent));\n","import React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport classNames from 'classnames';\nimport styles from './loader.css';\nimport PropTypes from 'prop-types';\n\nimport topBlock from './top-block.svg';\nimport middleBlock from './middle-block.svg';\nimport bottomBlock from './bottom-block.svg';\nconst messages = [\n    {\n        message: (\n            <FormattedMessage\n                defaultMessage=\"Creating blocks …\"\n                description=\"One of the loading messages\"\n                id=\"gui.loader.message1\"\n            />\n        ),\n        weight: 50\n    },\n    {\n        message: (\n            <FormattedMessage\n                defaultMessage=\"Loading sprites …\"\n                description=\"One of the loading messages\"\n                id=\"gui.loader.message2\"\n            />\n        ),\n        weight: 50\n    },\n    {\n        message: (\n            <FormattedMessage\n                defaultMessage=\"Loading sounds …\"\n                description=\"One of the loading messages\"\n                id=\"gui.loader.message3\"\n            />\n        ),\n        weight: 50\n    },\n    {\n        message: (\n            <FormattedMessage\n                defaultMessage=\"Loading extensions …\"\n                description=\"One of the loading messages\"\n                id=\"gui.loader.message4\"\n            />\n        ),\n        weight: 50\n    },\n    {\n        message: (\n            <FormattedMessage\n                defaultMessage=\"Creating blocks …\"\n                description=\"One of the loading messages\"\n                id=\"gui.loader.message1\"\n            />\n        ),\n        weight: 20\n    },\n    {\n        message: (\n            <FormattedMessage\n                defaultMessage=\"Herding cats …\"\n                description=\"One of the loading messages\"\n                id=\"gui.loader.message5\"\n            />\n        ),\n        weight: 1\n    },\n    {\n        message: (\n            <FormattedMessage\n                defaultMessage=\"Transmitting nanos …\"\n                description=\"One of the loading messages\"\n                id=\"gui.loader.message6\"\n            />\n        ),\n        weight: 1\n    },\n    {\n        message: (\n            <FormattedMessage\n                defaultMessage=\"Inflating gobos …\"\n                description=\"One of the loading messages\"\n                id=\"gui.loader.message7\"\n            />\n        ),\n        weight: 1\n    },\n    {\n        message: (\n            <FormattedMessage\n                defaultMessage=\"Preparing emojis …\"\n                description=\"One of the loading messages\"\n                id=\"gui.loader.message8\"\n            />\n        ),\n        weight: 1\n    }\n];\nconst mainMessages = {\n    'gui.loader.headline': (\n        <FormattedMessage\n            defaultMessage=\"Loading Project\"\n            description=\"Main loading message\"\n            id=\"gui.loader.headline\"\n        />\n    ),\n    'gui.loader.creating': (\n        <FormattedMessage\n            defaultMessage=\"Creating Project\"\n            description=\"Main creating message\"\n            id=\"gui.loader.creating\"\n        />\n    )\n};\n\nclass LoaderComponent extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            messageNumber: this.chooseRandomMessage()\n        };\n    }\n    componentDidMount () {\n        // Start an interval to choose a new message every 5 seconds\n        this.intervalId = setInterval(() => {\n            this.setState({messageNumber: this.chooseRandomMessage()});\n        }, 5000);\n    }\n    componentWillUnmount () {\n        clearInterval(this.intervalId);\n    }\n    chooseRandomMessage () {\n        let messageNumber;\n        const sum = messages.reduce((acc, m) => acc + m.weight, 0);\n        let rand = sum * Math.random();\n        for (let i = 0; i < messages.length; i++) {\n            rand -= messages[i].weight;\n            if (rand <= 0) {\n                messageNumber = i;\n                break;\n            }\n        }\n        return messageNumber;\n    }\n    render () {\n        return (\n            <div\n                className={classNames(styles.background, {\n                    [styles.fullscreen]: this.props.isFullScreen\n                })}\n            >\n                <div className={styles.container}>\n                    <div className={styles.blockAnimation}>\n                        <img\n                            className={styles.topBlock}\n                            src={topBlock}\n                        />\n                        <img\n                            className={styles.middleBlock}\n                            src={middleBlock}\n                        />\n                        <img\n                            className={styles.bottomBlock}\n                            src={bottomBlock}\n                        />\n                    </div>\n                    <div className={styles.title}>\n                        {mainMessages[this.props.messageId]}\n                    </div>\n                    <div className={styles.messageContainerOuter}>\n                        <div\n                            className={styles.messageContainerInner}\n                            style={{transform: `translate(0, -${this.state.messageNumber * 25}px)`}}\n                        >\n                            {messages.map((m, i) => (\n                                <div\n                                    className={styles.message}\n                                    key={i}\n                                >\n                                    {m.message}\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLoaderComponent.propTypes = {\n    isFullScreen: PropTypes.bool,\n    messageId: PropTypes.string\n};\nLoaderComponent.defaultProps = {\n    isFullScreen: false,\n    messageId: 'gui.loader.headline'\n};\n\nexport default LoaderComponent;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport bindAll from 'lodash.bindall';\n\nimport Box from '../box/box.jsx';\nimport styles from './loupe.css';\n\nconst zoomScale = 3;\n\nclass LoupeComponent extends React.Component {\n    constructor (props) {\n        super(props);\n        bindAll(this, [\n            'setCanvas'\n        ]);\n    }\n    componentDidUpdate () {\n        this.draw();\n    }\n    draw () {\n        const boxSize = 6 / zoomScale;\n        const boxLineWidth = 1 / zoomScale;\n        const colorRingWidth = 15 / zoomScale;\n\n        const ctx = this.canvas.getContext('2d');\n        const {color, data, width, height} = this.props.colorInfo;\n        this.canvas.width = zoomScale * width;\n        this.canvas.height = zoomScale * height;\n\n        // In order to scale the image data, must draw to a tmp canvas first\n        const tmpCanvas = document.createElement('canvas');\n        tmpCanvas.width = width;\n        tmpCanvas.height = height;\n        const tmpCtx = tmpCanvas.getContext('2d');\n        const imageData = tmpCtx.createImageData(width, height);\n        imageData.data.set(data);\n        tmpCtx.putImageData(imageData, 0, 0);\n\n        // Scale the loupe canvas and draw the zoomed image\n        ctx.save();\n        ctx.scale(zoomScale, zoomScale);\n        ctx.drawImage(tmpCanvas, 0, 0, width, height);\n\n        // Draw an outlined square at the cursor position (cursor is hidden)\n        ctx.lineWidth = boxLineWidth;\n        ctx.strokeStyle = 'black';\n        ctx.fillStyle = `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`;\n        ctx.beginPath();\n        ctx.rect((width / 2) - (boxSize / 2), (height / 2) - (boxSize / 2), boxSize, boxSize);\n        ctx.fill();\n        ctx.stroke();\n\n        // Draw a thick ring around the loupe showing the current color\n        ctx.strokeStyle = `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`;\n        ctx.lineWidth = colorRingWidth;\n        ctx.beginPath();\n        ctx.moveTo(width, height / 2);\n        ctx.arc(width / 2, height / 2, width / 2, 0, 2 * Math.PI);\n        ctx.stroke();\n        ctx.restore();\n    }\n    setCanvas (element) {\n        this.canvas = element;\n    }\n    render () {\n        const {\n            colorInfo,\n            ...boxProps\n        } = this.props;\n        return (\n            <Box\n                {...boxProps}\n                className={styles.colorPicker}\n                componentRef={this.setCanvas}\n                element=\"canvas\"\n                height={colorInfo.height}\n                style={{\n                    top: colorInfo.y - ((zoomScale * colorInfo.height) / 2),\n                    left: colorInfo.x - ((zoomScale * colorInfo.width) / 2),\n                    width: colorInfo.width * zoomScale,\n                    height: colorInfo.height * zoomScale\n                }}\n                width={colorInfo.width}\n            />\n        );\n    }\n}\n\nLoupeComponent.propTypes = {\n    colorInfo: PropTypes.shape({\n        color: PropTypes.shape({\n            r: PropTypes.number,\n            g: PropTypes.number,\n            b: PropTypes.number,\n            a: PropTypes.number\n        }),\n        data: PropTypes.instanceOf(Uint8Array),\n        width: PropTypes.number,\n        height: PropTypes.number,\n        x: PropTypes.number,\n        y: PropTypes.number\n    })\n};\n\nexport default LoupeComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './mic-indicator.css';\nimport micIcon from './mic-indicator.svg';\nimport {stageSizeToTransform} from '../../lib/screen-utils';\n\nconst MicIndicatorComponent = props => (\n    <div\n        className={props.className}\n        style={stageSizeToTransform(props.stageSize)}\n    >\n        <img\n            className={styles.micImg}\n            src={micIcon}\n        />\n    </div>\n);\n\nMicIndicatorComponent.propTypes = {\n    className: PropTypes.string,\n    stageSize: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n        widthDefault: PropTypes.number,\n        heightDefault: PropTypes.number\n    }).isRequired\n};\n\nexport default MicIndicatorComponent;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactModal from 'react-modal';\nimport {FormattedMessage} from 'react-intl';\n\nimport Box from '../box/box.jsx';\nimport Button from '../button/button.jsx';\nimport CloseButton from '../close-button/close-button.jsx';\n\nimport backIcon from '../../lib/assets/icon--back.svg';\nimport helpIcon from '../../lib/assets/icon--help.svg';\n\nimport styles from './modal.css';\n\nconst ModalComponent = props => (\n    <ReactModal\n        isOpen\n        className={classNames(styles.modalContent, props.className, {\n            [styles.fullScreen]: props.fullScreen\n        })}\n        contentLabel={props.contentLabel}\n        overlayClassName={styles.modalOverlay}\n        onRequestClose={props.onRequestClose}\n    >\n        <Box\n            dir={props.isRtl ? 'rtl' : 'ltr'}\n            direction=\"column\"\n            grow={1}\n        >\n            <div className={classNames(styles.header, props.headerClassName)}>\n                {props.onHelp ? (\n                    <div\n                        className={classNames(\n                            styles.headerItem,\n                            styles.headerItemHelp\n                        )}\n                    >\n                        <Button\n                            className={styles.helpButton}\n                            iconSrc={helpIcon}\n                            onClick={props.onHelp}\n                        >\n                            <FormattedMessage\n                                defaultMessage=\"Help\"\n                                description=\"Help button in modal\"\n                                id=\"gui.modal.help\"\n                            />\n                        </Button>\n                    </div>\n                ) : null}\n                <div\n                    className={classNames(\n                        styles.headerItem,\n                        styles.headerItemTitle\n                    )}\n                >\n                    {props.headerImage ? (\n                        <img\n                            className={styles.headerImage}\n                            src={props.headerImage}\n                        />\n                    ) : null}\n                    {props.contentLabel}\n                </div>\n                <div\n                    className={classNames(\n                        styles.headerItem,\n                        styles.headerItemClose\n                    )}\n                >\n                    {props.fullScreen ? (\n                        <Button\n                            className={styles.backButton}\n                            iconSrc={backIcon}\n                            onClick={props.onRequestClose}\n                        >\n                            <FormattedMessage\n                                defaultMessage=\"Back\"\n                                description=\"Back button in modal\"\n                                id=\"gui.modal.back\"\n                            />\n                        </Button>\n                    ) : (\n                        <CloseButton\n                            size={CloseButton.SIZE_LARGE}\n                            onClick={props.onRequestClose}\n                        />\n                    )}\n                </div>\n            </div>\n            {props.children}\n        </Box>\n    </ReactModal>\n);\n\nModalComponent.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    contentLabel: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object\n    ]).isRequired,\n    fullScreen: PropTypes.bool,\n    headerClassName: PropTypes.string,\n    headerImage: PropTypes.string,\n    isRtl: PropTypes.bool,\n    onHelp: PropTypes.func,\n    onRequestClose: PropTypes.func\n};\n\nexport default ModalComponent;\n","import React from 'react';\nimport classNames from 'classnames';\nimport Box from '../box/box.jsx';\nimport Monitor from '../../containers/monitor.jsx';\nimport PropTypes from 'prop-types';\nimport {OrderedMap} from 'immutable';\nimport {stageSizeToTransform} from '../../lib/screen-utils';\n\nimport styles from './monitor-list.css';\n\nconst MonitorList = props => (\n    <Box\n        // Use static `monitor-overlay` class for bounds of draggables\n        className={classNames(styles.monitorList, 'monitor-overlay')}\n        style={{\n            width: props.stageSize.width,\n            height: props.stageSize.height\n        }}\n    >\n        <Box\n            className={styles.monitorListScaler}\n            style={stageSizeToTransform(props.stageSize)}\n        >\n            {props.monitors.valueSeq().filter(m => m.visible)\n                .map(monitorData => (\n                    <Monitor\n                        draggable={props.draggable}\n                        height={monitorData.height}\n                        id={monitorData.id}\n                        isDiscrete={monitorData.isDiscrete}\n                        key={monitorData.id}\n                        max={monitorData.sliderMax}\n                        min={monitorData.sliderMin}\n                        mode={monitorData.mode}\n                        opcode={monitorData.opcode}\n                        params={monitorData.params}\n                        spriteName={monitorData.spriteName}\n                        targetId={monitorData.targetId}\n                        value={monitorData.value}\n                        width={monitorData.width}\n                        x={monitorData.x}\n                        y={monitorData.y}\n                        onDragEnd={props.onMonitorChange}\n                    />\n                ))}\n        </Box>\n    </Box>\n);\n\nMonitorList.propTypes = {\n    draggable: PropTypes.bool.isRequired,\n    monitors: PropTypes.instanceOf(OrderedMap),\n    onMonitorChange: PropTypes.func.isRequired,\n    stageSize: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n        widthDefault: PropTypes.number,\n        heightDefault: PropTypes.number\n    }).isRequired\n};\n\nexport default MonitorList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './monitor.css';\n\nconst DefaultMonitor = ({categoryColor, label, value}) => (\n    <div className={styles.defaultMonitor}>\n        <div className={styles.row}>\n            <div className={styles.label}>\n                {label}\n            </div>\n            <div\n                className={styles.value}\n                style={{\n                    background: categoryColor.background,\n                    color: categoryColor.text\n                }}\n            >\n                {value}\n            </div>\n        </div>\n    </div>\n);\n\nDefaultMonitor.propTypes = {\n    categoryColor: PropTypes.shape({\n        background: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired\n    }).isRequired,\n    label: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ])\n};\n\nexport default DefaultMonitor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './monitor.css';\n\nconst LargeMonitor = ({categoryColor, value}) => (\n    <div className={styles.largeMonitor}>\n        <div\n            className={styles.largeValue}\n            style={{\n                background: categoryColor.background,\n                color: categoryColor.text\n            }}\n        >\n            {value}\n        </div>\n    </div>\n);\n\nLargeMonitor.propTypes = {\n    categoryColor: PropTypes.shape({\n        background: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired\n    }).isRequired,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ])\n};\n\nexport default LargeMonitor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport bindAll from 'lodash.bindall';\nimport {FormattedMessage} from 'react-intl';\n\nimport styles from './monitor.css';\nimport {List} from 'react-virtualized';\n\nclass ListMonitorScroller extends React.Component {\n    constructor (props) {\n        super(props);\n        bindAll(this, [\n            'rowRenderer',\n            'noRowsRenderer',\n            'handleEventFactory'\n        ]);\n    }\n    handleEventFactory (index) {\n        return () => this.props.onActivate(index);\n    }\n    noRowsRenderer () {\n        return (\n            <div className={classNames(styles.listRow, styles.listEmpty)}>\n                <FormattedMessage\n                    defaultMessage=\"(empty)\"\n                    description=\"Text shown on a list monitor when a list is empty\"\n                    id=\"gui.monitor.listMonitor.empty\"\n                />\n            </div>\n        );\n    }\n    rowRenderer ({index, key, style}) {\n        return (\n            <div\n                className={styles.listRow}\n                key={key}\n                style={style}\n            >\n                <div className={styles.listIndex}>{index + 1 /* one indexed */}</div>\n                <div\n                    className={styles.listValue}\n                    dataIndex={index}\n                    style={{\n                        background: this.props.categoryColor.background,\n                        color: this.props.categoryColor.text\n                    }}\n                    onClick={this.props.draggable ? this.handleEventFactory(index) : null}\n                >\n                    {this.props.draggable && this.props.activeIndex === index ? (\n                        <div className={styles.inputWrapper}>\n                            <input\n                                autoFocus\n                                autoComplete={false}\n                                className={classNames(styles.listInput, 'no-drag')}\n                                spellCheck={false}\n                                style={{color: this.props.categoryColor.text}}\n                                type=\"text\"\n                                value={this.props.activeValue}\n                                onBlur={this.props.onDeactivate}\n                                onChange={this.props.onInput}\n                                onFocus={this.props.onFocus}\n                                onKeyDown={this.props.onKeyPress} // key down to get ahead of blur\n                            />\n                            <div\n                                className={styles.removeButton}\n                                onMouseDown={this.props.onRemove} // mousedown to get ahead of blur\n                            >\n                                {'✖︎'}\n                            </div>\n                        </div>\n\n                    ) : (\n                        <div className={styles.valueInner}>{this.props.values[index]}</div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n    render () {\n        const {height, values, width, activeIndex, activeValue} = this.props;\n        // Keep the active index in view if defined, else must be undefined for List component\n        const scrollToIndex = activeIndex === null ? undefined : activeIndex; /* eslint-disable-line no-undefined */\n        return (\n            <List\n                activeIndex={activeIndex}\n                activeValue={activeValue}\n                height={(height) - 44 /* Header/footer size, approx */}\n                noRowsRenderer={this.noRowsRenderer}\n                rowCount={values.length}\n                rowHeight={24 /* Row size is same for all rows */}\n                rowRenderer={this.rowRenderer}\n                scrollToIndex={scrollToIndex} /* eslint-disable-line no-undefined */\n                values={values}\n                width={width}\n            />\n        );\n    }\n}\n\nListMonitorScroller.propTypes = {\n    activeIndex: PropTypes.number,\n    activeValue: PropTypes.string,\n    categoryColor: PropTypes.shape({\n        background: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired\n    }).isRequired,\n    draggable: PropTypes.bool,\n    height: PropTypes.number,\n    onActivate: PropTypes.func,\n    onDeactivate: PropTypes.func,\n    onFocus: PropTypes.func,\n    onInput: PropTypes.func,\n    onKeyPress: PropTypes.func,\n    onRemove: PropTypes.func,\n    values: PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ])),\n    width: PropTypes.number\n};\nexport default ListMonitorScroller;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {FormattedMessage} from 'react-intl';\nimport styles from './monitor.css';\nimport ListMonitorScroller from './list-monitor-scroller.jsx';\n\nconst ListMonitor = ({draggable, label, width, height, value, onResizeMouseDown, onAdd, ...rowProps}) => (\n    <div\n        className={styles.listMonitor}\n        style={{\n            width: `${width}px`,\n            height: `${height}px`\n        }}\n    >\n        <div className={styles.listHeader}>\n            {label}\n        </div>\n        <div className={styles.listBody}>\n            <ListMonitorScroller\n                draggable={draggable}\n                height={height}\n                values={value}\n                width={width}\n                {...rowProps}\n            />\n        </div>\n        <div className={styles.listFooter}>\n            <div\n                className={classNames(draggable ? styles.addButton : null, 'no-drag')}\n                onClick={draggable ? onAdd : null}\n            >\n                {'+' /* TODO waiting on asset */}\n            </div>\n            <div className={styles.footerLength}>\n                <FormattedMessage\n                    defaultMessage=\"length {length}\"\n                    description=\"Length label on list monitors. DO NOT translate {length} (with brackets).\"\n                    id=\"gui.monitor.listMonitor.listLength\"\n                    values={{\n                        length: value.length\n                    }}\n                />\n            </div>\n            <div\n                className={classNames(draggable ? styles.resizeHandle : null, 'no-drag')}\n                onMouseDown={draggable ? onResizeMouseDown : null}\n            >\n                {'=' /* TODO waiting on asset */}\n            </div>\n        </div>\n    </div>\n);\n\nListMonitor.propTypes = {\n    activeIndex: PropTypes.number,\n    categoryColor: PropTypes.shape({\n        background: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired\n    }).isRequired,\n    draggable: PropTypes.bool.isRequired,\n    height: PropTypes.number,\n    label: PropTypes.string.isRequired,\n    onActivate: PropTypes.func,\n    onAdd: PropTypes.func,\n    onResizeMouseDown: PropTypes.func,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.arrayOf(PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number\n        ]))\n    ]),\n    width: PropTypes.number\n};\n\nListMonitor.defaultProps = {\n    width: 110,\n    height: 200\n};\n\nexport default ListMonitor;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Draggable from 'react-draggable';\nimport {FormattedMessage} from 'react-intl';\nimport {ContextMenuTrigger} from 'react-contextmenu';\nimport {BorderedMenuItem, ContextMenu, MenuItem} from '../context-menu/context-menu.jsx';\nimport Box from '../box/box.jsx';\nimport DefaultMonitor from './default-monitor.jsx';\nimport LargeMonitor from './large-monitor.jsx';\nimport SliderMonitor from '../../containers/slider-monitor.jsx';\nimport ListMonitor from '../../containers/list-monitor.jsx';\nimport {getColorsForTheme} from '../../lib/themes/index.js';\n\nimport styles from './monitor.css';\n\n// Map category name to color name used in scratch-blocks Blockly.Colours\nconst categoryColorMap = {\n    data: 'data',\n    sensing: 'sensing',\n    sound: 'sounds',\n    looks: 'looks',\n    motion: 'motion',\n    list: 'data_lists',\n    extension: 'pen'\n};\n\nconst modes = {\n    default: DefaultMonitor,\n    large: LargeMonitor,\n    slider: SliderMonitor,\n    list: ListMonitor\n};\n\nconst getCategoryColor = (theme, category) => {\n    const colors = getColorsForTheme(theme);\n    return {\n        background: colors[categoryColorMap[category]].primary,\n        text: colors.text\n    };\n};\n\nconst MonitorComponent = props => (\n    <ContextMenuTrigger\n        disable={!props.draggable}\n        holdToDisplay={props.mode === 'slider' ? -1 : 1000}\n        id={`monitor-${props.label}`}\n    >\n        <Draggable\n            bounds=\".monitor-overlay\" // Class for monitor container\n            cancel=\".no-drag\" // Class used for slider input to prevent drag\n            defaultClassNameDragging={styles.dragging}\n            disabled={!props.draggable}\n            onStop={props.onDragEnd}\n        >\n            <Box\n                className={styles.monitorContainer}\n                componentRef={props.componentRef}\n                onDoubleClick={props.mode === 'list' || !props.draggable ? null : props.onNextMode}\n            >\n                {React.createElement(modes[props.mode], {\n                    categoryColor: getCategoryColor(props.theme, props.category),\n                    ...props\n                })}\n            </Box>\n        </Draggable>\n        {ReactDOM.createPortal((\n            // Use a portal to render the context menu outside the flow to avoid\n            // positioning conflicts between the monitors `transform: scale` and\n            // the context menus `position: fixed`. For more details, see\n            // http://meyerweb.com/eric/thoughts/2011/09/12/un-fixing-fixed-elements-with-css-transforms/\n            <ContextMenu id={`monitor-${props.label}`}>\n                {props.onSetModeToDefault &&\n                    <MenuItem onClick={props.onSetModeToDefault}>\n                        <FormattedMessage\n                            defaultMessage=\"normal readout\"\n                            description=\"Menu item to switch to the default monitor\"\n                            id=\"gui.monitor.contextMenu.default\"\n                        />\n                    </MenuItem>}\n                {props.onSetModeToLarge &&\n                    <MenuItem onClick={props.onSetModeToLarge}>\n                        <FormattedMessage\n                            defaultMessage=\"large readout\"\n                            description=\"Menu item to switch to the large monitor\"\n                            id=\"gui.monitor.contextMenu.large\"\n                        />\n                    </MenuItem>}\n                {props.onSetModeToSlider &&\n                    <MenuItem onClick={props.onSetModeToSlider}>\n                        <FormattedMessage\n                            defaultMessage=\"slider\"\n                            description=\"Menu item to switch to the slider monitor\"\n                            id=\"gui.monitor.contextMenu.slider\"\n                        />\n                    </MenuItem>}\n                {props.onSliderPromptOpen && props.mode === 'slider' &&\n                    <BorderedMenuItem onClick={props.onSliderPromptOpen}>\n                        <FormattedMessage\n                            defaultMessage=\"change slider range\"\n                            description=\"Menu item to change the slider range\"\n                            id=\"gui.monitor.contextMenu.sliderRange\"\n                        />\n                    </BorderedMenuItem>}\n                {props.onImport &&\n                    <MenuItem onClick={props.onImport}>\n                        <FormattedMessage\n                            defaultMessage=\"import\"\n                            description=\"Menu item to import into list monitors\"\n                            id=\"gui.monitor.contextMenu.import\"\n                        />\n                    </MenuItem>}\n                {props.onExport &&\n                    <MenuItem onClick={props.onExport}>\n                        <FormattedMessage\n                            defaultMessage=\"export\"\n                            description=\"Menu item to export from list monitors\"\n                            id=\"gui.monitor.contextMenu.export\"\n                        />\n                    </MenuItem>}\n                {props.onHide &&\n                    <BorderedMenuItem onClick={props.onHide}>\n                        <FormattedMessage\n                            defaultMessage=\"hide\"\n                            description=\"Menu item to hide the monitor\"\n                            id=\"gui.monitor.contextMenu.hide\"\n                        />\n                    </BorderedMenuItem>}\n            </ContextMenu>\n        ), document.body)}\n    </ContextMenuTrigger>\n\n);\n\nconst monitorModes = Object.keys(modes);\n\nMonitorComponent.propTypes = {\n    category: PropTypes.oneOf(Object.keys(categoryColorMap)),\n    componentRef: PropTypes.func.isRequired,\n    draggable: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    mode: PropTypes.oneOf(monitorModes),\n    onDragEnd: PropTypes.func.isRequired,\n    onExport: PropTypes.func,\n    onImport: PropTypes.func,\n    onHide: PropTypes.func,\n    onNextMode: PropTypes.func.isRequired,\n    onSetModeToDefault: PropTypes.func,\n    onSetModeToLarge: PropTypes.func,\n    onSetModeToSlider: PropTypes.func,\n    onSliderPromptOpen: PropTypes.func,\n    theme: PropTypes.string.isRequired\n};\n\nMonitorComponent.defaultProps = {\n    category: 'extension',\n    mode: 'default'\n};\n\nexport {\n    MonitorComponent as default,\n    monitorModes\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport styles from './monitor.css';\n\nconst SliderMonitor = ({categoryColor, isDiscrete, label, min, max, value, onSliderUpdate}) => (\n    <div className={styles.defaultMonitor}>\n        <div className={styles.row}>\n            <div className={styles.label}>\n                {label}\n            </div>\n            <div\n                className={styles.value}\n                style={{\n                    background: categoryColor.background,\n                    color: categoryColor.text\n                }}\n            >\n                {value}\n            </div>\n        </div>\n        <div className={styles.row}>\n            <input\n                className={classNames(styles.slider, 'no-drag')} // Class used on parent Draggable to prevent drags\n                max={max}\n                min={min}\n                step={isDiscrete ? 1 : 0.01}\n                type=\"range\"\n                value={value}\n                onChange={onSliderUpdate}\n            />\n        </div>\n\n    </div>\n);\n\nSliderMonitor.propTypes = {\n    categoryColor: PropTypes.shape({\n        background: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired\n    }).isRequired,\n    isDiscrete: PropTypes.bool,\n    label: PropTypes.string.isRequired,\n    max: PropTypes.number,\n    min: PropTypes.number,\n    onSliderUpdate: PropTypes.func.isRequired,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ])\n};\n\nSliderMonitor.defaultProps = {\n    isDiscrete: true,\n    min: 0,\n    max: 100\n};\n\nexport default SliderMonitor;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './question.css';\nimport Input from '../forms/input.jsx';\nimport enterIcon from './icon--enter.svg';\n\nconst QuestionComponent = props => {\n    const {\n        answer,\n        className,\n        question,\n        onChange,\n        onClick,\n        onKeyPress\n    } = props;\n    return (\n        <div className={className}>\n            <div className={styles.questionContainer}>\n                {question ? (\n                    <div className={styles.questionLabel}>{question}</div>\n                ) : null}\n                <div className={styles.questionInput}>\n                    <Input\n                        autoFocus\n                        value={answer}\n                        onChange={onChange}\n                        onKeyPress={onKeyPress}\n                    />\n                    <button\n                        className={styles.questionSubmitButton}\n                        onClick={onClick}\n                    >\n                        <img\n                            className={styles.questionSubmitButtonIcon}\n                            draggable={false}\n                            src={enterIcon}\n                        />\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nQuestionComponent.propTypes = {\n    answer: PropTypes.string,\n    className: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onKeyPress: PropTypes.func.isRequired,\n    question: PropTypes.string\n};\n\nexport default QuestionComponent;\n","import {defineMessages, FormattedMessage, intlShape, injectIntl} from 'react-intl';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Box from '../box/box.jsx';\nimport Modal from '../../containers/modal.jsx';\n\nimport styles from './slider-prompt.css';\n\n\nconst messages = defineMessages({\n    minValue: {\n        defaultMessage: 'Minimum value',\n        description: 'Label of slider modal',\n        id: 'gui.sliderModal.min'\n    },\n    maxValue: {\n        defaultMessage: 'Maximum value',\n        description: 'Label of slider modal',\n        id: 'gui.sliderModal.max'\n    },\n    title: {\n        defaultMessage: 'Change slider range',\n        description: 'Title of slider modal',\n        id: 'gui.sliderModal.title'\n    }\n});\n\nconst SliderPromptComponent = props => (\n    <Modal\n        className={styles.modalContent}\n        contentLabel={props.intl.formatMessage(messages.title)}\n        id=\"sliderPrompt\"\n        onRequestClose={props.onCancel}\n    >\n        <Box className={styles.body}>\n            <Box className={styles.label}>\n                {props.intl.formatMessage(messages.minValue)}\n            </Box>\n            <Box>\n                <input\n                    className={styles.minInput}\n                    name={props.intl.formatMessage(messages.minValue)}\n                    pattern=\"-?[0-9]*(\\.[0-9]+)?\"\n                    type=\"text\"\n                    value={props.minValue}\n                    onChange={props.onChangeMin}\n                    onKeyPress={props.onKeyPress}\n                />\n            </Box>\n            <Box className={styles.label}>\n                {props.intl.formatMessage(messages.maxValue)}\n            </Box>\n            <Box>\n                <input\n                    className={styles.maxInput}\n                    name={props.intl.formatMessage(messages.maxValue)}\n                    pattern=\"-?[0-9]*(\\.[0-9]+)?\"\n                    type=\"text\"\n                    value={props.maxValue}\n                    onChange={props.onChangeMax}\n                    onKeyPress={props.onKeyPress}\n                />\n            </Box>\n            <Box className={styles.buttonRow}>\n                <button\n                    className={styles.cancelButton}\n                    onClick={props.onCancel}\n                >\n                    <FormattedMessage\n                        defaultMessage=\"Cancel\"\n                        description=\"Button in prompt for cancelling the dialog\"\n                        id=\"gui.sliderPrompt.cancel\"\n                    />\n                </button>\n                <button\n                    className={styles.okButton}\n                    onClick={props.onOk}\n                >\n                    <FormattedMessage\n                        defaultMessage=\"OK\"\n                        description=\"Button in prompt for confirming the dialog\"\n                        id=\"gui.sliderPrompt.ok\"\n                    />\n                </button>\n            </Box>\n        </Box>\n    </Modal>\n);\n\nSliderPromptComponent.propTypes = {\n    intl: intlShape,\n    maxValue: PropTypes.string,\n    minValue: PropTypes.string,\n    onCancel: PropTypes.func.isRequired,\n    onChangeMax: PropTypes.func.isRequired,\n    onChangeMin: PropTypes.func.isRequired,\n    onKeyPress: PropTypes.func.isRequired,\n    onOk: PropTypes.func.isRequired\n};\n\nexport default injectIntl(SliderPromptComponent);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport styles from './spinner.css';\n\nconst SpinnerComponent = function (props) {\n    const {\n        className,\n        level,\n        small,\n        large\n    } = props;\n    return (\n        <div\n            className={classNames(\n                className,\n                styles.spinner,\n                styles[level],\n                {\n                    [styles.small]: small,\n                    [styles.large]: large\n                }\n            )}\n        />\n    );\n};\nSpinnerComponent.propTypes = {\n    className: PropTypes.string,\n    large: PropTypes.bool,\n    level: PropTypes.string,\n    small: PropTypes.bool\n};\nSpinnerComponent.defaultProps = {\n    className: '',\n    large: false,\n    level: 'info',\n    small: false\n};\nexport default SpinnerComponent;\n","import {defineMessages, injectIntl, intlShape} from 'react-intl';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport VM from 'scratch-vm';\n\nimport Box from '../box/box.jsx';\nimport Button from '../button/button.jsx';\nimport ToggleButtons from '../toggle-buttons/toggle-buttons.jsx';\nimport Controls from '../../containers/controls.jsx';\nimport {getStageDimensions} from '../../lib/screen-utils';\nimport {STAGE_SIZE_MODES} from '../../lib/layout-constants';\n\nimport fullScreenIcon from './icon--fullscreen.svg';\nimport largeStageIcon from './icon--large-stage.svg';\nimport smallStageIcon from './icon--small-stage.svg';\nimport unFullScreenIcon from './icon--unfullscreen.svg';\n\nimport scratchLogo from '../menu-bar/scratch-logo.svg';\nimport styles from './stage-header.css';\n\nconst messages = defineMessages({\n    largeStageSizeMessage: {\n        defaultMessage: 'Switch to large stage',\n        description: 'Button to change stage size to large',\n        id: 'gui.stageHeader.stageSizeLarge'\n    },\n    smallStageSizeMessage: {\n        defaultMessage: 'Switch to small stage',\n        description: 'Button to change stage size to small',\n        id: 'gui.stageHeader.stageSizeSmall'\n    },\n    fullStageSizeMessage: {\n        defaultMessage: 'Enter full screen mode',\n        description: 'Button to change stage size to full screen',\n        id: 'gui.stageHeader.stageSizeFull'\n    },\n    unFullStageSizeMessage: {\n        defaultMessage: 'Exit full screen mode',\n        description: 'Button to get out of full screen mode',\n        id: 'gui.stageHeader.stageSizeUnFull'\n    },\n    fullscreenControl: {\n        defaultMessage: 'Full Screen Control',\n        description: 'Button to enter/exit full screen mode',\n        id: 'gui.stageHeader.fullscreenControl'\n    }\n});\n\nconst StageHeaderComponent = function (props) {\n    const {\n        isFullScreen,\n        isPlayerOnly,\n        onKeyPress,\n        onSetStageLarge,\n        onSetStageSmall,\n        onSetStageFull,\n        onSetStageUnFull,\n        showBranding,\n        stageSizeMode,\n        vm\n    } = props;\n\n    let header = null;\n\n    if (isFullScreen) {\n        const stageDimensions = getStageDimensions(null, true);\n        const stageButton = showBranding ? (\n            <div className={styles.embedScratchLogo}>\n                <a\n                    href=\"https://scratch.mit.edu\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    <img\n                        alt=\"Scratch\"\n                        src={scratchLogo}\n                    />\n                </a>\n            </div>\n        ) : (\n            <div className={styles.unselectWrapper}>\n                <Button\n                    className={styles.stageButton}\n                    onClick={onSetStageUnFull}\n                    onKeyPress={onKeyPress}\n                >\n                    <img\n                        alt={props.intl.formatMessage(messages.unFullStageSizeMessage)}\n                        className={styles.stageButtonIcon}\n                        draggable={false}\n                        src={unFullScreenIcon}\n                        title={props.intl.formatMessage(messages.fullscreenControl)}\n                    />\n                </Button>\n            </div>\n        );\n        header = (\n            <Box className={styles.stageHeaderWrapperOverlay}>\n                <Box\n                    className={styles.stageMenuWrapper}\n                    style={{width: stageDimensions.width}}\n                >\n                    <Controls vm={vm} />\n                    {stageButton}\n                </Box>\n            </Box>\n        );\n    } else {\n        const stageControls =\n            isPlayerOnly ? (\n                []\n            ) : (\n                <div className={styles.stageSizeToggleGroup}>\n                    <ToggleButtons\n                        buttons={[\n                            {\n                                handleClick: onSetStageSmall,\n                                icon: smallStageIcon,\n                                iconClassName: styles.stageButtonIcon,\n                                isSelected: stageSizeMode === STAGE_SIZE_MODES.small,\n                                title: props.intl.formatMessage(messages.smallStageSizeMessage)\n                            },\n                            {\n                                handleClick: onSetStageLarge,\n                                icon: largeStageIcon,\n                                iconClassName: styles.stageButtonIcon,\n                                isSelected: stageSizeMode === STAGE_SIZE_MODES.large,\n                                title: props.intl.formatMessage(messages.largeStageSizeMessage)\n                            }\n                        ]}\n                    />\n                </div>\n            );\n        header = (\n            <Box className={styles.stageHeaderWrapper}>\n                <Box className={styles.stageMenuWrapper}>\n                    <Controls vm={vm} />\n                    <div className={styles.stageSizeRow}>\n                        {stageControls}\n                        <div>\n                            <Button\n                                className={styles.stageButton}\n                                onClick={onSetStageFull}\n                            >\n                                <img\n                                    alt={props.intl.formatMessage(messages.fullStageSizeMessage)}\n                                    className={styles.stageButtonIcon}\n                                    draggable={false}\n                                    src={fullScreenIcon}\n                                    title={props.intl.formatMessage(messages.fullscreenControl)}\n                                />\n                            </Button>\n                        </div>\n                    </div>\n                </Box>\n            </Box>\n        );\n    }\n\n    return header;\n};\n\nconst mapStateToProps = state => ({\n    // This is the button's mode, as opposed to the actual current state\n    stageSizeMode: state.scratchGui.stageSize.stageSize\n});\n\nStageHeaderComponent.propTypes = {\n    intl: intlShape,\n    isFullScreen: PropTypes.bool.isRequired,\n    isPlayerOnly: PropTypes.bool.isRequired,\n    onKeyPress: PropTypes.func.isRequired,\n    onSetStageFull: PropTypes.func.isRequired,\n    onSetStageLarge: PropTypes.func.isRequired,\n    onSetStageSmall: PropTypes.func.isRequired,\n    onSetStageUnFull: PropTypes.func.isRequired,\n    showBranding: PropTypes.bool.isRequired,\n    stageSizeMode: PropTypes.oneOf(Object.keys(STAGE_SIZE_MODES)),\n    vm: PropTypes.instanceOf(VM).isRequired\n};\n\nStageHeaderComponent.defaultProps = {\n    stageSizeMode: STAGE_SIZE_MODES.large\n};\n\nexport default injectIntl(connect(\n    mapStateToProps\n)(StageHeaderComponent));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport VM from 'scratch-vm';\n\nimport Box from '../box/box.jsx';\nimport {STAGE_DISPLAY_SIZES} from '../../lib/layout-constants.js';\nimport StageHeader from '../../containers/stage-header.jsx';\nimport Stage from '../../containers/stage.jsx';\nimport Loader from '../loader/loader.jsx';\n\nimport styles from './stage-wrapper.css';\n\nconst StageWrapperComponent = function (props) {\n    const {\n        isFullScreen,\n        isRtl,\n        isRendererSupported,\n        loading,\n        stageSize,\n        vm\n    } = props;\n\n    return (\n        <Box\n            className={classNames(\n                styles.stageWrapper,\n                {[styles.fullScreen]: isFullScreen}\n            )}\n            dir={isRtl ? 'rtl' : 'ltr'}\n        >\n            <Box className={styles.stageMenuWrapper}>\n                <StageHeader\n                    stageSize={stageSize}\n                    vm={vm}\n                />\n            </Box>\n            <Box className={styles.stageCanvasWrapper}>\n                {\n                    isRendererSupported ?\n                        <Stage\n                            stageSize={stageSize}\n                            vm={vm}\n                        /> :\n                        null\n                }\n            </Box>\n            {loading ? (\n                <Loader isFullScreen={isFullScreen} />\n            ) : null}\n        </Box>\n    );\n};\n\nStageWrapperComponent.propTypes = {\n    isFullScreen: PropTypes.bool,\n    isRendererSupported: PropTypes.bool.isRequired,\n    isRtl: PropTypes.bool.isRequired,\n    loading: PropTypes.bool,\n    stageSize: PropTypes.oneOf(Object.keys(STAGE_DISPLAY_SIZES)).isRequired,\n    vm: PropTypes.instanceOf(VM).isRequired\n};\n\nexport default StageWrapperComponent;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\n\nimport Box from '../box/box.jsx';\nimport DOMElementRenderer from '../../containers/dom-element-renderer.jsx';\nimport Loupe from '../loupe/loupe.jsx';\nimport MonitorList from '../../containers/monitor-list.jsx';\nimport TargetHighlight from '../../containers/target-highlight.jsx';\nimport GreenFlagOverlay from '../../containers/green-flag-overlay.jsx';\nimport Question from '../../containers/question.jsx';\nimport MicIndicator from '../mic-indicator/mic-indicator.jsx';\nimport {STAGE_DISPLAY_SIZES} from '../../lib/layout-constants.js';\nimport {getStageDimensions} from '../../lib/screen-utils.js';\nimport styles from './stage.css';\n\nconst StageComponent = props => {\n    const {\n        canvas,\n        dragRef,\n        isColorPicking,\n        isFullScreen,\n        isStarted,\n        colorInfo,\n        micIndicator,\n        question,\n        stageSize,\n        useEditorDragStyle,\n        onDeactivateColorPicker,\n        onDoubleClick,\n        onQuestionAnswered,\n        ...boxProps\n    } = props;\n\n    const stageDimensions = getStageDimensions(stageSize, isFullScreen);\n\n    return (\n        <React.Fragment>\n            <Box\n                className={classNames(\n                    styles.stageWrapper,\n                    {[styles.withColorPicker]: !isFullScreen && isColorPicking})}\n                onDoubleClick={onDoubleClick}\n            >\n                <Box\n                    className={classNames(\n                        styles.stage,\n                        {[styles.fullScreen]: isFullScreen}\n                    )}\n                    style={{\n                        height: stageDimensions.height,\n                        width: stageDimensions.width\n                    }}\n                >\n                    <DOMElementRenderer\n                        domElement={canvas}\n                        style={{\n                            height: stageDimensions.height,\n                            width: stageDimensions.width\n                        }}\n                        {...boxProps}\n                    />\n                    <Box className={styles.monitorWrapper}>\n                        <MonitorList\n                            draggable={useEditorDragStyle}\n                            stageSize={stageDimensions}\n                        />\n                    </Box>\n                    <Box className={styles.frameWrapper}>\n                        <TargetHighlight\n                            className={styles.frame}\n                            stageHeight={stageDimensions.height}\n                            stageWidth={stageDimensions.width}\n                        />\n                    </Box>\n                    {isColorPicking && colorInfo ? (\n                        <Loupe colorInfo={colorInfo} />\n                    ) : null}\n                </Box>\n\n                {/* `stageOverlays` is for items that should *not* have their overflow contained within the stage */}\n                <Box\n                    className={classNames(\n                        styles.stageOverlays,\n                        {[styles.fullScreen]: isFullScreen}\n                    )}\n                >\n                    <div\n                        className={styles.stageBottomWrapper}\n                        style={{\n                            width: stageDimensions.width,\n                            height: stageDimensions.height\n                        }}\n                    >\n                        {micIndicator ? (\n                            <MicIndicator\n                                className={styles.micIndicator}\n                                stageSize={stageDimensions}\n                            />\n                        ) : null}\n                        {question === null ? null : (\n                            <div\n                                className={styles.questionWrapper}\n                                style={{width: stageDimensions.width}}\n                            >\n                                <Question\n                                    question={question}\n                                    onQuestionAnswered={onQuestionAnswered}\n                                />\n                            </div>\n                        )}\n                    </div>\n                    <canvas\n                        className={styles.draggingSprite}\n                        height={0}\n                        ref={dragRef}\n                        width={0}\n                    />\n                </Box>\n                {isStarted ? null : (\n                    <GreenFlagOverlay\n                        className={styles.greenFlagOverlay}\n                        wrapperClass={styles.greenFlagOverlayWrapper}\n                    />\n                )}\n            </Box>\n            {isColorPicking ? (\n                <Box\n                    className={styles.colorPickerBackground}\n                    onClick={onDeactivateColorPicker}\n                />\n            ) : null}\n        </React.Fragment>\n    );\n};\nStageComponent.propTypes = {\n    canvas: PropTypes.instanceOf(Element).isRequired,\n    colorInfo: Loupe.propTypes.colorInfo,\n    dragRef: PropTypes.func,\n    isColorPicking: PropTypes.bool,\n    isFullScreen: PropTypes.bool.isRequired,\n    isStarted: PropTypes.bool,\n    micIndicator: PropTypes.bool,\n    onDeactivateColorPicker: PropTypes.func,\n    onDoubleClick: PropTypes.func,\n    onQuestionAnswered: PropTypes.func,\n    question: PropTypes.string,\n    stageSize: PropTypes.oneOf(Object.keys(STAGE_DISPLAY_SIZES)).isRequired,\n    useEditorDragStyle: PropTypes.bool\n};\nStageComponent.defaultProps = {\n    dragRef: () => {}\n};\nexport default StageComponent;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport stopAllIcon from './icon--stop-all.svg';\nimport styles from './stop-all.css';\n\nconst StopAllComponent = function (props) {\n    const {\n        active,\n        className,\n        onClick,\n        title,\n        ...componentProps\n    } = props;\n    return (\n        <img\n            className={classNames(\n                className,\n                styles.stopAll,\n                {\n                    [styles.isActive]: active\n                }\n            )}\n            draggable={false}\n            src={stopAllIcon}\n            title={title}\n            onClick={onClick}\n            {...componentProps}\n        />\n    );\n};\n\nStopAllComponent.propTypes = {\n    active: PropTypes.bool,\n    className: PropTypes.string,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nStopAllComponent.defaultProps = {\n    active: false,\n    title: 'Stop'\n};\n\nexport default StopAllComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport styles from './toggle-buttons.css';\n\nconst ToggleButtons = ({buttons, className, disabled}) => (\n    <div\n        className={classNames(\n            className,\n            styles.row,\n            {\n                [styles.disabled]: disabled\n            }\n        )}\n    >\n        {buttons.map((button, index) => (\n            <button\n                key={`toggle-${index}`}\n                className={styles.button}\n                title={button.title}\n                aria-label={button.title}\n                aria-pressed={button.isSelected}\n                onClick={button.handleClick}\n                disabled={disabled}\n            >\n                <img\n                    src={button.icon}\n                    aria-hidden=\"true\"\n                    className={button.iconClassName}\n                />\n            </button>\n        ))}\n    </div>\n);\n\nToggleButtons.propTypes = {\n    buttons: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        handleClick: PropTypes.func.isRequired,\n        icon: PropTypes.string.isRequired,\n        iconClassName: PropTypes.string,\n        isSelected: PropTypes.bool\n    })),\n    className: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nToggleButtons.defaultProps = {\n    disabled: false\n};\n\nexport default ToggleButtons;\n","import React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport turboIcon from './icon--turbo.svg';\n\nimport styles from './turbo-mode.css';\n\nconst TurboMode = () => (\n    <div className={styles.turboContainer}>\n        <img\n            className={styles.turboIcon}\n            src={turboIcon}\n        />\n        <div className={styles.turboLabel}>\n            <FormattedMessage\n                defaultMessage=\"Turbo Mode\"\n                description=\"Label indicating turbo mode is active\"\n                id=\"gui.turboMode.active\"\n            />\n        </div>\n    </div>\n);\n\nexport default TurboMode;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactModal from 'react-modal';\nimport Box from '../box/box.jsx';\nimport {defineMessages, injectIntl, intlShape, FormattedMessage} from 'react-intl';\n\nimport styles from './webgl-modal.css';\n\nconst messages = defineMessages({\n    label: {\n        id: 'gui.webglModal.label',\n        defaultMessage: 'Your Browser Does Not Support WebGL',\n        description: 'WebGL missing title'\n    }\n});\n\nconst WebGlModal = ({intl, ...props}) => (\n    <ReactModal\n        isOpen\n        className={styles.modalContent}\n        contentLabel={intl.formatMessage({...messages.label})}\n        overlayClassName={styles.modalOverlay}\n        onRequestClose={props.onBack}\n    >\n        <div dir={props.isRtl ? 'rtl' : 'ltr'}>\n            <Box className={styles.illustration} />\n\n            <Box className={styles.body}>\n                <h2>\n                    <FormattedMessage {...messages.label} />\n                </h2>\n                <p>\n                    { /* eslint-disable max-len */ }\n                    <FormattedMessage\n                        defaultMessage=\"Unfortunately it looks like your browser or computer {webGlLink}. This technology is needed for Scratch 3.0 to run.\"\n                        description=\"WebGL missing message\"\n                        id=\"gui.webglModal.description\"\n                        values={{\n                            webGlLink: (\n                                <a\n                                    className={styles.faqLink}\n                                    href=\"https://get.webgl.org/\"\n                                >\n                                    <FormattedMessage\n                                        defaultMessage=\"does not support WebGL\"\n                                        description=\"link part of your browser does not support WebGL message\"\n                                        id=\"gui.webglModal.webgllink\"\n                                    />\n                                </a>\n                            )\n                        }}\n                    />\n                    { /* eslint-enable max-len */ }\n                </p>\n\n                <Box className={styles.buttonRow}>\n                    <button\n                        className={styles.backButton}\n                        onClick={props.onBack}\n                    >\n                        <FormattedMessage\n                            defaultMessage=\"Back\"\n                            description=\"Label for button go back when browser is unsupported\"\n                            id=\"gui.webglModal.back\"\n                        />\n                    </button>\n\n                </Box>\n                <div className={styles.faqLinkText}>\n                    <FormattedMessage\n                        defaultMessage=\"To learn more, go to the {previewFaqLink}.\"\n                        description=\"Scratch 3.0 FAQ description\"\n                        id=\"gui.webglModal.previewfaq\"\n                        values={{\n                            previewFaqLink: (\n                                <a\n                                    className={styles.faqLink}\n                                    href=\"//scratch.mit.edu/3faq\"\n                                >\n                                    <FormattedMessage\n                                        defaultMessage=\"FAQ\"\n                                        description=\"link to Scratch 3.0 FAQ page\"\n                                        id=\"gui.webglModal.previewfaqlinktext\"\n                                    />\n                                </a>\n                            )\n                        }}\n                    />\n                </div>\n            </Box>\n        </div>\n    </ReactModal>\n);\n\nWebGlModal.propTypes = {\n    intl: intlShape.isRequired,\n    isRtl: PropTypes.bool,\n    onBack: PropTypes.func.isRequired\n};\n\nexport default injectIntl(WebGlModal);\n","import React from 'react';\nimport bindAll from 'lodash.bindall';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport SB3Downloader from './sb3-downloader.jsx';\nimport AlertComponent from '../components/alerts/alert.jsx';\nimport {openConnectionModal} from '../reducers/modals';\nimport {setConnectionModalExtensionId} from '../reducers/connection-modal';\nimport {manualUpdateProject} from '../reducers/project-state';\n\nclass Alert extends React.Component {\n    constructor (props) {\n        super(props);\n        bindAll(this, [\n            'handleOnCloseAlert',\n            'handleOnReconnect'\n        ]);\n    }\n    handleOnCloseAlert () {\n        this.props.onCloseAlert(this.props.index);\n    }\n    handleOnReconnect () {\n        this.props.onOpenConnectionModal(this.props.extensionId);\n        this.handleOnCloseAlert();\n    }\n    render () {\n        const {\n            closeButton,\n            content,\n            extensionName,\n            index, // eslint-disable-line no-unused-vars\n            level,\n            iconSpinner,\n            iconURL,\n            message,\n            onSaveNow,\n            showDownload,\n            showReconnect,\n            showSaveNow\n        } = this.props;\n        return (\n            <SB3Downloader>{(_, downloadProject) => (\n                <AlertComponent\n                    closeButton={closeButton}\n                    content={content}\n                    extensionName={extensionName}\n                    iconSpinner={iconSpinner}\n                    iconURL={iconURL}\n                    level={level}\n                    message={message}\n                    showDownload={showDownload}\n                    showReconnect={showReconnect}\n                    showSaveNow={showSaveNow}\n                    onCloseAlert={this.handleOnCloseAlert}\n                    onDownload={downloadProject}\n                    onReconnect={this.handleOnReconnect}\n                    onSaveNow={onSaveNow}\n                />\n            )}</SB3Downloader>\n        );\n    }\n}\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = dispatch => ({\n    onOpenConnectionModal: id => {\n        dispatch(setConnectionModalExtensionId(id));\n        dispatch(openConnectionModal());\n    },\n    onSaveNow: () => {\n        dispatch(manualUpdateProject());\n    }\n});\n\nAlert.propTypes = {\n    closeButton: PropTypes.bool,\n    content: PropTypes.element,\n    extensionId: PropTypes.string,\n    extensionName: PropTypes.string,\n    iconSpinner: PropTypes.bool,\n    iconURL: PropTypes.string,\n    index: PropTypes.number,\n    level: PropTypes.string.isRequired,\n    message: PropTypes.string,\n    onCloseAlert: PropTypes.func.isRequired,\n    onOpenConnectionModal: PropTypes.func,\n    onSaveNow: PropTypes.func,\n    showDownload: PropTypes.bool,\n    showReconnect: PropTypes.bool,\n    showSaveNow: PropTypes.bool\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Alert);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport {\n    closeAlert,\n    filterPopupAlerts\n} from '../reducers/alerts';\n\nimport AlertsComponent from '../components/alerts/alerts.jsx';\n\nconst Alerts = ({\n    alertsList,\n    className,\n    onCloseAlert\n}) => (\n    <AlertsComponent\n        // only display standard and extension alerts here\n        alertsList={filterPopupAlerts(alertsList)}\n        className={className}\n        onCloseAlert={onCloseAlert}\n    />\n);\n\nAlerts.propTypes = {\n    alertsList: PropTypes.arrayOf(PropTypes.object),\n    className: PropTypes.string,\n    onCloseAlert: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n    alertsList: state.scratchGui.alerts.alertsList\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onCloseAlert: index => dispatch(closeAlert(index))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Alerts);\n","import bindAll from 'lodash.bindall';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport VM from 'scratch-vm';\nimport {connect} from 'react-redux';\n\nimport ControlsComponent from '../components/controls/controls.jsx';\n\nclass Controls extends React.Component {\n    constructor (props) {\n        super(props);\n        bindAll(this, [\n            'handleGreenFlagClick',\n            'handleStopAllClick'\n        ]);\n    }\n    handleGreenFlagClick (e) {\n        e.preventDefault();\n        if (e.shiftKey) {\n            this.props.vm.setTurboMode(!this.props.turbo);\n        } else {\n            if (!this.props.isStarted) {\n                this.props.vm.start();\n            }\n            this.props.vm.greenFlag();\n        }\n    }\n    handleStopAllClick (e) {\n        e.preventDefault();\n        this.props.vm.stopAll();\n    }\n    render () {\n        const {\n            vm, // eslint-disable-line no-unused-vars\n            isStarted, // eslint-disable-line no-unused-vars\n            projectRunning,\n            turbo,\n            ...props\n        } = this.props;\n        return (\n            <ControlsComponent\n                {...props}\n                active={projectRunning}\n                turbo={turbo}\n                onGreenFlagClick={this.handleGreenFlagClick}\n                onStopAllClick={this.handleStopAllClick}\n            />\n        );\n    }\n}\n\nControls.propTypes = {\n    isStarted: PropTypes.bool.isRequired,\n    projectRunning: PropTypes.bool.isRequired,\n    turbo: PropTypes.bool.isRequired,\n    vm: PropTypes.instanceOf(VM)\n};\n\nconst mapStateToProps = state => ({\n    isStarted: state.scratchGui.vmStatus.running,\n    projectRunning: state.scratchGui.vmStatus.running,\n    turbo: state.scratchGui.vmStatus.turbo\n});\n// no-op function to prevent dispatch prop being passed to component\nconst mapDispatchToProps = () => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Controls);\n","import omit from 'lodash.omit';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Style from 'to-style';\nimport stylePropType from 'react-style-proptype';\n\n/*\n * DOMElementRenderer wraps a DOM element, allowing it to be\n * rendered by React. It's up to the containing component\n * to retain a reference to the element prop, or else it\n * will be garbage collected after unmounting.\n *\n * Props passed to the DOMElementRenderer will be set on the\n * DOM element like it's a normal component.\n */\nclass DOMElementRenderer extends React.Component {\n    constructor (props) {\n        super(props);\n        this.setContainer = this.setContainer.bind(this);\n    }\n    componentDidMount () {\n        this.container.appendChild(this.props.domElement);\n    }\n    componentWillUnmount () {\n        this.container.removeChild(this.props.domElement);\n    }\n    setContainer (c) {\n        this.container = c;\n    }\n    render () {\n        // Apply props to the DOM element, so its attributes\n        // are updated as if it were a normal component.\n        // Look at me, I'm the React now!\n        Object.assign(\n            this.props.domElement,\n            omit(this.props, ['domElement', 'children', 'style'])\n        );\n\n        // Convert react style prop to dom element styling.\n        if (this.props.style) {\n            this.props.domElement.style.cssText = Style.string(this.props.style);\n        }\n\n        return <div ref={this.setContainer} />;\n    }\n}\n\nDOMElementRenderer.propTypes = {\n    domElement: PropTypes.instanceOf(Element).isRequired,\n    style: stylePropType\n};\n\nexport default DOMElementRenderer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport BrowserModalComponent from '../components/browser-modal/browser-modal.jsx';\nimport CrashMessageComponent from '../components/crash-message/crash-message.jsx';\nimport log from '../lib/log.js';\nimport {recommendedBrowser} from '../lib/supported-browser';\n\nclass ErrorBoundary extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            error: null,\n            errorInfo: null\n        };\n    }\n\n    /**\n     * Handle an error caught by this ErrorBoundary component.\n     * @param {Error} error - the error that was caught.\n     * @param {React.ErrorInfo} errorInfo - the React error info associated with the error.\n     */\n    componentDidCatch (error, errorInfo) {\n        error = error || {\n            stack: 'Unknown stack',\n            message: 'Unknown error'\n        };\n        errorInfo = errorInfo || {\n            componentStack: 'Unknown component stack'\n        };\n\n        // only remember the first error: later errors might just be side effects of that first one\n        if (!this.state.error) {\n            // store error & errorInfo for debugging\n            this.setState({\n                error,\n                errorInfo\n            });\n        }\n\n        // report every error in the console\n        log.error([\n            `Unhandled Error with action='${this.props.action}': ${error.stack}`,\n            `Component stack: ${errorInfo.componentStack}`\n        ].join('\\n'));\n    }\n\n    handleBack () {\n        window.history.back();\n    }\n\n    handleReload () {\n        window.location.replace(window.location.origin + window.location.pathname);\n    }\n\n    render () {\n        if (this.state.error) {\n            if (recommendedBrowser()) {\n                return (\n                    <CrashMessageComponent\n                        onReload={this.handleReload}\n                    />\n                );\n            }\n            return (<BrowserModalComponent\n                error\n                isRtl={this.props.isRtl}\n                onBack={this.handleBack}\n            />);\n        }\n        return this.props.children;\n    }\n}\n\nErrorBoundary.propTypes = {\n    action: PropTypes.string.isRequired, // Used for defining tracking action\n    children: PropTypes.node,\n    isRtl: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n    isRtl: state.locales.isRtl\n});\n\n// no-op function to prevent dispatch prop being passed to component\nconst mapDispatchToProps = () => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorBoundary);\n","import bindAll from 'lodash.bindall';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {connect} from 'react-redux';\nimport VM from 'scratch-vm';\nimport Box from '../components/box/box.jsx';\nimport greenFlag from '../components/green-flag/icon--green-flag.svg';\n\nclass GreenFlagOverlay extends React.Component {\n    constructor (props) {\n        super(props);\n        bindAll(this, [\n            'handleClick'\n        ]);\n    }\n\n    handleClick () {\n        this.props.vm.start();\n        this.props.vm.greenFlag();\n    }\n\n    render () {\n        return (\n            <Box\n                className={this.props.wrapperClass}\n                onClick={this.handleClick}\n            >\n                <div className={this.props.className}>\n                    <img\n                        draggable={false}\n                        src={greenFlag}\n                    />\n                </div>\n            </Box>\n\n        );\n    }\n}\n\nGreenFlagOverlay.propTypes = {\n    className: PropTypes.string,\n    vm: PropTypes.instanceOf(VM),\n    wrapperClass: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n    vm: state.scratchGui.vm\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GreenFlagOverlay);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {compose} from 'redux';\nimport {connect} from 'react-redux';\nimport ReactModal from 'react-modal';\nimport VM from 'scratch-vm';\nimport {injectIntl, intlShape} from 'react-intl';\n\nimport ErrorBoundaryHOC from '../lib/error-boundary-hoc.jsx';\nimport {\n    getIsError,\n    getIsShowingProject\n} from '../reducers/project-state';\nimport {\n    activateTab,\n    BLOCKS_TAB_INDEX,\n    COSTUMES_TAB_INDEX,\n    SOUNDS_TAB_INDEX\n} from '../reducers/editor-tab';\n\nimport {\n    closeCostumeLibrary,\n    closeBackdropLibrary,\n    closeTelemetryModal,\n    openExtensionLibrary\n} from '../reducers/modals';\n\nimport FontLoaderHOC from '../lib/font-loader-hoc.jsx';\nimport LocalizationHOC from '../lib/localization-hoc.jsx';\nimport SBFileUploaderHOC from '../lib/sb-file-uploader-hoc.jsx';\nimport ProjectFetcherHOC from '../lib/project-fetcher-hoc.jsx';\nimport TitledHOC from '../lib/titled-hoc.jsx';\nimport ProjectSaverHOC from '../lib/project-saver-hoc.jsx';\nimport QueryParserHOC from '../lib/query-parser-hoc.jsx';\nimport storage from '../lib/storage';\nimport vmListenerHOC from '../lib/vm-listener-hoc.jsx';\nimport vmManagerHOC from '../lib/vm-manager-hoc.jsx';\nimport cloudManagerHOC from '../lib/cloud-manager-hoc.jsx';\nimport systemPreferencesHOC from '../lib/system-preferences-hoc.jsx';\n\nimport GUIComponent from '../components/gui/gui.jsx';\nimport {setIsScratchDesktop} from '../lib/isScratchDesktop.js';\n\nconst {RequestMetadata, setMetadata, unsetMetadata} = storage.scratchFetch;\n\nconst setProjectIdMetadata = projectId => {\n    // If project ID is '0' or zero, it's not a real project ID. In that case, remove the project ID metadata.\n    // Same if it's null undefined.\n    if (projectId && projectId !== '0') {\n        setMetadata(RequestMetadata.ProjectId, projectId);\n    } else {\n        unsetMetadata(RequestMetadata.ProjectId);\n    }\n};\n\nclass GUI extends React.Component {\n    componentDidMount () {\n        setIsScratchDesktop(this.props.isScratchDesktop);\n        this.props.onStorageInit(storage);\n        this.props.onVmInit(this.props.vm);\n        setProjectIdMetadata(this.props.projectId);\n    }\n    componentDidUpdate (prevProps) {\n        if (this.props.projectId !== prevProps.projectId) {\n            if (this.props.projectId !== null) {\n                this.props.onUpdateProjectId(this.props.projectId);\n            }\n            setProjectIdMetadata(this.props.projectId);\n        }\n        if (this.props.isShowingProject && !prevProps.isShowingProject) {\n            // this only notifies container when a project changes from not yet loaded to loaded\n            // At this time the project view in www doesn't need to know when a project is unloaded\n            this.props.onProjectLoaded();\n        }\n    }\n    render () {\n        if (this.props.isError) {\n            throw new Error(\n                `Error in Scratch GUI [location=${window.location}]: ${this.props.error}`);\n        }\n        const {\n            /* eslint-disable no-unused-vars */\n            assetHost,\n            cloudHost,\n            error,\n            isError,\n            isScratchDesktop,\n            isShowingProject,\n            onProjectLoaded,\n            onStorageInit,\n            onUpdateProjectId,\n            onVmInit,\n            projectHost,\n            projectId,\n            /* eslint-enable no-unused-vars */\n            children,\n            fetchingProject,\n            isLoading,\n            loadingStateVisible,\n            ...componentProps\n        } = this.props;\n        return (\n            <GUIComponent\n                loading={fetchingProject || isLoading || loadingStateVisible}\n                {...componentProps}\n            >\n                {children}\n            </GUIComponent>\n        );\n    }\n}\n\nGUI.propTypes = {\n    assetHost: PropTypes.string,\n    children: PropTypes.node,\n    cloudHost: PropTypes.string,\n    error: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    fetchingProject: PropTypes.bool,\n    intl: intlShape,\n    isError: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    isScratchDesktop: PropTypes.bool,\n    isShowingProject: PropTypes.bool,\n    isTotallyNormal: PropTypes.bool,\n    loadingStateVisible: PropTypes.bool,\n    onProjectLoaded: PropTypes.func,\n    onSeeCommunity: PropTypes.func,\n    onStorageInit: PropTypes.func,\n    onUpdateProjectId: PropTypes.func,\n    onVmInit: PropTypes.func,\n    projectHost: PropTypes.string,\n    projectId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    telemetryModalVisible: PropTypes.bool,\n    vm: PropTypes.instanceOf(VM).isRequired\n};\n\nGUI.defaultProps = {\n    isScratchDesktop: false,\n    isTotallyNormal: false,\n    onStorageInit: storageInstance => storageInstance.addOfficialScratchWebStores(),\n    onProjectLoaded: () => {},\n    onUpdateProjectId: () => {},\n    onVmInit: (/* vm */) => {}\n};\n\nconst mapStateToProps = state => {\n    const loadingState = state.scratchGui.projectState.loadingState;\n    return {\n        activeTabIndex: state.scratchGui.editorTab.activeTabIndex,\n        alertsVisible: state.scratchGui.alerts.visible,\n        backdropLibraryVisible: state.scratchGui.modals.backdropLibrary,\n        blocksTabVisible: state.scratchGui.editorTab.activeTabIndex === BLOCKS_TAB_INDEX,\n        cardsVisible: state.scratchGui.cards.visible,\n        connectionModalVisible: state.scratchGui.modals.connectionModal,\n        costumeLibraryVisible: state.scratchGui.modals.costumeLibrary,\n        costumesTabVisible: state.scratchGui.editorTab.activeTabIndex === COSTUMES_TAB_INDEX,\n        error: state.scratchGui.projectState.error,\n        isError: getIsError(loadingState),\n        isFullScreen: state.scratchGui.mode.isFullScreen,\n        isPlayerOnly: state.scratchGui.mode.isPlayerOnly,\n        isRtl: state.locales.isRtl,\n        isShowingProject: getIsShowingProject(loadingState),\n        loadingStateVisible: state.scratchGui.modals.loadingProject,\n        projectId: state.scratchGui.projectState.projectId,\n        soundsTabVisible: state.scratchGui.editorTab.activeTabIndex === SOUNDS_TAB_INDEX,\n        targetIsStage: (\n            state.scratchGui.targets.stage &&\n            state.scratchGui.targets.stage.id === state.scratchGui.targets.editingTarget\n        ),\n        telemetryModalVisible: state.scratchGui.modals.telemetryModal,\n        tipsLibraryVisible: state.scratchGui.modals.tipsLibrary,\n        vm: state.scratchGui.vm\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onExtensionButtonClick: () => dispatch(openExtensionLibrary()),\n    onActivateTab: tab => dispatch(activateTab(tab)),\n    onActivateCostumesTab: () => dispatch(activateTab(COSTUMES_TAB_INDEX)),\n    onActivateSoundsTab: () => dispatch(activateTab(SOUNDS_TAB_INDEX)),\n    onRequestCloseBackdropLibrary: () => dispatch(closeBackdropLibrary()),\n    onRequestCloseCostumeLibrary: () => dispatch(closeCostumeLibrary()),\n    onRequestCloseTelemetryModal: () => dispatch(closeTelemetryModal())\n});\n\nconst ConnectedGUI = injectIntl(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GUI));\n\n// note that redux's 'compose' function is just being used as a general utility to make\n// the hierarchy of HOC constructor calls clearer here; it has nothing to do with redux's\n// ability to compose reducers.\nconst WrappedGui = compose(\n    LocalizationHOC,\n    ErrorBoundaryHOC('Top Level App'),\n    FontLoaderHOC,\n    QueryParserHOC,\n    ProjectFetcherHOC,\n    TitledHOC,\n    ProjectSaverHOC,\n    vmListenerHOC,\n    vmManagerHOC,\n    SBFileUploaderHOC,\n    cloudManagerHOC,\n    systemPreferencesHOC\n)(ConnectedGUI);\n\nWrappedGui.setAppElement = ReactModal.setAppElement;\nexport default WrappedGui;\n","import bindAll from 'lodash.bindall';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport VM from 'scratch-vm';\nimport {connect} from 'react-redux';\nimport {getEventXY} from '../lib/touch-utils';\nimport {getVariableValue, setVariableValue} from '../lib/variable-utils';\nimport ListMonitorComponent from '../components/monitor/list-monitor.jsx';\nimport {Map} from 'immutable';\n\nclass ListMonitor extends React.Component {\n    constructor (props) {\n        super(props);\n        bindAll(this, [\n            'handleActivate',\n            'handleDeactivate',\n            'handleInput',\n            'handleRemove',\n            'handleKeyPress',\n            'handleFocus',\n            'handleAdd',\n            'handleResizeMouseDown'\n        ]);\n\n        this.state = {\n            activeIndex: null,\n            activeValue: null,\n            width: props.width || 100,\n            height: props.height || 200\n        };\n    }\n\n    handleActivate (index) {\n        // Do nothing if activating the currently active item\n        if (this.state.activeIndex === index) {\n            return;\n        }\n\n        this.setState({\n            activeIndex: index,\n            activeValue: this.props.value[index]\n        });\n    }\n\n    handleDeactivate () {\n        // Submit any in-progress value edits on blur\n        if (this.state.activeIndex !== null) {\n            const {vm, targetId, id: variableId} = this.props;\n            const newListValue = getVariableValue(vm, targetId, variableId);\n            newListValue[this.state.activeIndex] = this.state.activeValue;\n            setVariableValue(vm, targetId, variableId, newListValue);\n            this.setState({activeIndex: null, activeValue: null});\n        }\n    }\n\n    handleFocus (e) {\n        // Select all the text in the input when it is focused.\n        e.target.select();\n    }\n\n    handleKeyPress (e) {\n        // Special case for tab, arrow keys and enter.\n        // Tab / shift+tab navigate down / up the list.\n        // Arrow down / arrow up navigate down / up the list.\n        // Enter / shift+enter insert new blank item below / above.\n        const previouslyActiveIndex = this.state.activeIndex;\n        const {vm, targetId, id: variableId} = this.props;\n\n        let navigateDirection = 0;\n        if (e.key === 'Tab') navigateDirection = e.shiftKey ? -1 : 1;\n        else if (e.key === 'ArrowUp') navigateDirection = -1;\n        else if (e.key === 'ArrowDown') navigateDirection = 1;\n        if (navigateDirection) {\n            this.handleDeactivate(); // Submit in-progress edits\n            const newIndex = this.wrapListIndex(previouslyActiveIndex + navigateDirection, this.props.value.length);\n            this.setState({\n                activeIndex: newIndex,\n                activeValue: this.props.value[newIndex]\n            });\n            e.preventDefault(); // Stop default tab behavior, handled by this state change\n        } else if (e.key === 'Enter') {\n            this.handleDeactivate(); // Submit in-progress edits\n            const newListItemValue = ''; // Enter adds a blank item\n            const newValueOffset = e.shiftKey ? 0 : 1; // Shift-enter inserts above\n            const listValue = getVariableValue(vm, targetId, variableId);\n            const newListValue = listValue.slice(0, previouslyActiveIndex + newValueOffset)\n                .concat([newListItemValue])\n                .concat(listValue.slice(previouslyActiveIndex + newValueOffset));\n            setVariableValue(vm, targetId, variableId, newListValue);\n            const newIndex = this.wrapListIndex(previouslyActiveIndex + newValueOffset, newListValue.length);\n            this.setState({\n                activeIndex: newIndex,\n                activeValue: newListItemValue\n            });\n        }\n    }\n\n    handleInput (e) {\n        this.setState({activeValue: e.target.value});\n    }\n\n    handleRemove (e) {\n        e.preventDefault(); // Default would blur input, prevent that.\n        e.stopPropagation(); // Bubbling would activate, which will be handled here\n        const {vm, targetId, id: variableId} = this.props;\n        const listValue = getVariableValue(vm, targetId, variableId);\n        const newListValue = listValue.slice(0, this.state.activeIndex)\n            .concat(listValue.slice(this.state.activeIndex + 1));\n        setVariableValue(vm, targetId, variableId, newListValue);\n        const newActiveIndex = Math.min(newListValue.length - 1, this.state.activeIndex);\n        this.setState({\n            activeIndex: newActiveIndex,\n            activeValue: newListValue[newActiveIndex]\n        });\n    }\n\n    handleAdd () {\n        // Add button appends a blank value and switches to it\n        const {vm, targetId, id: variableId} = this.props;\n        const newListValue = getVariableValue(vm, targetId, variableId).concat(['']);\n        setVariableValue(vm, targetId, variableId, newListValue);\n        this.setState({activeIndex: newListValue.length - 1, activeValue: ''});\n    }\n\n    handleResizeMouseDown (e) {\n        this.initialPosition = getEventXY(e);\n        this.initialWidth = this.state.width;\n        this.initialHeight = this.state.height;\n\n        const onMouseMove = ev => {\n            const newPosition = getEventXY(ev);\n            const dx = newPosition.x - this.initialPosition.x;\n            const dy = newPosition.y - this.initialPosition.y;\n            this.setState({\n                width: Math.max(Math.min(this.initialWidth + dx, 480), 100),\n                height: Math.max(Math.min(this.initialHeight + dy, 360), 60)\n            });\n        };\n\n        const onMouseUp = ev => {\n            onMouseMove(ev); // Make sure width/height are up-to-date\n            window.removeEventListener('mousemove', onMouseMove);\n            window.removeEventListener('mouseup', onMouseUp);\n            this.props.vm.runtime.requestUpdateMonitor(Map({\n                id: this.props.id,\n                height: this.state.height,\n                width: this.state.width\n            }));\n        };\n\n        window.addEventListener('mousemove', onMouseMove);\n        window.addEventListener('mouseup', onMouseUp);\n\n    }\n\n    wrapListIndex (index, length) {\n        return (index + length) % length;\n    }\n\n    render () {\n        const {\n            vm, // eslint-disable-line no-unused-vars\n            ...props\n        } = this.props;\n        return (\n            <ListMonitorComponent\n                {...props}\n                activeIndex={this.state.activeIndex}\n                activeValue={this.state.activeValue}\n                height={this.state.height}\n                width={this.state.width}\n                onActivate={this.handleActivate}\n                onAdd={this.handleAdd}\n                onDeactivate={this.handleDeactivate}\n                onFocus={this.handleFocus}\n                onInput={this.handleInput}\n                onKeyPress={this.handleKeyPress}\n                onRemove={this.handleRemove}\n                onResizeMouseDown={this.handleResizeMouseDown}\n            />\n        );\n    }\n}\n\nListMonitor.propTypes = {\n    height: PropTypes.number,\n    id: PropTypes.string,\n    targetId: PropTypes.string,\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string\n    ]),\n    vm: PropTypes.instanceOf(VM),\n    width: PropTypes.number,\n    x: PropTypes.number,\n    y: PropTypes.number\n};\n\nconst mapStateToProps = state => ({vm: state.scratchGui.vm});\n\nexport default connect(mapStateToProps)(ListMonitor);\n","import bindAll from 'lodash.bindall';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport ModalComponent from '../components/modal/modal.jsx';\n\nclass Modal extends React.Component {\n    constructor (props) {\n        super(props);\n        bindAll(this, [\n            'addEventListeners',\n            'removeEventListeners',\n            'handlePopState',\n            'pushHistory'\n        ]);\n        this.addEventListeners();\n    }\n    componentDidMount () {\n        // Add a history event only if it's not currently for our modal. This\n        // avoids polluting the history with many entries. We only need one.\n        this.pushHistory(this.id, (history.state === null || history.state !== this.id));\n    }\n    componentWillUnmount () {\n        this.removeEventListeners();\n    }\n    addEventListeners () {\n        window.addEventListener('popstate', this.handlePopState);\n    }\n    removeEventListeners () {\n        window.removeEventListener('popstate', this.handlePopState);\n    }\n    handlePopState () {\n        // Whenever someone navigates, we want to be closed\n        this.props.onRequestClose();\n    }\n    get id () {\n        return `modal-${this.props.id}`;\n    }\n    pushHistory (state, push) {\n        if (push) return history.pushState(state, this.id);\n        history.replaceState(state, this.id);\n    }\n    render () {\n        return <ModalComponent {...this.props} />;\n    }\n}\n\nModal.propTypes = {\n    id: PropTypes.string.isRequired,\n    isRtl: PropTypes.bool,\n    onRequestClose: PropTypes.func,\n    onRequestOpen: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n    isRtl: state.locales.isRtl\n});\n\nexport default connect(\n    mapStateToProps\n)(Modal);\n","import bindAll from 'lodash.bindall';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {injectIntl, intlShape} from 'react-intl';\n\nimport {connect} from 'react-redux';\nimport {moveMonitorRect} from '../reducers/monitor-layout';\n\nimport errorBoundaryHOC from '../lib/error-boundary-hoc.jsx';\nimport OpcodeLabels from '../lib/opcode-labels';\n\nimport MonitorListComponent from '../components/monitor-list/monitor-list.jsx';\n\nclass MonitorList extends React.Component {\n    constructor (props) {\n        super(props);\n        bindAll(this, [\n            'handleMonitorChange'\n        ]);\n        OpcodeLabels.setTranslatorFunction(props.intl.formatMessage);\n    }\n    handleMonitorChange (id, x, y) { // eslint-disable-line no-unused-vars\n        this.props.moveMonitorRect(id, x, y);\n    }\n    render () {\n        return (\n            <MonitorListComponent\n                onMonitorChange={this.handleMonitorChange}\n                {...this.props}\n            />\n        );\n    }\n}\n\nMonitorList.propTypes = {\n    intl: intlShape.isRequired,\n    moveMonitorRect: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n    monitors: state.scratchGui.monitors\n});\nconst mapDispatchToProps = dispatch => ({\n    moveMonitorRect: (id, x, y) => dispatch(moveMonitorRect(id, x, y))\n});\n\nexport default errorBoundaryHOC('Monitors')(\n    injectIntl(connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(MonitorList))\n);\n","import bindAll from 'lodash.bindall';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {injectIntl, intlShape, defineMessages} from 'react-intl';\n\nimport monitorAdapter from '../lib/monitor-adapter.js';\nimport MonitorComponent, {monitorModes} from '../components/monitor/monitor.jsx';\nimport {addMonitorRect, getInitialPosition, resizeMonitorRect, removeMonitorRect} from '../reducers/monitor-layout';\nimport {getVariable, setVariableValue} from '../lib/variable-utils';\nimport importCSV from '../lib/import-csv';\nimport downloadBlob from '../lib/download-blob';\nimport {DEFAULT_THEME} from '../lib/themes';\nimport SliderPrompt from './slider-prompt.jsx';\n\nimport {connect} from 'react-redux';\nimport {Map} from 'immutable';\nimport VM from 'scratch-vm';\n\nconst availableModes = opcode => (\n    monitorModes.filter(t => {\n        if (opcode === 'data_variable') {\n            return t !== 'list';\n        } else if (opcode === 'data_listcontents') {\n            return t === 'list';\n        }\n        return t !== 'slider' && t !== 'list';\n    })\n);\n\nconst messages = defineMessages({\n    columnPrompt: {\n        defaultMessage: 'Which column should be used (1-{numberOfColumns})?',\n        description: 'Prompt for which column should be used',\n        id: 'gui.monitors.importListColumnPrompt'\n    }\n});\n\nclass Monitor extends React.Component {\n    constructor (props) {\n        super(props);\n        bindAll(this, [\n            'handleDragEnd',\n            'handleHide',\n            'handleNextMode',\n            'handleSetModeToDefault',\n            'handleSetModeToLarge',\n            'handleSetModeToSlider',\n            'handleSliderPromptClose',\n            'handleSliderPromptOk',\n            'handleSliderPromptOpen',\n            'handleImport',\n            'handleExport',\n            'setElement'\n        ]);\n        this.state = {\n            sliderPrompt: false\n        };\n    }\n    componentDidMount () {\n        let rect;\n\n        const isNum = num => typeof num === 'number' && !isNaN(num);\n\n        // Load the VM provided position if not loaded already\n        // If a monitor has numbers for the x and y positions, load the saved position.\n        // Otherwise, auto-position the monitor.\n        if (isNum(this.props.x) && isNum(this.props.y) &&\n            !this.props.monitorLayout.savedMonitorPositions[this.props.id]) {\n            rect = {\n                upperStart: {x: this.props.x, y: this.props.y},\n                lowerEnd: {x: this.props.x + this.element.offsetWidth, y: this.props.y + this.element.offsetHeight}\n            };\n            this.props.addMonitorRect(this.props.id, rect, true /* savePosition */);\n        } else { // Newly created user monitor\n            rect = getInitialPosition(\n                this.props.monitorLayout, this.props.id, this.element.offsetWidth, this.element.offsetHeight);\n            this.props.addMonitorRect(this.props.id, rect);\n            this.props.vm.runtime.requestUpdateMonitor(Map({\n                id: this.props.id,\n                x: rect.upperStart.x,\n                y: rect.upperStart.y\n            }));\n        }\n        this.element.style.top = `${rect.upperStart.y}px`;\n        this.element.style.left = `${rect.upperStart.x}px`;\n    }\n    shouldComponentUpdate (nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n        for (const key of Object.getOwnPropertyNames(nextProps)) {\n            // Don't need to rerender when other monitors are moved.\n            // monitorLayout is only used during initial layout.\n            if (key !== 'monitorLayout' && nextProps[key] !== this.props[key]) {\n                return true;\n            }\n        }\n        return false;\n    }\n    componentDidUpdate () {\n        this.props.resizeMonitorRect(this.props.id, this.element.offsetWidth, this.element.offsetHeight);\n    }\n    componentWillUnmount () {\n        this.props.removeMonitorRect(this.props.id);\n    }\n    handleDragEnd (e, {x, y}) {\n        const newX = parseInt(this.element.style.left, 10) + x;\n        const newY = parseInt(this.element.style.top, 10) + y;\n        this.props.onDragEnd(\n            this.props.id,\n            newX,\n            newY\n        );\n        this.props.vm.runtime.requestUpdateMonitor(Map({\n            id: this.props.id,\n            x: newX,\n            y: newY\n        }));\n    }\n    handleHide () {\n        this.props.vm.runtime.requestUpdateMonitor(Map({\n            id: this.props.id,\n            visible: false\n        }));\n    }\n    handleNextMode () {\n        const modes = availableModes(this.props.opcode);\n        const modeIndex = modes.indexOf(this.props.mode);\n        const newMode = modes[(modeIndex + 1) % modes.length];\n        this.props.vm.runtime.requestUpdateMonitor(Map({\n            id: this.props.id,\n            mode: newMode\n        }));\n    }\n    handleSetModeToDefault () {\n        this.props.vm.runtime.requestUpdateMonitor(Map({\n            id: this.props.id,\n            mode: 'default'\n        }));\n    }\n    handleSetModeToLarge () {\n        this.props.vm.runtime.requestUpdateMonitor(Map({\n            id: this.props.id,\n            mode: 'large'\n        }));\n    }\n    handleSetModeToSlider () {\n        this.props.vm.runtime.requestUpdateMonitor(Map({\n            id: this.props.id,\n            mode: 'slider'\n        }));\n    }\n    handleSliderPromptClose () {\n        this.setState({sliderPrompt: false});\n    }\n    handleSliderPromptOpen () {\n        this.setState({sliderPrompt: true});\n    }\n    handleSliderPromptOk (min, max, isDiscrete) {\n        const realMin = Math.min(min, max);\n        const realMax = Math.max(min, max);\n        this.props.vm.runtime.requestUpdateMonitor(Map({\n            id: this.props.id,\n            sliderMin: realMin,\n            sliderMax: realMax,\n            isDiscrete: isDiscrete\n        }));\n        this.handleSliderPromptClose();\n    }\n    setElement (monitorElt) {\n        this.element = monitorElt;\n    }\n    handleImport () {\n        importCSV().then(rows => {\n            const numberOfColumns = rows[0].length;\n            let columnNumber = 1;\n            if (numberOfColumns > 1) {\n                const msg = this.props.intl.formatMessage(messages.columnPrompt, {numberOfColumns});\n                columnNumber = parseInt(prompt(msg), 10); // eslint-disable-line no-alert\n            }\n            const newListValue = rows.map(row => row[columnNumber - 1])\n                .filter(item => typeof item === 'string'); // CSV importer can leave undefineds\n            const {vm, targetId, id: variableId} = this.props;\n            setVariableValue(vm, targetId, variableId, newListValue);\n        });\n    }\n    handleExport () {\n        const {vm, targetId, id: variableId} = this.props;\n        const variable = getVariable(vm, targetId, variableId);\n        const text = variable.value.join('\\r\\n');\n        const blob = new Blob([text], {type: 'text/plain;charset=utf-8'});\n        downloadBlob(`${variable.name}.txt`, blob);\n    }\n    render () {\n        const monitorProps = monitorAdapter(this.props);\n        const showSliderOption = availableModes(this.props.opcode).indexOf('slider') !== -1;\n        const isList = this.props.mode === 'list';\n        return (\n            <React.Fragment>\n                {this.state.sliderPrompt && <SliderPrompt\n                    isDiscrete={this.props.isDiscrete}\n                    maxValue={parseFloat(this.props.max)}\n                    minValue={parseFloat(this.props.min)}\n                    onCancel={this.handleSliderPromptClose}\n                    onOk={this.handleSliderPromptOk}\n                />}\n                <MonitorComponent\n                    componentRef={this.setElement}\n                    {...monitorProps}\n                    draggable={this.props.draggable}\n                    height={this.props.height}\n                    isDiscrete={this.props.isDiscrete}\n                    max={this.props.max}\n                    min={this.props.min}\n                    mode={this.props.mode}\n                    targetId={this.props.targetId}\n                    theme={this.props.theme}\n                    width={this.props.width}\n                    onDragEnd={this.handleDragEnd}\n                    onExport={isList ? this.handleExport : null}\n                    onImport={isList ? this.handleImport : null}\n                    onHide={this.handleHide}\n                    onNextMode={this.handleNextMode}\n                    onSetModeToDefault={isList ? null : this.handleSetModeToDefault}\n                    onSetModeToLarge={isList ? null : this.handleSetModeToLarge}\n                    onSetModeToSlider={showSliderOption ? this.handleSetModeToSlider : null}\n                    onSliderPromptOpen={this.handleSliderPromptOpen}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nMonitor.propTypes = {\n    addMonitorRect: PropTypes.func.isRequired,\n    draggable: PropTypes.bool,\n    height: PropTypes.number,\n    id: PropTypes.string.isRequired,\n    intl: intlShape,\n    isDiscrete: PropTypes.bool,\n    max: PropTypes.number,\n    min: PropTypes.number,\n    mode: PropTypes.oneOf(['default', 'slider', 'large', 'list']),\n    monitorLayout: PropTypes.shape({\n        monitors: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n        savedMonitorPositions: PropTypes.object // eslint-disable-line react/forbid-prop-types\n    }).isRequired,\n    onDragEnd: PropTypes.func.isRequired,\n    opcode: PropTypes.string.isRequired, // eslint-disable-line react/no-unused-prop-types\n    params: PropTypes.object, // eslint-disable-line react/no-unused-prop-types, react/forbid-prop-types\n    removeMonitorRect: PropTypes.func.isRequired,\n    resizeMonitorRect: PropTypes.func.isRequired,\n    spriteName: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\n    targetId: PropTypes.string,\n    theme: PropTypes.string,\n    toolboxXML: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.arrayOf(PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number\n        ]))\n    ]), // eslint-disable-line react/no-unused-prop-types\n    vm: PropTypes.instanceOf(VM),\n    width: PropTypes.number,\n    x: PropTypes.number,\n    y: PropTypes.number\n};\nMonitor.defaultProps = {\n    theme: DEFAULT_THEME\n};\nconst mapStateToProps = state => ({\n    monitorLayout: state.scratchGui.monitorLayout,\n    theme: state.scratchGui.theme.theme,\n    // render on toolbox updates since changes to the blocks could affect monitor labels, i.e. updated locale\n    toolboxXML: state.scratchGui.toolbox.toolboxXML,\n    vm: state.scratchGui.vm\n});\nconst mapDispatchToProps = dispatch => ({\n    addMonitorRect: (id, rect, savePosition) =>\n        dispatch(addMonitorRect(id, rect.upperStart, rect.lowerEnd, savePosition)),\n    resizeMonitorRect: (id, newWidth, newHeight) => dispatch(resizeMonitorRect(id, newWidth, newHeight)),\n    removeMonitorRect: id => dispatch(removeMonitorRect(id))\n});\n\nexport default injectIntl(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Monitor));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport bindAll from 'lodash.bindall';\nimport QuestionComponent from '../components/question/question.jsx';\n\nclass Question extends React.Component {\n    constructor (props) {\n        super(props);\n        bindAll(this, [\n            'handleChange',\n            'handleKeyPress',\n            'handleSubmit'\n        ]);\n        this.state = {\n            answer: ''\n        };\n    }\n    handleChange (e) {\n        this.setState({answer: e.target.value});\n    }\n    handleKeyPress (event) {\n        if (event.key === 'Enter') this.handleSubmit();\n    }\n    handleSubmit () {\n        this.props.onQuestionAnswered(this.state.answer);\n    }\n    render () {\n        return (\n            <QuestionComponent\n                answer={this.state.answer}\n                question={this.props.question}\n                onChange={this.handleChange}\n                onClick={this.handleSubmit}\n                onKeyPress={this.handleKeyPress}\n            />\n        );\n    }\n}\n\nQuestion.propTypes = {\n    onQuestionAnswered: PropTypes.func.isRequired,\n    question: PropTypes.string\n};\n\nexport default Question;\n","import bindAll from 'lodash.bindall';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {projectTitleInitialState} from '../reducers/project-title';\nimport downloadBlob from '../lib/download-blob';\n/**\n * Project saver component passes a downloadProject function to its child.\n * It expects this child to be a function with the signature\n *     function (downloadProject, props) {}\n * The component can then be used to attach project saving functionality\n * to any other component:\n *\n * <SB3Downloader>{(downloadProject, props) => (\n *     <MyCoolComponent\n *         onClick={downloadProject}\n *         {...props}\n *     />\n * )}</SB3Downloader>\n */\nclass SB3Downloader extends React.Component {\n    constructor (props) {\n        super(props);\n        bindAll(this, [\n            'downloadProject'\n        ]);\n    }\n    downloadProject () {\n        this.props.saveProjectSb3().then(content => {\n            if (this.props.onSaveFinished) {\n                this.props.onSaveFinished();\n            }\n            downloadBlob(this.props.projectFilename, content);\n        });\n    }\n    render () {\n        const {\n            children\n        } = this.props;\n        return children(\n            this.props.className,\n            this.downloadProject\n        );\n    }\n}\n\nconst getProjectFilename = (curTitle, defaultTitle) => {\n    let filenameTitle = curTitle;\n    if (!filenameTitle || filenameTitle.length === 0) {\n        filenameTitle = defaultTitle;\n    }\n    return `${filenameTitle.substring(0, 100)}.sb3`;\n};\n\nSB3Downloader.propTypes = {\n    children: PropTypes.func,\n    className: PropTypes.string,\n    onSaveFinished: PropTypes.func,\n    projectFilename: PropTypes.string,\n    saveProjectSb3: PropTypes.func\n};\nSB3Downloader.defaultProps = {\n    className: ''\n};\n\nconst mapStateToProps = state => ({\n    saveProjectSb3: state.scratchGui.vm.saveProjectSb3.bind(state.scratchGui.vm),\n    projectFilename: getProjectFilename(state.scratchGui.projectTitle, projectTitleInitialState)\n});\n\nexport default connect(\n    mapStateToProps,\n    () => ({}) // omit dispatch prop\n)(SB3Downloader);\n","import bindAll from 'lodash.bindall';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport VM from 'scratch-vm';\nimport {setVariableValue} from '../lib/variable-utils';\nimport {connect} from 'react-redux';\n\nimport SliderMonitorComponent from '../components/monitor/slider-monitor.jsx';\n\nclass SliderMonitor extends React.Component {\n    constructor (props) {\n        super(props);\n        bindAll(this, [\n            'handleSliderUpdate'\n        ]);\n\n        this.state = {\n            value: props.value\n        };\n    }\n    componentWillReceiveProps (nextProps) {\n        if (this.state.value !== nextProps.value) {\n            this.setState({value: nextProps.value});\n        }\n    }\n    handleSliderUpdate (e) {\n        this.setState({value: Number(e.target.value)});\n        const {vm, targetId, id: variableId} = this.props;\n        setVariableValue(vm, targetId, variableId, Number(e.target.value));\n    }\n    render () {\n        const {\n            vm, // eslint-disable-line no-unused-vars\n            value, // eslint-disable-line no-unused-vars\n            ...props\n        } = this.props;\n        return (\n            <SliderMonitorComponent\n                {...props}\n                value={this.state.value}\n                onSliderUpdate={this.handleSliderUpdate}\n            />\n        );\n    }\n}\n\nSliderMonitor.propTypes = {\n    id: PropTypes.string,\n    targetId: PropTypes.string,\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string\n    ]),\n    vm: PropTypes.instanceOf(VM)\n};\n\nconst mapStateToProps = state => ({vm: state.scratchGui.vm});\n\nexport default connect(mapStateToProps)(SliderMonitor);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport bindAll from 'lodash.bindall';\nimport SliderPromptComponent from '../components/slider-prompt/slider-prompt.jsx';\n\nclass SliderPrompt extends React.Component {\n    constructor (props) {\n        super(props);\n        bindAll(this, [\n            'handleOk',\n            'handleCancel',\n            'handleChangeMin',\n            'handleChangeMax',\n            'handleKeyPress',\n            'validates',\n            'shouldBeDiscrete'\n        ]);\n\n        const {isDiscrete, minValue, maxValue} = this.props;\n        this.state = {\n            // For internal use, convert values to strings based on isDiscrete\n            // This is because `<input />` always returns values as strings.\n            minValue: isDiscrete ? minValue.toFixed(0) : minValue.toFixed(2),\n            maxValue: isDiscrete ? maxValue.toFixed(0) : maxValue.toFixed(2)\n        };\n    }\n    handleKeyPress (event) {\n        if (event.key === 'Enter') this.handleOk();\n    }\n    handleOk () {\n        const {minValue, maxValue} = this.state;\n        if (!this.validates(minValue, maxValue)) {\n            this.props.onCancel();\n            return;\n        }\n        this.props.onOk(\n            parseFloat(minValue),\n            parseFloat(maxValue),\n            this.shouldBeDiscrete(minValue, maxValue));\n    }\n    handleCancel () {\n        this.props.onCancel();\n    }\n    handleChangeMin (e) {\n        this.setState({minValue: e.target.value});\n    }\n    handleChangeMax (e) {\n        this.setState({maxValue: e.target.value});\n    }\n    shouldBeDiscrete (min, max) {\n        return min.indexOf('.') + max.indexOf('.') === -2; // Both -1\n    }\n    validates (min, max) {\n        return isFinite(min) && isFinite(max);\n    }\n    render () {\n        return (\n            <SliderPromptComponent\n                maxValue={this.state.maxValue}\n                minValue={this.state.minValue}\n                onCancel={this.handleCancel}\n                onChangeMax={this.handleChangeMax}\n                onChangeMin={this.handleChangeMin}\n                onKeyPress={this.handleKeyPress}\n                onOk={this.handleOk}\n            />\n        );\n    }\n}\n\nSliderPrompt.propTypes = {\n    isDiscrete: PropTypes.bool,\n    maxValue: PropTypes.number,\n    minValue: PropTypes.number,\n    onCancel: PropTypes.func.isRequired,\n    onOk: PropTypes.func.isRequired\n};\n\nSliderPrompt.defaultProps = {\n    maxValue: 100,\n    minValue: 0,\n    isDiscrete: true\n};\n\nexport default SliderPrompt;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport bindAll from 'lodash.bindall';\nimport VM from 'scratch-vm';\nimport {STAGE_SIZE_MODES} from '../lib/layout-constants';\nimport {setStageSize} from '../reducers/stage-size';\nimport {setFullScreen} from '../reducers/mode';\n\nimport {connect} from 'react-redux';\n\nimport StageHeaderComponent from '../components/stage-header/stage-header.jsx';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass StageHeader extends React.Component {\n    constructor (props) {\n        super(props);\n        bindAll(this, [\n            'handleKeyPress'\n        ]);\n    }\n    componentDidMount () {\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n    componentWillUnmount () {\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    handleKeyPress (event) {\n        if (event.key === 'Escape' && this.props.isFullScreen) {\n            this.props.onSetStageUnFull(false);\n        }\n    }\n    render () {\n        const {\n            ...props\n        } = this.props;\n        return (\n            <StageHeaderComponent\n                {...props}\n                onKeyPress={this.handleKeyPress}\n            />\n        );\n    }\n}\n\nStageHeader.propTypes = {\n    isFullScreen: PropTypes.bool,\n    isPlayerOnly: PropTypes.bool,\n    onSetStageUnFull: PropTypes.func.isRequired,\n    showBranding: PropTypes.bool,\n    stageSizeMode: PropTypes.oneOf(Object.keys(STAGE_SIZE_MODES)),\n    vm: PropTypes.instanceOf(VM).isRequired\n};\n\nconst mapStateToProps = state => ({\n    stageSizeMode: state.scratchGui.stageSize.stageSize,\n    showBranding: state.scratchGui.mode.showBranding,\n    isFullScreen: state.scratchGui.mode.isFullScreen,\n    isPlayerOnly: state.scratchGui.mode.isPlayerOnly\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSetStageLarge: () => dispatch(setStageSize(STAGE_SIZE_MODES.large)),\n    onSetStageSmall: () => dispatch(setStageSize(STAGE_SIZE_MODES.small)),\n    onSetStageFull: () => dispatch(setFullScreen(true)),\n    onSetStageUnFull: () => dispatch(setFullScreen(false))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(StageHeader);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport VM from 'scratch-vm';\nimport {STAGE_DISPLAY_SIZES} from '../lib/layout-constants.js';\nimport StageWrapperComponent from '../components/stage-wrapper/stage-wrapper.jsx';\n\nconst StageWrapper = props => <StageWrapperComponent {...props} />;\n\nStageWrapper.propTypes = {\n    isRendererSupported: PropTypes.bool.isRequired,\n    stageSize: PropTypes.oneOf(Object.keys(STAGE_DISPLAY_SIZES)).isRequired,\n    vm: PropTypes.instanceOf(VM).isRequired\n};\n\nexport default StageWrapper;\n","import bindAll from 'lodash.bindall';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Renderer from 'scratch-render';\nimport VM from 'scratch-vm';\nimport {connect} from 'react-redux';\n\nimport {STAGE_DISPLAY_SIZES} from '../lib/layout-constants';\nimport {getEventXY} from '../lib/touch-utils';\nimport VideoProvider from '../lib/video/video-provider';\nimport {BitmapAdapter as V2BitmapAdapter} from 'scratch-svg-renderer';\n\nimport StageComponent from '../components/stage/stage.jsx';\n\nimport {\n    activateColorPicker,\n    deactivateColorPicker\n} from '../reducers/color-picker';\n\nconst colorPickerRadius = 20;\nconst dragThreshold = 3; // Same as the block drag threshold\n\nclass Stage extends React.Component {\n    constructor (props) {\n        super(props);\n        bindAll(this, [\n            'attachMouseEvents',\n            'cancelMouseDownTimeout',\n            'detachMouseEvents',\n            'handleDoubleClick',\n            'handleQuestionAnswered',\n            'onMouseUp',\n            'onMouseMove',\n            'onMouseDown',\n            'onStartDrag',\n            'onStopDrag',\n            'onWheel',\n            'updateRect',\n            'questionListener',\n            'setDragCanvas',\n            'clearDragCanvas',\n            'drawDragCanvas',\n            'positionDragCanvas'\n        ]);\n        this.state = {\n            mouseDownTimeoutId: null,\n            mouseDownPosition: null,\n            isDragging: false,\n            dragOffset: null,\n            dragId: null,\n            colorInfo: null,\n            question: null\n        };\n        if (this.props.vm.renderer) {\n            this.renderer = this.props.vm.renderer;\n            this.canvas = this.renderer.canvas;\n        } else {\n            this.canvas = document.createElement('canvas');\n            this.renderer = new Renderer(this.canvas);\n            this.props.vm.attachRenderer(this.renderer);\n\n            // Only attach a video provider once because it is stateful\n            this.props.vm.setVideoProvider(new VideoProvider());\n\n            // Calling draw a single time before any project is loaded just makes\n            // the canvas white instead of solid black–needed because it is not\n            // possible to use CSS to style the canvas to have a different\n            // default color\n            this.props.vm.renderer.draw();\n        }\n        this.props.vm.attachV2BitmapAdapter(new V2BitmapAdapter());\n    }\n    componentDidMount () {\n        this.attachRectEvents();\n        this.attachMouseEvents(this.canvas);\n        this.updateRect();\n        this.props.vm.runtime.addListener('QUESTION', this.questionListener);\n    }\n    shouldComponentUpdate (nextProps, nextState) {\n        return this.props.stageSize !== nextProps.stageSize ||\n            this.props.isColorPicking !== nextProps.isColorPicking ||\n            this.state.colorInfo !== nextState.colorInfo ||\n            this.props.isFullScreen !== nextProps.isFullScreen ||\n            this.state.question !== nextState.question ||\n            this.props.micIndicator !== nextProps.micIndicator ||\n            this.props.isStarted !== nextProps.isStarted;\n    }\n    componentDidUpdate (prevProps) {\n        if (this.props.isColorPicking && !prevProps.isColorPicking) {\n            this.startColorPickingLoop();\n        } else if (!this.props.isColorPicking && prevProps.isColorPicking) {\n            this.stopColorPickingLoop();\n        }\n        this.updateRect();\n        this.renderer.resize(this.rect.width, this.rect.height);\n    }\n    componentWillUnmount () {\n        this.detachMouseEvents(this.canvas);\n        this.detachRectEvents();\n        this.stopColorPickingLoop();\n        this.props.vm.runtime.removeListener('QUESTION', this.questionListener);\n    }\n    questionListener (question) {\n        this.setState({question: question});\n    }\n    handleQuestionAnswered (answer) {\n        this.setState({question: null}, () => {\n            this.props.vm.runtime.emit('ANSWER', answer);\n        });\n    }\n    startColorPickingLoop () {\n        this.intervalId = setInterval(() => {\n            if (typeof this.pickX === 'number') {\n                this.setState({colorInfo: this.getColorInfo(this.pickX, this.pickY)});\n            }\n        }, 30);\n    }\n    stopColorPickingLoop () {\n        clearInterval(this.intervalId);\n    }\n    attachMouseEvents (canvas) {\n        document.addEventListener('mousemove', this.onMouseMove);\n        document.addEventListener('mouseup', this.onMouseUp);\n        document.addEventListener('touchmove', this.onMouseMove);\n        document.addEventListener('touchend', this.onMouseUp);\n        canvas.addEventListener('mousedown', this.onMouseDown);\n        canvas.addEventListener('touchstart', this.onMouseDown);\n        canvas.addEventListener('wheel', this.onWheel);\n    }\n    detachMouseEvents (canvas) {\n        document.removeEventListener('mousemove', this.onMouseMove);\n        document.removeEventListener('mouseup', this.onMouseUp);\n        document.removeEventListener('touchmove', this.onMouseMove);\n        document.removeEventListener('touchend', this.onMouseUp);\n        canvas.removeEventListener('mousedown', this.onMouseDown);\n        canvas.removeEventListener('touchstart', this.onMouseDown);\n        canvas.removeEventListener('wheel', this.onWheel);\n    }\n    attachRectEvents () {\n        window.addEventListener('resize', this.updateRect);\n        window.addEventListener('scroll', this.updateRect);\n    }\n    detachRectEvents () {\n        window.removeEventListener('resize', this.updateRect);\n        window.removeEventListener('scroll', this.updateRect);\n    }\n    updateRect () {\n        this.rect = this.canvas.getBoundingClientRect();\n    }\n    getScratchCoords (x, y) {\n        const nativeSize = this.renderer.getNativeSize();\n        return [\n            (nativeSize[0] / this.rect.width) * (x - (this.rect.width / 2)),\n            (nativeSize[1] / this.rect.height) * (y - (this.rect.height / 2))\n        ];\n    }\n    getColorInfo (x, y) {\n        return {\n            x: x,\n            y: y,\n            ...this.renderer.extractColor(x, y, colorPickerRadius)\n        };\n    }\n    handleDoubleClick (e) {\n        const {x, y} = getEventXY(e);\n        // Set editing target from cursor position, if clicking on a sprite.\n        const mousePosition = [x - this.rect.left, y - this.rect.top];\n        const drawableId = this.renderer.pick(mousePosition[0], mousePosition[1]);\n        if (drawableId === null) return;\n        const targetId = this.props.vm.getTargetIdForDrawableId(drawableId);\n        if (targetId === null) return;\n        this.props.vm.setEditingTarget(targetId);\n    }\n    onMouseMove (e) {\n        const {x, y} = getEventXY(e);\n        const mousePosition = [x - this.rect.left, y - this.rect.top];\n\n        if (this.props.isColorPicking) {\n            // Set the pickX/Y for the color picker loop to pick up\n            this.pickX = mousePosition[0];\n            this.pickY = mousePosition[1];\n        }\n\n        if (this.state.mouseDown && !this.state.isDragging) {\n            const distanceFromMouseDown = Math.sqrt(\n                Math.pow(mousePosition[0] - this.state.mouseDownPosition[0], 2) +\n                Math.pow(mousePosition[1] - this.state.mouseDownPosition[1], 2)\n            );\n            if (distanceFromMouseDown > dragThreshold) {\n                this.cancelMouseDownTimeout();\n                this.onStartDrag(...this.state.mouseDownPosition);\n            }\n        }\n        if (this.state.mouseDown && this.state.isDragging) {\n            // Editor drag style only updates the drag canvas, does full update at the end of drag\n            // Non-editor drag style just updates the sprite continuously.\n            if (this.props.useEditorDragStyle) {\n                this.positionDragCanvas(mousePosition[0], mousePosition[1]);\n            } else {\n                const spritePosition = this.getScratchCoords(mousePosition[0], mousePosition[1]);\n                this.props.vm.postSpriteInfo({\n                    x: spritePosition[0] + this.state.dragOffset[0],\n                    y: -(spritePosition[1] + this.state.dragOffset[1]),\n                    force: true\n                });\n            }\n        }\n        const coordinates = {\n            x: mousePosition[0],\n            y: mousePosition[1],\n            canvasWidth: this.rect.width,\n            canvasHeight: this.rect.height\n        };\n        this.props.vm.postIOData('mouse', coordinates);\n    }\n    onMouseUp (e) {\n        const {x, y} = getEventXY(e);\n        const mousePosition = [x - this.rect.left, y - this.rect.top];\n        this.cancelMouseDownTimeout();\n        this.setState({\n            mouseDown: false,\n            mouseDownPosition: null\n        });\n        const data = {\n            isDown: false,\n            x: x - this.rect.left,\n            y: y - this.rect.top,\n            canvasWidth: this.rect.width,\n            canvasHeight: this.rect.height,\n            wasDragged: this.state.isDragging\n        };\n        if (this.state.isDragging) {\n            this.onStopDrag(mousePosition[0], mousePosition[1]);\n        }\n        this.props.vm.postIOData('mouse', data);\n\n        if (this.props.isColorPicking &&\n            mousePosition[0] > 0 && mousePosition[0] < this.rect.width &&\n            mousePosition[1] > 0 && mousePosition[1] < this.rect.height\n        ) {\n            const {r, g, b} = this.state.colorInfo.color;\n            const componentToString = c => {\n                const hex = c.toString(16);\n                return hex.length === 1 ? `0${hex}` : hex;\n            };\n            const colorString = `#${componentToString(r)}${componentToString(g)}${componentToString(b)}`;\n            this.props.onDeactivateColorPicker(colorString);\n            this.setState({colorInfo: null});\n            this.pickX = null;\n            this.pickY = null;\n        }\n    }\n    onMouseDown (e) {\n        this.updateRect();\n        const {x, y} = getEventXY(e);\n        const mousePosition = [x - this.rect.left, y - this.rect.top];\n        if (this.props.isColorPicking) {\n            // Set the pickX/Y for the color picker loop to pick up\n            this.pickX = mousePosition[0];\n            this.pickY = mousePosition[1];\n            // Immediately update the color picker info\n            this.setState({colorInfo: this.getColorInfo(this.pickX, this.pickY)});\n        } else {\n            if (e.button === 0 || (window.TouchEvent && e instanceof TouchEvent)) {\n                this.setState({\n                    mouseDown: true,\n                    mouseDownPosition: mousePosition,\n                    mouseDownTimeoutId: setTimeout(\n                        this.onStartDrag.bind(this, mousePosition[0], mousePosition[1]),\n                        400\n                    )\n                });\n            }\n            const data = {\n                isDown: true,\n                x: mousePosition[0],\n                y: mousePosition[1],\n                canvasWidth: this.rect.width,\n                canvasHeight: this.rect.height\n            };\n            this.props.vm.postIOData('mouse', data);\n            if (e.preventDefault) {\n                // Prevent default to prevent touch from dragging page\n                e.preventDefault();\n                // But we do want any active input to be blurred\n                if (document.activeElement && document.activeElement.blur) {\n                    document.activeElement.blur();\n                }\n            }\n        }\n    }\n    onWheel (e) {\n        const data = {\n            deltaX: e.deltaX,\n            deltaY: e.deltaY\n        };\n        this.props.vm.postIOData('mouseWheel', data);\n    }\n    cancelMouseDownTimeout () {\n        if (this.state.mouseDownTimeoutId !== null) {\n            clearTimeout(this.state.mouseDownTimeoutId);\n        }\n        this.setState({mouseDownTimeoutId: null});\n    }\n    /**\n     * Initialize the position of the \"dragged sprite\" canvas\n     * @param {DrawableExtraction} drawableData The data returned from renderer.extractDrawableScreenSpace\n     * @param {number} x The x position of the initial drag event\n     * @param {number} y The y position of the initial drag event\n     */\n    drawDragCanvas (drawableData, x, y) {\n        const {\n            imageData,\n            x: boundsX,\n            y: boundsY,\n            width: boundsWidth,\n            height: boundsHeight\n        } = drawableData;\n        this.dragCanvas.width = imageData.width;\n        this.dragCanvas.height = imageData.height;\n        // On high-DPI devices, the canvas size in layout-pixels is not equal to the size of the extracted data.\n        this.dragCanvas.style.width = `${boundsWidth}px`;\n        this.dragCanvas.style.height = `${boundsHeight}px`;\n\n        this.dragCanvas.getContext('2d').putImageData(imageData, 0, 0);\n        // Position so that pick location is at (0, 0) so that  positionDragCanvas()\n        // can use translation to move to mouse position smoothly.\n        this.dragCanvas.style.left = `${boundsX - x}px`;\n        this.dragCanvas.style.top = `${boundsY - y}px`;\n        this.dragCanvas.style.display = 'block';\n    }\n    clearDragCanvas () {\n        this.dragCanvas.width = this.dragCanvas.height = 0;\n        this.dragCanvas.style.display = 'none';\n    }\n    positionDragCanvas (mouseX, mouseY) {\n        // mouseX/Y are relative to stage top/left, and dragCanvas is already\n        // positioned so that the pick location is at (0,0).\n        this.dragCanvas.style.transform = `translate(${mouseX}px, ${mouseY}px)`;\n    }\n    onStartDrag (x, y) {\n        if (this.state.dragId) return;\n        const drawableId = this.renderer.pick(x, y);\n        if (drawableId === null) return;\n        const targetId = this.props.vm.getTargetIdForDrawableId(drawableId);\n        if (targetId === null) return;\n\n        const target = this.props.vm.runtime.getTargetById(targetId);\n\n        // Do not start drag unless in editor drag mode or target is draggable\n        if (!(this.props.useEditorDragStyle || target.draggable)) return;\n\n        // Dragging always brings the target to the front\n        target.goToFront();\n\n        const [scratchMouseX, scratchMouseY] = this.getScratchCoords(x, y);\n        const offsetX = target.x - scratchMouseX;\n        const offsetY = -(target.y + scratchMouseY);\n\n        this.props.vm.startDrag(targetId);\n        this.setState({\n            isDragging: true,\n            dragId: targetId,\n            dragOffset: [offsetX, offsetY]\n        });\n        if (this.props.useEditorDragStyle) {\n            // Extract the drawable art\n            const drawableData = this.renderer.extractDrawableScreenSpace(drawableId);\n            this.drawDragCanvas(drawableData, x, y);\n            this.positionDragCanvas(x, y);\n            this.props.vm.postSpriteInfo({visible: false});\n            this.props.vm.renderer.draw();\n        }\n    }\n    onStopDrag (mouseX, mouseY) {\n        const dragId = this.state.dragId;\n        const commonStopDragActions = () => {\n            this.props.vm.stopDrag(dragId);\n            this.setState({\n                isDragging: false,\n                dragOffset: null,\n                dragId: null\n            });\n        };\n        if (this.props.useEditorDragStyle) {\n            // Need to sequence these actions to prevent flickering.\n            const spriteInfo = {visible: true};\n            // First update the sprite position if dropped in the stage.\n            if (mouseX > 0 && mouseX < this.rect.width &&\n                mouseY > 0 && mouseY < this.rect.height) {\n                const spritePosition = this.getScratchCoords(mouseX, mouseY);\n                spriteInfo.x = spritePosition[0] + this.state.dragOffset[0];\n                spriteInfo.y = -(spritePosition[1] + this.state.dragOffset[1]);\n                spriteInfo.force = true;\n            }\n            this.props.vm.postSpriteInfo(spriteInfo);\n            // Then clear the dragging canvas and stop drag (potentially slow if selecting sprite)\n            this.clearDragCanvas();\n            commonStopDragActions();\n            this.props.vm.renderer.draw();\n        } else {\n            commonStopDragActions();\n        }\n    }\n    setDragCanvas (canvas) {\n        this.dragCanvas = canvas;\n    }\n    render () {\n        const {\n            vm, // eslint-disable-line no-unused-vars\n            onActivateColorPicker, // eslint-disable-line no-unused-vars\n            ...props\n        } = this.props;\n        return (\n            <StageComponent\n                canvas={this.canvas}\n                colorInfo={this.state.colorInfo}\n                dragRef={this.setDragCanvas}\n                question={this.state.question}\n                onDoubleClick={this.handleDoubleClick}\n                onQuestionAnswered={this.handleQuestionAnswered}\n                {...props}\n            />\n        );\n    }\n}\n\nStage.propTypes = {\n    isColorPicking: PropTypes.bool,\n    isFullScreen: PropTypes.bool.isRequired,\n    isStarted: PropTypes.bool,\n    micIndicator: PropTypes.bool,\n    onActivateColorPicker: PropTypes.func,\n    onDeactivateColorPicker: PropTypes.func,\n    stageSize: PropTypes.oneOf(Object.keys(STAGE_DISPLAY_SIZES)).isRequired,\n    useEditorDragStyle: PropTypes.bool,\n    vm: PropTypes.instanceOf(VM).isRequired\n};\n\nStage.defaultProps = {\n    useEditorDragStyle: true\n};\n\nconst mapStateToProps = state => ({\n    isColorPicking: state.scratchGui.colorPicker.active,\n    isFullScreen: state.scratchGui.mode.isFullScreen,\n    isStarted: state.scratchGui.vmStatus.started,\n    micIndicator: state.scratchGui.micIndicator,\n    // Do not use editor drag style in fullscreen or player mode.\n    useEditorDragStyle: !(state.scratchGui.mode.isFullScreen || state.scratchGui.mode.isPlayerOnly)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onActivateColorPicker: () => dispatch(activateColorPicker()),\n    onDeactivateColorPicker: color => dispatch(deactivateColorPicker(color))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Stage);\n","import bindAll from 'lodash.bindall';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {connect} from 'react-redux';\nimport VM from 'scratch-vm';\n\nclass TargetHighlight extends React.Component {\n    constructor (props) {\n        super(props);\n        bindAll(this, [\n            'getPageCoords'\n        ]);\n    }\n\n    // Transform scratch coordinates into page coordinates\n    getPageCoords (x, y) {\n        const {stageWidth, stageHeight, vm} = this.props;\n        // The renderers \"nativeSize\" is the [width, height] of the stage in scratch-units\n        const nativeSize = vm.renderer.getNativeSize();\n        return [\n            ((stageWidth / nativeSize[0]) * x) + (stageWidth / 2),\n            -((stageHeight / nativeSize[1]) * y) + (stageHeight / 2)\n        ];\n    }\n\n    render () {\n        const {\n            className,\n            highlightedTargetId,\n            highlightedTargetTime,\n            vm\n        } = this.props;\n\n        if (!(highlightedTargetId && vm && vm.renderer &&\n            vm.runtime.getTargetById(highlightedTargetId))) return null;\n\n        const target = vm.runtime.getTargetById(highlightedTargetId);\n        const bounds = vm.renderer.getBounds(target.drawableID);\n        const [left, top] = this.getPageCoords(bounds.left, bounds.top);\n        const [right, bottom] = this.getPageCoords(bounds.right, bounds.bottom);\n\n        const pad = 2; // px\n\n        return (\n            <div\n                className={className}\n                // Ensure new DOM element each update to restart animation\n                key={highlightedTargetTime}\n                style={{\n                    position: 'absolute',\n                    top: `${top - pad}px`,\n                    left: `${left - pad}px`,\n                    width: `${(right - left) + (2 * pad)}px`,\n                    height: `${(bottom - top) + (2 * pad)}px`\n                }}\n            />\n        );\n    }\n}\n\nTargetHighlight.propTypes = {\n    className: PropTypes.string,\n    highlightedTargetId: PropTypes.string,\n    highlightedTargetTime: PropTypes.number,\n    stageHeight: PropTypes.number,\n    stageWidth: PropTypes.number,\n    vm: PropTypes.instanceOf(VM)\n};\n\nconst mapStateToProps = state => ({\n    highlightedTargetTime: state.scratchGui.targets.highlightedTargetTime,\n    highlightedTargetId: state.scratchGui.targets.highlightedTargetId,\n    vm: state.scratchGui.vm\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TargetHighlight);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport WebGlModalComponent from '../components/webgl-modal/webgl-modal.jsx';\n\nclass WebGlModal extends React.Component {\n    handleCancel () {\n        window.history.back();\n    }\n    render () {\n        return (\n            <WebGlModalComponent\n                isRtl={this.props.isRtl}\n                onBack={this.handleCancel}\n            />\n        );\n    }\n}\n\nWebGlModal.propTypes = {\n    isRtl: PropTypes.bool\n};\n\nexport default WebGlModal;\n","import React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport keyMirror from 'keymirror';\n\nimport successImage from '../assets/icon--success.svg';\n\nconst AlertTypes = keyMirror({\n    STANDARD: null,\n    EXTENSION: null,\n    INLINE: null\n});\n\nconst AlertLevels = {\n    SUCCESS: 'success',\n    INFO: 'info',\n    WARN: 'warn'\n};\n\nconst alerts = [\n    {\n        alertId: 'createSuccess',\n        alertType: AlertTypes.STANDARD,\n        clearList: ['createSuccess', 'creating', 'createCopySuccess', 'creatingCopy',\n            'createRemixSuccess', 'creatingRemix', 'saveSuccess', 'saving'],\n        content: (\n            <FormattedMessage\n                defaultMessage=\"New project created.\"\n                description=\"Message indicating that project was successfully created\"\n                id=\"gui.alerts.createsuccess\"\n            />\n        ),\n        iconURL: successImage,\n        level: AlertLevels.SUCCESS,\n        maxDisplaySecs: 5\n    },\n    {\n        alertId: 'createCopySuccess',\n        alertType: AlertTypes.STANDARD,\n        clearList: ['createSuccess', 'creating', 'createCopySuccess', 'creatingCopy',\n            'createRemixSuccess', 'creatingRemix', 'saveSuccess', 'saving'],\n        content: (\n            <FormattedMessage\n                defaultMessage=\"Project saved as a copy.\"\n                description=\"Message indicating that project was successfully created\"\n                id=\"gui.alerts.createcopysuccess\"\n            />\n        ),\n        iconURL: successImage,\n        level: AlertLevels.SUCCESS,\n        maxDisplaySecs: 5\n    },\n    {\n        alertId: 'createRemixSuccess',\n        alertType: AlertTypes.STANDARD,\n        clearList: ['createSuccess', 'creating', 'createCopySuccess', 'creatingCopy',\n            'createRemixSuccess', 'creatingRemix', 'saveSuccess', 'saving'],\n        content: (\n            <FormattedMessage\n                defaultMessage=\"Project saved as a remix.\"\n                description=\"Message indicating that project was successfully created\"\n                id=\"gui.alerts.createremixsuccess\"\n            />\n        ),\n        iconURL: successImage,\n        level: AlertLevels.SUCCESS,\n        maxDisplaySecs: 5\n    },\n    {\n        alertId: 'creating',\n        alertType: AlertTypes.STANDARD,\n        clearList: ['createSuccess', 'creating', 'createCopySuccess', 'creatingCopy',\n            'createRemixSuccess', 'creatingRemix', 'saveSuccess', 'saving'],\n        content: (\n            <FormattedMessage\n                defaultMessage=\"Creating new…\"\n                description=\"Message indicating that project is in process of creating\"\n                id=\"gui.alerts.creating\"\n            />\n        ),\n        iconSpinner: true,\n        level: AlertLevels.SUCCESS\n    },\n    {\n        alertId: 'creatingCopy',\n        alertType: AlertTypes.STANDARD,\n        clearList: ['createSuccess', 'creating', 'createCopySuccess', 'creatingCopy',\n            'createRemixSuccess', 'creatingRemix', 'saveSuccess', 'saving'],\n        content: (\n            <FormattedMessage\n                defaultMessage=\"Copying project…\"\n                description=\"Message indicating that project is in process of copying\"\n                id=\"gui.alerts.creatingCopy\"\n            />\n        ),\n        iconSpinner: true,\n        level: AlertLevels.SUCCESS\n    },\n    {\n        alertId: 'creatingRemix',\n        alertType: AlertTypes.STANDARD,\n        clearList: ['createSuccess', 'creating', 'createCopySuccess', 'creatingCopy',\n            'createRemixSuccess', 'creatingRemix', 'saveSuccess', 'saving'],\n        content: (\n            <FormattedMessage\n                defaultMessage=\"Remixing project…\"\n                description=\"Message indicating that project is in process of remixing\"\n                id=\"gui.alerts.creatingRemix\"\n            />\n        ),\n        iconSpinner: true,\n        level: AlertLevels.SUCCESS\n    },\n    {\n        alertId: 'creatingError',\n        clearList: ['createSuccess', 'creating', 'createCopySuccess', 'creatingCopy',\n            'createRemixSuccess', 'creatingRemix', 'saveSuccess', 'saving'],\n        closeButton: true,\n        content: (\n            <FormattedMessage\n                defaultMessage=\"Could not create the project. Please try again!\"\n                description=\"Message indicating that project could not be created\"\n                id=\"gui.alerts.creatingError\"\n            />\n        ),\n        level: AlertLevels.WARN\n    },\n    {\n        alertId: 'savingError',\n        clearList: ['createSuccess', 'creating', 'createCopySuccess', 'creatingCopy',\n            'createRemixSuccess', 'creatingRemix', 'saveSuccess', 'saving'],\n        showDownload: true,\n        showSaveNow: true,\n        closeButton: false,\n        content: (\n            <FormattedMessage\n                defaultMessage=\"Project could not save.\"\n                description=\"Message indicating that project could not be saved\"\n                id=\"gui.alerts.savingError\"\n            />\n        ),\n        level: AlertLevels.WARN\n    },\n    {\n        alertId: 'saveSuccess',\n        alertType: AlertTypes.INLINE,\n        clearList: ['saveSuccess', 'saving', 'savingError'],\n        content: (\n            <FormattedMessage\n                defaultMessage=\"Project saved.\"\n                description=\"Message indicating that project was successfully saved\"\n                id=\"gui.alerts.savesuccess\"\n            />\n        ),\n        iconURL: successImage,\n        level: AlertLevels.SUCCESS,\n        maxDisplaySecs: 3\n    },\n    {\n        alertId: 'saving',\n        alertType: AlertTypes.INLINE,\n        clearList: ['saveSuccess', 'saving', 'savingError'],\n        content: (\n            <FormattedMessage\n                defaultMessage=\"Saving project…\"\n                description=\"Message indicating that project is in process of saving\"\n                id=\"gui.alerts.saving\"\n            />\n        ),\n        iconSpinner: true,\n        level: AlertLevels.INFO\n    },\n    {\n        alertId: 'cloudInfo',\n        alertType: AlertTypes.STANDARD,\n        clearList: ['cloudInfo'],\n        content: (\n            <FormattedMessage\n                defaultMessage=\"Please note, cloud variables only support numbers, not letters or symbols. {learnMoreLink}\" // eslint-disable-line max-len\n                description=\"Info about cloud variable limitations\"\n                id=\"gui.alerts.cloudInfo\"\n                values={{\n                    learnMoreLink: (\n                        <a\n                            href=\"https://scratch.mit.edu/info/faq/#clouddata\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                        >\n                            <FormattedMessage\n                                defaultMessage=\"Learn more.\"\n                                description=\"Link text to cloud var faq\"\n                                id=\"gui.alerts.cloudInfoLearnMore\"\n                            />\n                        </a>\n                    )\n                }}\n            />\n        ),\n        closeButton: true,\n        level: AlertLevels.SUCCESS,\n        maxDisplaySecs: 15\n    },\n    {\n        alertId: 'importingAsset',\n        alertType: AlertTypes.STANDARD,\n        clearList: [],\n        content: (\n            <FormattedMessage\n                defaultMessage=\"Importing…\"\n                description=\"Message indicating that project is in process of importing\"\n                id=\"gui.alerts.importing\"\n            />\n        ),\n        iconSpinner: true,\n        level: AlertLevels.SUCCESS\n    }\n];\n\nexport {\n    alerts as default,\n    AlertLevels,\n    AlertTypes\n};\n","// This was originally a thin wrapper around `react-ga`, which only supports UA.\n// We now use GTM, so we could use `react-gtm-module`, but it doesn't support GTM environments (GTM_ENV_AUTH).\n// So we use the GTM snippets directly.\n\nconst GTM_ID = (process.env.GTM_ID || window.GTM_ID);\nconst GTM_ENV_AUTH = (process.env.GTM_ENV_AUTH || window.GTM_ENV_AUTH || '');\n\n/**\n * Build the HTML snippets to load GTM.\n * Call this ONLY if GTM_ID is a valid Tag Manager ID. GTM_ENV_AUTH should be valid or an empty string.\n * The content of the snippets is taken from the GTM web interface. We should check there periodically for changes.\n * @returns {object} an object the GTM snippets.\n * @property {string} script The snippet to load GTM when JavaScript is enabled. Add this to the <head> element.\n * @property {string} noscript The snippet to load GTM when JavaScript is disabled. Add this to the <body> element.\n */\nconst makeGtmSnippets = () => ({\n    script:\n        `<!-- Google Tag Manager -->\n        <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\n            new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n            j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n            'https://www.googletagmanager.com/gtm.js?id='+i+dl+'${GTM_ENV_AUTH}';\n            f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','${GTM_ID}');\n        </script>\n        <!-- End Google Tag Manager -->`,\n    noscript:\n        `<!-- Google Tag Manager (noscript) -->\n        <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=${GTM_ID}${GTM_ENV_AUTH}\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n        <!-- End Google Tag Manager (noscript) -->`\n});\n\nif (GTM_ID) {\n    // load GTM\n    const snippets = makeGtmSnippets();\n\n    const noscript = document.createElement('noscript');\n    noscript.innerHTML = snippets.noscript;\n\n    const script = document.createElement('script');\n    script.innerHTML = snippets.script;\n\n    document.head.insertBefore(script, document.head.firstChild);\n    document.body.insertBefore(noscript, document.body.firstChild);\n}\n\n/**\n * Report analytics to GA4 using an interface similar to the 'react-ga' module we were using for UA.\n */\nconst GA4 = {\n    event: ({category, action, label}) => {\n        window.dataLayer = window.dataLayer || [];\n        // There is no perfect mapping from UA to GA4\n        // See https://support.google.com/analytics/answer/11091025\n        window.dataLayer.push({\n            event: category,\n            action,\n            label\n        });\n    }\n};\n\nexport default GA4;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Provider} from 'react-redux';\nimport {createStore, combineReducers, compose} from 'redux';\nimport ConnectedIntlProvider from './connected-intl-provider.jsx';\n\nimport localesReducer, {initLocale, localesInitialState} from '../reducers/locales';\n\nimport {setPlayer, setFullScreen} from '../reducers/mode.js';\n\nimport locales from 'scratch-l10n';\nimport {detectLocale} from './detect-locale';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n/*\n * Higher Order Component to provide redux state. If an `intl` prop is provided\n * it will override the internal `intl` redux state\n * @param {React.Component} WrappedComponent - component to provide state for\n * @param {boolean} localesOnly - only provide the locale state, not everything\n *                      required by the GUI. Used to exclude excess state when\n                        only rendering modals, not the GUI.\n * @returns {React.Component} component with redux and intl state provided\n */\nconst AppStateHOC = function (WrappedComponent, localesOnly) {\n    class AppStateWrapper extends React.Component {\n        constructor (props) {\n            super(props);\n            let initialState = {};\n            let reducers = {};\n            let enhancer;\n\n            let initializedLocales = localesInitialState;\n            const locale = detectLocale(Object.keys(locales));\n            if (locale !== 'en') {\n                initializedLocales = initLocale(initializedLocales, locale);\n            }\n            if (localesOnly) {\n                // Used for instantiating minimal state for the unsupported\n                // browser modal\n                reducers = {locales: localesReducer};\n                initialState = {locales: initializedLocales};\n                enhancer = composeEnhancers();\n            } else {\n                // You are right, this is gross. But it's necessary to avoid\n                // importing unneeded code that will crash unsupported browsers.\n                const guiRedux = require('../reducers/gui');\n                const guiReducer = guiRedux.default;\n                const {\n                    guiInitialState,\n                    guiMiddleware,\n                    initFullScreen,\n                    initPlayer,\n                    initTelemetryModal\n                } = guiRedux;\n                const {ScratchPaintReducer} = require('scratch-paint');\n\n                let initializedGui = guiInitialState;\n                if (props.isFullScreen || props.isPlayerOnly) {\n                    if (props.isFullScreen) {\n                        initializedGui = initFullScreen(initializedGui);\n                    }\n                    if (props.isPlayerOnly) {\n                        initializedGui = initPlayer(initializedGui);\n                    }\n                } else if (props.showTelemetryModal) {\n                    initializedGui = initTelemetryModal(initializedGui);\n                }\n                reducers = {\n                    locales: localesReducer,\n                    scratchGui: guiReducer,\n                    scratchPaint: ScratchPaintReducer\n                };\n                initialState = {\n                    locales: initializedLocales,\n                    scratchGui: initializedGui\n                };\n                enhancer = composeEnhancers(guiMiddleware);\n            }\n            const reducer = combineReducers(reducers);\n            this.store = createStore(\n                reducer,\n                initialState,\n                enhancer\n            );\n        }\n        componentDidUpdate (prevProps) {\n            if (localesOnly) return;\n            if (prevProps.isPlayerOnly !== this.props.isPlayerOnly) {\n                this.store.dispatch(setPlayer(this.props.isPlayerOnly));\n            }\n            if (prevProps.isFullScreen !== this.props.isFullScreen) {\n                this.store.dispatch(setFullScreen(this.props.isFullScreen));\n            }\n        }\n        render () {\n            const {\n                isFullScreen, // eslint-disable-line no-unused-vars\n                isPlayerOnly, // eslint-disable-line no-unused-vars\n                showTelemetryModal, // eslint-disable-line no-unused-vars\n                ...componentProps\n            } = this.props;\n            return (\n                <Provider store={this.store}>\n                    <ConnectedIntlProvider>\n                        <WrappedComponent\n                            {...componentProps}\n                        />\n                    </ConnectedIntlProvider>\n                </Provider>\n            );\n        }\n    }\n    AppStateWrapper.propTypes = {\n        isFullScreen: PropTypes.bool,\n        isPlayerOnly: PropTypes.bool,\n        isTelemetryEnabled: PropTypes.bool,\n        showTelemetryModal: PropTypes.bool\n    };\n    return AppStateWrapper;\n};\n\nexport default AppStateHOC;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport bindAll from 'lodash.bindall';\n\nimport VM from 'scratch-vm';\nimport CloudProvider from '../lib/cloud-provider';\n\nimport {\n    getIsShowingWithId\n} from '../reducers/project-state';\n\nimport {\n    showAlertWithTimeout\n} from '../reducers/alerts';\n\n/*\n * Higher Order Component to manage the connection to the cloud server.\n * @param {React.Component} WrappedComponent component to manage VM events for\n * @returns {React.Component} connected component with vm events bound to redux\n */\nconst cloudManagerHOC = function (WrappedComponent) {\n    class CloudManager extends React.Component {\n        constructor (props) {\n            super(props);\n            this.cloudProvider = null;\n            bindAll(this, [\n                'handleCloudDataUpdate',\n                'handleExtensionAdded'\n            ]);\n\n            this.props.vm.on('HAS_CLOUD_DATA_UPDATE', this.handleCloudDataUpdate);\n            this.props.vm.on('EXTENSION_ADDED', this.handleExtensionAdded);\n        }\n        componentDidMount () {\n            if (this.shouldConnect(this.props)) {\n                this.connectToCloud();\n            }\n        }\n        componentDidUpdate (prevProps) {\n            // TODO need to add cloud provider disconnection logic and cloud data clearing logic\n            // when loading a new project e.g. via file upload\n            // (and eventually move it out of the vm.clear function)\n\n            if (this.shouldConnect(this.props) && !this.shouldConnect(prevProps)) {\n                this.connectToCloud();\n            }\n\n            if (this.shouldDisconnect(this.props, prevProps)) {\n                this.disconnectFromCloud();\n            }\n        }\n        componentWillUnmount () {\n            this.disconnectFromCloud();\n        }\n        canUseCloud (props) {\n            return !!(props.cloudHost && props.username && props.vm && props.projectId && props.hasCloudPermission);\n        }\n        shouldConnect (props) {\n            return !this.isConnected() && this.canUseCloud(props) &&\n                props.isShowingWithId && props.vm.runtime.hasCloudData() &&\n                props.canModifyCloudData;\n        }\n        shouldDisconnect (props, prevProps) {\n            return this.isConnected() &&\n                ( // Can no longer use cloud or cloud provider info is now stale\n                    !this.canUseCloud(props) ||\n                    !props.vm.runtime.hasCloudData() ||\n                    (props.projectId !== prevProps.projectId) ||\n                    (props.username !== prevProps.username) ||\n                    // Editing someone else's project\n                    !props.canModifyCloudData\n                );\n        }\n        isConnected () {\n            return this.cloudProvider && !!this.cloudProvider.connection;\n        }\n        connectToCloud () {\n            this.cloudProvider = new CloudProvider(\n                this.props.cloudHost,\n                this.props.vm,\n                this.props.username,\n                this.props.projectId);\n            this.props.vm.setCloudProvider(this.cloudProvider);\n        }\n        disconnectFromCloud () {\n            if (this.cloudProvider) {\n                this.cloudProvider.requestCloseConnection();\n                this.cloudProvider = null;\n                this.props.vm.setCloudProvider(null);\n            }\n        }\n        handleCloudDataUpdate (projectHasCloudData) {\n            if (this.isConnected() && !projectHasCloudData) {\n                this.disconnectFromCloud();\n            } else if (this.shouldConnect(this.props)) {\n                this.props.onShowCloudInfo();\n                this.connectToCloud();\n            }\n        }\n        handleExtensionAdded (categoryInfo) {\n            // Note that props.vm.extensionManager.isExtensionLoaded('videoSensing') is still false\n            // at the point of this callback, so it is difficult to reuse the canModifyCloudData logic.\n            if (categoryInfo.id === 'videoSensing' && this.isConnected()) {\n                this.disconnectFromCloud();\n            }\n        }\n        render () {\n            const {\n                /* eslint-disable no-unused-vars */\n                canModifyCloudData,\n                cloudHost,\n                projectId,\n                username,\n                hasCloudPermission,\n                isShowingWithId,\n                onShowCloudInfo,\n                /* eslint-enable no-unused-vars */\n                vm,\n                ...componentProps\n            } = this.props;\n            return (\n                <WrappedComponent\n                    canUseCloud={this.canUseCloud(this.props)}\n                    vm={vm}\n                    {...componentProps}\n                />\n            );\n        }\n    }\n\n    CloudManager.propTypes = {\n        canModifyCloudData: PropTypes.bool.isRequired,\n        cloudHost: PropTypes.string,\n        hasCloudPermission: PropTypes.bool,\n        isShowingWithId: PropTypes.bool.isRequired,\n        onShowCloudInfo: PropTypes.func,\n        projectId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        username: PropTypes.string,\n        vm: PropTypes.instanceOf(VM).isRequired\n    };\n\n    CloudManager.defaultProps = {\n        cloudHost: null,\n        hasCloudPermission: false,\n        onShowCloudInfo: () => {},\n        username: null\n    };\n\n    const mapStateToProps = (state, ownProps) => {\n        const loadingState = state.scratchGui.projectState.loadingState;\n        return {\n            isShowingWithId: getIsShowingWithId(loadingState),\n            projectId: state.scratchGui.projectState.projectId,\n            // if you're editing someone else's project, you can't modify cloud data\n            canModifyCloudData: (!state.scratchGui.mode.hasEverEnteredEditor || ownProps.canSave) &&\n                // possible security concern if the program attempts to encode webcam data over cloud variables\n                !ownProps.vm.extensionManager.isExtensionLoaded('videoSensing')\n        };\n    };\n\n    const mapDispatchToProps = dispatch => ({\n        onShowCloudInfo: () => showAlertWithTimeout(dispatch, 'cloudInfo')\n    });\n\n    // Allow incoming props to override redux-provided props. Used to mock in tests.\n    const mergeProps = (stateProps, dispatchProps, ownProps) => Object.assign(\n        {}, stateProps, dispatchProps, ownProps\n    );\n\n    return connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(CloudManager);\n};\n\nexport default cloudManagerHOC;\n","import log from './log.js';\nimport throttle from 'lodash.throttle';\n\n\nclass CloudProvider {\n    /**\n     * A cloud data provider which creates and manages a web socket connection\n     * to the Scratch cloud data server. This provider is responsible for\n     * interfacing with the VM's cloud io device.\n     * @param {string} cloudHost The url for the cloud data server\n     * @param {VirtualMachine} vm The Scratch virtual machine to interface with\n     * @param {string} username The username to associate cloud data updates with\n     * @param {string} projectId The id associated with the project containing\n     * cloud data.\n     */\n    constructor (cloudHost, vm, username, projectId) {\n        this.vm = vm;\n        this.username = username;\n        this.projectId = projectId;\n        this.cloudHost = cloudHost;\n\n        this.connectionAttempts = 0;\n\n        // A queue of messages to send which were received before the\n        // connection was ready\n        this.queuedData = [];\n\n        this.openConnection();\n\n        // Send a message to the cloud server at a rate of no more\n        // than 10 messages/sec.\n        this.sendCloudData = throttle(this._sendCloudData, 100);\n    }\n\n    /**\n     * Open a new websocket connection to the clouddata server.\n     * @param {string} cloudHost The cloud data server to connect to.\n     */\n    openConnection () {\n        this.connectionAttempts += 1;\n\n        try {\n            this.connection = new WebSocket((location.protocol === 'http:' ? 'ws://' : 'wss://') + this.cloudHost);\n        } catch (e) {\n            log.warn('Websocket support is not available in this browser', e);\n            this.connection = null;\n            return;\n        }\n\n        this.connection.onerror = this.onError.bind(this);\n        this.connection.onmessage = this.onMessage.bind(this);\n        this.connection.onopen = this.onOpen.bind(this);\n        this.connection.onclose = this.onClose.bind(this);\n    }\n\n    onError (event) {\n        log.error(`Websocket connection error: ${JSON.stringify(event)}`);\n        // Error is always followed by close, which handles reconnect logic.\n    }\n\n    onMessage (event) {\n        const messageString = event.data;\n        // Multiple commands can be received, newline separated\n        messageString.split('\\n').forEach(message => {\n            if (message) { // .split can also contain '' in the array it returns\n                const parsedData = this.parseMessage(JSON.parse(message));\n                this.vm.postIOData('cloud', parsedData);\n            }\n        });\n    }\n\n    onOpen () {\n        // Reset connection attempts to 1 to make sure any subsequent reconnects\n        // use connectionAttempts=1 to calculate timeout\n        this.connectionAttempts = 1;\n        this.writeToServer('handshake');\n        log.info(`Successfully connected to clouddata server.`);\n\n        // Go through the queued data and send off messages that we weren't\n        // ready to send before\n        this.queuedData.forEach(data => {\n            this.sendCloudData(data);\n        });\n        // Reset the queue\n        this.queuedData = [];\n    }\n\n    onClose () {\n        log.info(`Closed connection to websocket`);\n        const randomizedTimeout = this.randomizeDuration(this.exponentialTimeout());\n        this.setTimeout(this.openConnection.bind(this), randomizedTimeout);\n    }\n\n    exponentialTimeout () {\n        return (Math.pow(2, Math.min(this.connectionAttempts, 5)) - 1) * 1000;\n    }\n\n    randomizeDuration (t) {\n        return Math.random() * t;\n    }\n\n    setTimeout (fn, time) {\n        log.info(`Reconnecting in ${(time / 1000).toFixed(1)}s, attempt ${this.connectionAttempts}`);\n        this._connectionTimeout = window.setTimeout(fn, time);\n    }\n\n    parseMessage (message) {\n        const varData = {};\n        switch (message.method) {\n        case 'set': {\n            varData.varUpdate = {\n                name: message.name,\n                value: message.value\n            };\n            break;\n        }\n        }\n        return varData;\n    }\n\n    /**\n     * Format and send a message to the cloud data server.\n     * @param {string} methodName The message method, indicating the action to perform.\n     * @param {string} dataName The name of the cloud variable this message pertains to\n     * @param {string | number} dataValue The value to set the cloud variable to\n     * @param {string} dataNewName The new name for the cloud variable (if renaming)\n     */\n    writeToServer (methodName, dataName, dataValue, dataNewName) {\n        const msg = {};\n        msg.method = methodName;\n        msg.user = this.username;\n        msg.project_id = this.projectId;\n\n        // Optional string params can use simple falsey undefined check\n        if (dataName) msg.name = dataName;\n        if (dataNewName) msg.new_name = dataNewName;\n\n        // Optional number params need different undefined check\n        if (typeof dataValue !== 'undefined' && dataValue !== null) msg.value = dataValue;\n\n        const dataToWrite = JSON.stringify(msg);\n        if (this.connection && this.connection.readyState === WebSocket.OPEN) {\n            this.sendCloudData(dataToWrite);\n        } else if (msg.method === 'create' || msg.method === 'delete' || msg.method === 'rename') {\n            // Save data for sending when connection is open, iff the data\n            // is a create, rename, or  delete\n            this.queuedData.push(dataToWrite);\n        }\n\n    }\n\n    /**\n     * Send a formatted message to the cloud data server.\n     * @param {string} data The formatted message to send.\n     */\n    _sendCloudData (data) {\n        this.connection.send(`${data}\\n`);\n    }\n\n    /**\n     * Provides an API for the VM's cloud IO device to create\n     * a new cloud variable on the server.\n     * @param {string} name The name of the variable to create\n     * @param {string | number} value The value of the new cloud variable.\n     */\n    createVariable (name, value) {\n        this.writeToServer('create', name, value);\n    }\n\n    /**\n     * Provides an API for the VM's cloud IO device to update\n     * a cloud variable on the server.\n     * @param {string} name The name of the variable to update\n     * @param {string | number} value The new value for the variable\n     */\n    updateVariable (name, value) {\n        this.writeToServer('set', name, value);\n    }\n\n    /**\n     * Provides an API for the VM's cloud IO device to rename\n     * a cloud variable on the server.\n     * @param {string} oldName The old name of the variable to rename\n     * @param {string} newName The new name for the cloud variable.\n     */\n    renameVariable (oldName, newName) {\n        this.writeToServer('rename', oldName, null, newName);\n    }\n\n    /**\n     * Provides an API for the VM's cloud IO device to delete\n     * a cloud variable on the server.\n     * @param {string} name The name of the variable to delete\n     */\n    deleteVariable (name) {\n        this.writeToServer('delete', name);\n    }\n\n    /**\n     * Closes the connection to the web socket and clears the cloud\n     * provider of references related to the cloud data project.\n     */\n    requestCloseConnection () {\n        if (this.connection &&\n            this.connection.readyState !== WebSocket.CLOSING &&\n            this.connection.readyState !== WebSocket.CLOSED) {\n            log.info('Request close cloud connection without reconnecting');\n            // Remove listeners, after this point we do not want to react to connection updates\n            this.connection.onclose = () => {};\n            this.connection.onerror = () => {};\n            this.connection.close();\n        }\n        this.clear();\n    }\n\n    /**\n     * Clear this provider of references related to the project\n     * and current state.\n     */\n    clear () {\n        this.connection = null;\n        this.vm = null;\n        this.username = null;\n        this.projectId = null;\n        if (this._connectionTimeout) {\n            clearTimeout(this._connectionTimeout);\n            this._connectionTimeout = null;\n        }\n        this.connectionAttempts = 0;\n    }\n\n}\n\nexport default CloudProvider;\n","/**\n * Report a telemetry event.\n * @param {string} event - one of `projectWasCreated`, `projectDidLoad`, `projectDidSave`, `projectWasUploaded`\n */\n// TODO make a telemetry HOC and move this stuff there\nconst collectMetadata = function (vm, projectName = '', locale = '') {\n    // TODO move most or all of this into a collectMetadata() method on the VM/Runtime\n    const metadata = {\n        projectName: projectName,\n        language: locale,\n        spriteCount: 0,\n        blocksCount: 0,\n        costumesCount: 0,\n        listsCount: 0,\n        scriptCount: 0,\n        soundsCount: 0,\n        variablesCount: 0\n    };\n\n    for (const target of vm.runtime.targets) {\n        ++metadata.spriteCount;\n        metadata.blocksCount += Object.keys(target.sprite.blocks._blocks).length;\n        metadata.costumesCount += target.sprite.costumes_.length;\n        metadata.scriptCount += target.sprite.blocks._scripts.length;\n        metadata.soundsCount += target.sprite.sounds.length;\n        for (const variableName in target.variables) {\n            const variable = target.variables[variableName];\n            if (variable.type === 'list') {\n                ++metadata.listsCount;\n            } else {\n                ++metadata.variablesCount;\n            }\n        }\n    }\n\n    return metadata;\n};\n\nexport default collectMetadata;\n","import {IntlProvider as ReactIntlProvider} from 'react-intl';\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = state => ({\n    key: state.locales.locale,\n    locale: state.locales.locale,\n    messages: state.locales.messages\n});\n\nexport default connect(mapStateToProps)(ReactIntlProvider);\n","/**\n * Utility to convert data URIs to blobs\n * Adapted from https://stackoverflow.com/questions/12168909/blob-from-dataurl\n * @param {string} dataURI the data uri to blobify\n * @return {Blob} a blob representing the data uri\n */\nexport default function dataURItoBlob (dataURI) {\n    const byteString = atob(dataURI.split(',')[1]);\n    const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n    const arrayBuffer = new ArrayBuffer(byteString.length);\n    const uintArray = new Uint8Array(arrayBuffer);\n    for (let i = 0; i < byteString.length; i++) {\n        uintArray[i] = byteString.charCodeAt(i);\n    }\n    const blob = new Blob([arrayBuffer], {type: mimeString});\n    return blob;\n}\n","import projectData from './project-data';\n\n/* eslint-disable import/no-unresolved */\nimport popWav from '!arraybuffer-loader!./83a9787d4cb6f3b7632b4ddfebf74367.wav?';\nimport meowWav from '!arraybuffer-loader!./83c36d806dc92327b9e7049a565c6bff.wav?';\nimport backdrop from '!raw-loader!./cd21514d0531fdffb22204e0ec5ed84a.svg?';\nimport costume1 from '!raw-loader!./bcf454acf82e4504149f7ffe07081dbc.svg?';\nimport costume2 from '!raw-loader!./0fb9be3e8397c983338cb71dc84d0b25.svg?';\n/* eslint-enable import/no-unresolved */\n\nconst defaultProject = translator => {\n    let _TextEncoder;\n    if (typeof TextEncoder === 'undefined') {\n        _TextEncoder = require('text-encoding').TextEncoder;\n    } else {\n        _TextEncoder = TextEncoder;\n    }\n    const encoder = new _TextEncoder();\n\n    const projectJson = projectData(translator);\n    return [{\n        id: 0,\n        assetType: 'Project',\n        dataFormat: 'JSON',\n        data: JSON.stringify(projectJson)\n    }, {\n        id: '83a9787d4cb6f3b7632b4ddfebf74367',\n        assetType: 'Sound',\n        dataFormat: 'WAV',\n        data: new Uint8Array(popWav)\n    }, {\n        id: '83c36d806dc92327b9e7049a565c6bff',\n        assetType: 'Sound',\n        dataFormat: 'WAV',\n        data: new Uint8Array(meowWav)\n    }, {\n        id: 'cd21514d0531fdffb22204e0ec5ed84a',\n        assetType: 'ImageVector',\n        dataFormat: 'SVG',\n        data: encoder.encode(backdrop)\n    }, {\n        id: 'bcf454acf82e4504149f7ffe07081dbc',\n        assetType: 'ImageVector',\n        dataFormat: 'SVG',\n        data: encoder.encode(costume1)\n    }, {\n        id: '0fb9be3e8397c983338cb71dc84d0b25',\n        assetType: 'ImageVector',\n        dataFormat: 'SVG',\n        data: encoder.encode(costume2)\n    }];\n};\n\nexport default defaultProject;\n","const projectData = () => window._projectData;\n\n\nexport default projectData;\n","/**\n * @fileoverview\n * Utility function to detect locale from the browser setting or paramenter on the URL.\n */\n\nimport queryString from 'query-string';\n\n/**\n * look for language setting in the browser. Check against supported locales.\n * If there's a parameter in the URL, override the browser setting\n * @param {Array.string} supportedLocales An array of supported locale codes.\n * @return {string} the preferred locale\n */\nconst detectLocale = supportedLocales => {\n    let locale = 'en'; // default\n    let browserLocale = window.navigator.userLanguage || window.navigator.language;\n    browserLocale = browserLocale.toLowerCase();\n    // try to set locale from browserLocale\n    if (supportedLocales.includes(browserLocale)) {\n        locale = browserLocale;\n    } else {\n        browserLocale = browserLocale.split('-')[0];\n        if (supportedLocales.includes(browserLocale)) {\n            locale = browserLocale;\n        }\n    }\n\n    const queryParams = queryString.parse(location.search);\n    // Flatten potential arrays and remove falsy values\n    const potentialLocales = [].concat(queryParams.locale, queryParams.lang).filter(l => l);\n    if (!potentialLocales.length) {\n        return locale;\n    }\n\n    const urlLocale = potentialLocales[0].toLowerCase();\n    if (supportedLocales.includes(urlLocale)) {\n        return urlLocale;\n    }\n\n    return locale;\n};\n\nexport {\n    detectLocale\n};\n","export default (filename, blob) => {\n    const downloadLink = document.createElement('a');\n    document.body.appendChild(downloadLink);\n\n    // Use special ms version if available to get it working on Edge.\n    if (navigator.msSaveOrOpenBlob) {\n        navigator.msSaveOrOpenBlob(blob, filename);\n        return;\n    }\n\n    if ('download' in HTMLAnchorElement.prototype) {\n        const url = window.URL.createObjectURL(blob);\n        downloadLink.href = url;\n        downloadLink.download = filename;\n        downloadLink.type = blob.type;\n        downloadLink.click();\n        // remove the link after a timeout to prevent a crash on iOS 13 Safari\n        window.setTimeout(() => {\n            document.body.removeChild(downloadLink);\n            window.URL.revokeObjectURL(url);\n        }, 1000);\n    } else {\n        // iOS 12 Safari, open a new page and set href to data-uri\n        let popup = window.open('', '_blank');\n        const reader = new FileReader();\n        reader.onloadend = function () {\n            popup.location.href = reader.result;\n            popup = null;\n        };\n        reader.readAsDataURL(blob);\n    }\n\n};\n","import React from 'react';\nimport ErrorBoundary from '../containers/error-boundary.jsx';\n\n/*\n * Higher Order Component to provide error boundary for wrapped component.\n * A curried function, call like errorHOC(<tracking label>)(<Component>).\n * @param {string} action - Label for GA tracking of errors.\n * @returns {function} a function that accepts a component to wrap.\n */\nconst ErrorBoundaryHOC = function (action){\n    /**\n     * The function to be called with a React component to wrap it.\n     * @param {React.ComponentType} WrappedComponent - Component to wrap with an error boundary.\n     * @returns {React.ComponentType} the component wrapped with an error boundary.\n     */\n    return function (WrappedComponent) {\n        const ErrorBoundaryWrapper = props => (\n            <ErrorBoundary action={action}>\n                <WrappedComponent {...props} />\n            </ErrorBoundary>\n        );\n        return ErrorBoundaryWrapper;\n    };\n};\n\nexport default ErrorBoundaryHOC;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport omit from 'lodash.omit';\nimport {connect} from 'react-redux';\nimport {setFontsLoaded} from '../reducers/fonts-loaded';\n\n// This list is from scratch-render-fonts:\n// https://github.com/LLK/scratch-render-fonts/blob/master/src/index.js#L4\nconst FONTS = [\n    'Sans Serif',\n    'Serif',\n    'Handwriting',\n    'Marker',\n    'Curly',\n    'Pixel',\n    'Scratch'\n];\n/* Higher Order Component to provide behavior for loading fonts.\n * @param {React.Component} WrappedComponent component to receive fontsLoaded prop\n * @returns {React.Component} component with font loading behavior\n */\nconst FontLoaderHOC = function (WrappedComponent) {\n    class FontLoaderComponent extends React.Component {\n        componentDidMount () {\n            if (this.props.fontsLoaded) return;\n\n            const getFontPromises = () => {\n                const fontPromises = [];\n                // Browsers that support the font loader interface have an iterable document.fonts.values()\n                // Firefox has a mocked out object that doesn't actually implement iterable, which is why\n                // the deep safety check is necessary.\n                if (document.fonts &&\n                    typeof document.fonts.values === 'function' &&\n                    typeof document.fonts.values()[Symbol.iterator] === 'function') {\n                    for (const fontFace of document.fonts.values()) {\n                        // Only load fonts from this list. If we load all fonts on the document, we may block on\n                        // loading fonts from things like chrome extensions.\n                        if (FONTS.indexOf(fontFace.family) !== -1) {\n                            fontPromises.push(fontFace.loaded);\n                            fontFace.load();\n                        }\n                    }\n                }\n                return fontPromises;\n            };\n            // Font promises must be gathered after the document is loaded, because on Mac Chrome, the promise\n            // objects get replaced and the old ones never resolve.\n            if (document.readyState === 'complete') {\n                Promise.all(getFontPromises()).then(() => {\n                    this.props.onSetFontsLoaded();\n                });\n            } else {\n                document.onreadystatechange = () => {\n                    if (document.readyState !== 'complete') return;\n                    document.onreadystatechange = null;\n                    Promise.all(getFontPromises()).then(() => {\n                        this.props.onSetFontsLoaded();\n                    });\n                };\n            }\n        }\n        render () {\n            const componentProps = omit(this.props, ['onSetFontsLoaded']);\n            return (\n                <WrappedComponent\n                    {...componentProps}\n                />\n            );\n        }\n    }\n\n\n    FontLoaderComponent.propTypes = {\n        fontsLoaded: PropTypes.bool.isRequired,\n        onSetFontsLoaded: PropTypes.func.isRequired\n    };\n    const mapStateToProps = state => ({\n        fontsLoaded: state.scratchGui.fontsLoaded\n    });\n    const mapDispatchToProps = dispatch => ({\n        onSetFontsLoaded: () => dispatch(setFontsLoaded())\n    });\n    return connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(FontLoaderComponent);\n};\n\nexport {\n    FontLoaderHOC as default\n};\n","import bindAll from 'lodash.bindall';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport {\n    defaultProjectId,\n    getIsFetchingWithoutId,\n    setProjectId\n} from '../reducers/project-state';\n\n/* Higher Order Component to get the project id from location.hash\n * @param {React.Component} WrappedComponent: component to render\n * @returns {React.Component} component with hash parsing behavior\n */\nconst HashParserHOC = function (WrappedComponent) {\n    class HashParserComponent extends React.Component {\n        constructor (props) {\n            super(props);\n            bindAll(this, [\n                'handleHashChange'\n            ]);\n        }\n        componentDidMount () {\n            window.addEventListener('hashchange', this.handleHashChange);\n            this.handleHashChange();\n        }\n        componentDidUpdate (prevProps) {\n            // if we are newly fetching a non-hash project...\n            if (this.props.isFetchingWithoutId && !prevProps.isFetchingWithoutId) {\n                // ...clear the hash from the url\n                history.pushState('new-project', 'new-project',\n                    window.location.pathname + window.location.search);\n            }\n        }\n        componentWillUnmount () {\n            window.removeEventListener('hashchange', this.handleHashChange);\n        }\n        handleHashChange () {\n            const hashMatch = window.location.hash.match(/#(\\d+)/);\n            const hashProjectId = hashMatch === null ? defaultProjectId : hashMatch[1];\n            this.props.setProjectId(hashProjectId.toString());\n        }\n        render () {\n            const {\n                /* eslint-disable no-unused-vars */\n                isFetchingWithoutId: isFetchingWithoutIdProp,\n                reduxProjectId,\n                setProjectId: setProjectIdProp,\n                /* eslint-enable no-unused-vars */\n                ...componentProps\n            } = this.props;\n            return (\n                <WrappedComponent\n                    {...componentProps}\n                />\n            );\n        }\n    }\n    HashParserComponent.propTypes = {\n        isFetchingWithoutId: PropTypes.bool,\n        reduxProjectId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        setProjectId: PropTypes.func\n    };\n    const mapStateToProps = state => {\n        const loadingState = state.scratchGui.projectState.loadingState;\n        return {\n            isFetchingWithoutId: getIsFetchingWithoutId(loadingState),\n            reduxProjectId: state.scratchGui.projectState.projectId\n        };\n    };\n    const mapDispatchToProps = dispatch => ({\n        setProjectId: projectId => {\n            dispatch(setProjectId(projectId));\n        }\n    });\n    // Allow incoming props to override redux-provided props. Used to mock in tests.\n    const mergeProps = (stateProps, dispatchProps, ownProps) => Object.assign(\n        {}, stateProps, dispatchProps, ownProps\n    );\n    return connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(HashParserComponent);\n};\n\nexport {\n    HashParserHOC as default\n};\n","import Papa from 'papaparse';\n\nexport default () => new Promise((resolve, reject) => {\n    const fileInput = document.createElement('input');\n    fileInput.setAttribute('type', 'file');\n    fileInput.setAttribute('accept', '.csv, .tsv, .txt'); // parser auto-detects delimiter\n    fileInput.onchange = e => {\n        const file = e.target.files[0];\n        Papa.parse(file, {\n            header: false,\n            complete: results => {\n                document.body.removeChild(fileInput);\n                resolve(results.data);\n            },\n            error: err => {\n                document.body.removeChild(fileInput);\n                reject(err);\n            }\n        });\n    };\n    document.body.appendChild(fileInput);\n    fileInput.click();\n});\n","/**\n * Internal stored state. Not valid until after at least one call to `setIsScratchDesktop()`.\n * @type {boolean}\n */\nlet _isScratchDesktop; // undefined = not ready yet\n\n/**\n * Tell the `isScratchDesktop()` whether or not the GUI is running under Scratch Desktop.\n * @param {boolean} value - the new value which `isScratchDesktop()` should return in the future.\n */\nconst setIsScratchDesktop = function (value) {\n    _isScratchDesktop = value;\n};\n\n/**\n * @returns {boolean} - true if it seems like the GUI is running under Scratch Desktop; false otherwise.\n * If `setIsScratchDesktop()` has not yet been called, this can return `undefined`.\n */\nconst isScratchDesktop = function () {\n    return _isScratchDesktop;\n};\n\n/**\n * @returns {boolean} - false if it seems like the GUI is running under Scratch Desktop; true otherwise.\n */\nconst notScratchDesktop = function () {\n    return !isScratchDesktop();\n};\n\nexport default isScratchDesktop;\nexport {\n    isScratchDesktop,\n    notScratchDesktop,\n    setIsScratchDesktop\n};\n","import keyMirror from 'keymirror';\n\n/**\n * Names for each state of the stage size toggle\n * @enum {string}\n */\nconst STAGE_SIZE_MODES = keyMirror({\n    /**\n     * The \"large stage\" button is pressed; the user would like a large stage.\n     */\n    large: null,\n\n    /**\n     * The \"small stage\" button is pressed; the user would like a small stage.\n     */\n    small: null\n});\n\n/**\n * Names for each stage render size\n * @enum {string}\n */\nconst STAGE_DISPLAY_SIZES = keyMirror({\n    /**\n     * Large stage with wide browser\n     */\n    large: null,\n\n    /**\n     * Large stage with narrow browser\n     */\n    largeConstrained: null,\n\n    /**\n     * Small stage (ignores browser width)\n     */\n    small: null\n});\n\n// zoom level to start with\nconst BLOCKS_DEFAULT_SCALE = 0.675;\n\nconst STAGE_DISPLAY_SCALES = {};\nSTAGE_DISPLAY_SCALES[STAGE_DISPLAY_SIZES.large] = 1; // large mode, wide browser (standard)\nSTAGE_DISPLAY_SCALES[STAGE_DISPLAY_SIZES.largeConstrained] = 0.85; // large mode but narrow browser\nSTAGE_DISPLAY_SCALES[STAGE_DISPLAY_SIZES.small] = 0.5; // small mode, regardless of browser size\n\nexport default {\n    standardStageWidth: 480,\n    standardStageHeight: 360,\n    fullSizeMinWidth: 1096,\n    fullSizePaintMinWidth: 1250\n};\n\nexport {\n    BLOCKS_DEFAULT_SCALE,\n    STAGE_DISPLAY_SCALES,\n    STAGE_DISPLAY_SIZES,\n    STAGE_SIZE_MODES\n};\n","import React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\n// Tutorial thumbnails: Avoid using any text that would need to be\n// translated in thumbnails.\n// Intro\nimport libraryIntro from './thumbnails/getting-started.jpg';\n\n// Getting Started ASL\nimport libraryGettingStartedASL from './thumbnails/getting-started-asl.png';\n\n// Text to Speech\nimport libraryTXTSpeech from './thumbnails/text-to-speech.jpg';\n\n// Cartoon Network\nimport libraryCartoonNetwork from './thumbnails/cartoon-network.jpg';\n\n// Add sprite\nimport libraryAddSprite from './thumbnails/add-sprite.jpg';\n\n// Animate a name\nimport libraryAnimate from './thumbnails/animate-a-name.jpg';\n\n// Make-Music\nimport libraryMakeMusic from './thumbnails/make-music.jpg';\n\n// Chase-Game\nimport libraryChaseGame from './thumbnails/chase-game.jpg';\n\n// Make-A-Game\nimport libraryMakeAGame from './thumbnails/pop-game.jpg';\n\n// Animate A Character\nimport libraryAnimateChar from './thumbnails/animate-a-character.jpg';\n\n// Tell A Story\nimport libraryStory from './thumbnails/tell-a-story.jpg';\n\n// Video Sensing\nimport libraryVideoSens from './thumbnails/video-sensing.jpg';\n\n// Make-it-Fly\nimport libraryMakeFly from './thumbnails/make-it-fly.jpg';\n\n// Pong\nimport libraryPong from './thumbnails/pong.jpg';\n\n// Imagine a World\nimport libraryImagine from './thumbnails/imagine.jpg';\n\n// Code a Cartoon\nimport libraryCodeCartoon from './thumbnails/code-a-cartoon.jpg';\n\n// Talking Tales\nimport libraryTalking from './thumbnails/talking.png';\n\n// Videos\nimport recordASound from './thumbnails/record-a-sound.jpg';\nimport glideAroundThumb from './thumbnails/glide-around.jpg';\nimport changeSizeThumb from './thumbnails/change-size.jpg';\nimport switchCostumeThumb from './thumbnails/animate-sprite.jpg';\nimport hideAndShowThumb from './thumbnails/hide-and-show.jpg';\nimport addBackdropThumb from './thumbnails/add-backdrop.jpg';\nimport addEffectsThumb from './thumbnails/add-effects.jpg';\nimport moveArrowKeysThumb from './thumbnails/move-arrow-keys.jpg';\nimport spinThumb from './thumbnails/spin.jpg';\n\nexport default {\n\n    'intro-move-sayhello': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Getting Started\"\n                description=\"Name for the 'Getting Started' how-to\"\n                id=\"gui.howtos.intro-move-sayhello-hat.name\"\n            />\n        ),\n        tags: ['help', 'stuck', 'how', 'can', 'say'],\n        img: libraryIntro,\n        steps: [{\n            video: 'intro-move-sayhello'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add a move block\"\n                    description=\"Step name for 'Add a move block' step\"\n                    id=\"gui.howtos.intro-move.step_stepMove\"\n                />\n            ),\n            image: 'introMove'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add a say block\"\n                    description=\"Step name for 'Add A Say Block' step\"\n                    id=\"gui.howtos.add-a-move-block.step_stepSay\"\n                />\n            ),\n            image: 'introSay'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Click the green flag to start\"\n                    description=\"Step name for 'Add A Green Flag' step\"\n                    id=\"gui.howtos.add-a-move-block.step_stepGreenFlag\"\n                />\n            ),\n            image: 'introGreenFlag'\n        }, {\n            deckIds: [\n                'add-a-backdrop',\n                'add-sprite'\n            ]\n        }\n        ],\n        urlId: 'getStarted'\n    },\n\n    'intro-getting-started-ASL': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Getting Started - ASL\"\n                description=\"Name for the 'Getting Started ASL (American Sign Language)' how-to\"\n                id=\"gui.howtos.intro-getting-started-ASL.name\"\n            />\n        ),\n        tags: ['help', 'stuck', 'how', 'can', 'say', 'asl', 'deaf', 'accessibile', 'hear'],\n        img: libraryGettingStartedASL,\n        steps: [{\n            video: 'intro-getting-started-ASL'\n        }, {\n            deckIds: [\n                'add-a-backdrop',\n                'add-sprite'\n            ]\n        }\n        ],\n        urlId: 'getting-started-ASL'\n    },\n\n    'animate-a-name': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Animate a Name\"\n                description=\"Name for the 'Animate a Name' how-to\"\n                id=\"gui.howtos.animate-a-name.name\"\n            />\n        ),\n        img: libraryAnimate,\n        tags: ['animation', 'art', 'spin', 'grow'],\n        steps: [{\n            video: 'animate-a-name'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Pick a Letter Sprite\"\n                    description=\"Step name for 'Pick a Letter Sprite' step\"\n                    id=\"gui.howtos.animate-a-name.step_AnimatePickLetter\"\n                />\n            ),\n            image: 'namePickLetter'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Play a Sound When Clicked\"\n                    description=\"Step name for 'Play a Sound When Clicked' step\"\n                    id=\"gui.howtos.animate-a-name.step_AnimatePlaySound\"\n                />\n            ),\n            image: 'namePlaySound'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Pick Another Letter Sprite\"\n                    description=\"Step name for 'Pick Another Letter Sprite\"\n                    id=\"gui.howtos.animate-a-name.step_AnimatePickLetter2\"\n                />\n            ),\n            image: 'namePickLetter2'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Change color\"\n                    description=\"Step name for 'Change color' step\"\n                    id=\"gui.howtos.animate-a-name.step_AnimateChangeColor\"\n                />\n            ),\n            image: 'nameChangeColor'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Pick Another Letter Sprite & Make It Spin\"\n                    description=\"Step name for 'Pick Another Letter Sprite & Make It Spin' step\"\n                    id=\"gui.howtos.animate-a-name.step_AnimateSpin\"\n                />\n            ),\n            image: 'nameSpin'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Pick Another Letter Sprite & Make It Grow\"\n                    description=\"Step name for 'Pick Another Letter Sprite & Make It Grow!' step\"\n                    id=\"gui.howtos.animate-a-name.step_AnimateGrow\"\n                />\n            ),\n            image: 'nameGrow'\n        }, {\n            deckIds: [\n                'add-a-backdrop',\n                'glide-around'\n            ]\n        }\n        ],\n        urlId: 'name'\n    },\n\n    'imagine': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Imagine a World\"\n                description=\"Name for the 'Imagine a World' how-to\"\n                id=\"gui.howtos.imagine\"\n            />\n        ),\n        tags: ['imagine'],\n        img: libraryImagine,\n        steps: [{\n            video: 'imagine'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Type What You Want to Say\"\n                    description=\"Step name for 'Type What You Want to Say' step\"\n                    id=\"gui.howtos.imagine.step_imagineTypeWhatYouWant\"\n                />\n            ),\n            image: 'imagineTypeWhatYouWant'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Click the Green Flag to Start\"\n                    description=\"Step name for 'Click the Green Flag to Start' step\"\n                    id=\"gui.howtos.imagine.step_imagineClickGreenFlag\"\n                />\n            ),\n            image: 'imagineClickGreenFlag'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose Any Backdrop\"\n                    description=\"Step name for 'Choose Any Backdrop' step\"\n                    id=\"gui.howtos.imagine.step_imagineChooseBackdrop\"\n                />\n            ),\n            image: 'imagineChooseBackdrop'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose Any Sprite\"\n                    description=\"Step name for 'Choose Any Sprite' step\"\n                    id=\"gui.howtos.imagine.step_imagineChooseSprite\"\n                />\n            ),\n            image: 'imagineChooseSprite'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Press the Space Key to Glide\"\n                    description=\"Step name for 'Press the Space Key to Glide' step\"\n                    id=\"gui.howtos.imagine.step_imagineFlyAround\"\n                />\n            ),\n            image: 'imagineFlyAround'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose Another Sprite\"\n                    description=\"Step name for 'Choose Another Sprite' step\"\n                    id=\"gui.howtos.imagine.step_imagineChooseAnotherSprite\"\n                />\n            ),\n            image: 'imagineChooseAnotherSprite'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Move Left-Right\"\n                    description=\"Step name for 'Move Left-Right' step\"\n                    id=\"gui.howtos.imagine.step_imagineLeftRight\"\n                />\n            ),\n            image: 'imagineLeftRight'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Move Up-Down\"\n                    description=\"Step name for 'Move Up-Down' step\"\n                    id=\"gui.howtos.imagine.step_imagineUpDown\"\n                />\n            ),\n            image: 'imagineUpDown'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Change Costumes\"\n                    description=\"Step name for 'Change Costumes' step\"\n                    id=\"gui.howtos.imagine.step_imagineChangeCostumes\"\n                />\n            ),\n            image: 'imagineChangeCostumes'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Glide to a Point\"\n                    description=\"Step name for 'Glide to a Point' step\"\n                    id=\"gui.howtos.imagine.step_imagineGlideToPoint\"\n                />\n            ),\n            image: 'imagineGlideToPoint'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Grow and Shrink\"\n                    description=\"Step name for 'Grow and Shrink' step\"\n                    id=\"gui.howtos.imagine.step_imagineGrowShrink\"\n                />\n            ),\n            image: 'imagineGrowShrink'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose Another Backdrop\"\n                    description=\"Step name for 'Choose Another Backdrop' step\"\n                    id=\"gui.howtos.imagine.step_imagineChooseAnotherBackdrop\"\n                />\n            ),\n            image: 'imagineChooseAnotherBackdrop'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Switch Backdrops\"\n                    description=\"Step name for 'Switch Backdrops' step\"\n                    id=\"gui.howtos.imagine.step_imagineSwitchBackdrops\"\n                />\n            ),\n            image: 'imagineSwitchBackdrops'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add a Sound\"\n                    description=\"Step name for 'Add a Sound' step\"\n                    id=\"gui.howtos.imagine.step_imagineRecordASound\"\n                />\n            ),\n            image: 'imagineRecordASound'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose Your Sound\"\n                    description=\"Step name for 'Choose Your Sound' step\"\n                    id=\"gui.howtos.imagine.step_imagineChooseSound\"\n                />\n            ),\n            image: 'imagineChooseSound'\n        }, {\n            deckIds: [\n                'hide-and-show',\n                'Chase-Game'\n            ]\n        }\n        ],\n        urlId: 'imagine'\n    },\n    \n    'Make-Music': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Make Music\"\n                description=\"Name for the 'Make Music' how-to\"\n                id=\"gui.howtos.make-music.name\"\n            />\n        ),\n        img: libraryMakeMusic,\n        tags: ['music', 'sound', 'instrument', 'play', 'song', 'band'],\n        steps: [{\n            video: 'Make-Music'\n        },\n        {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Pick an Instrument Sprite \"\n                    description=\"Step name for 'Pick an Instrument Sprite' step\"\n                    id=\"gui.howtos.Make-Music.step_PickInstrument\"\n                />\n            ),\n            image: 'musicPickInstrument'\n        },\n        {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Play Sound When Clicked\"\n                    description=\"Step name for 'Play Sound When Clicked' step\"\n                    id=\"gui.howtos.Make-Music.step_PlaySoundClick\"\n                />\n            ),\n            image: 'musicPlaySound'\n        },\n        {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Create a Song\"\n                    description=\"Step name for 'Create a Song' step\"\n                    id=\"gui.howtos.Make-Music.step_MakeSong\"\n                />\n            ),\n            image: 'musicMakeSong'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose a Drum & Make a Beat\"\n                    description=\"Step name for 'Choose a Drum & Make a Beat' step\"\n                    id=\"gui.howtos.make-music.step_MakeBeat\"\n                />\n            ),\n            image: 'musicMakeBeat'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose the Microphone Sprite & Surprise Beatbox\"\n                    description=\"Step name for 'Choose the Microphone Sprite & Surprise Beatbox' step\"\n                    id=\"gui.howtos.make-music.step_MakeBeatBox\"\n                />\n            ),\n            image: 'musicMakeBeatbox'\n        }, {\n            deckIds: [\n                'add-a-backdrop',\n                'add-sprite'\n            ]\n        }\n        ],\n        urlId: 'music'\n    },\n\n    'Tell-A-Story': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Create A Story\"\n                description=\"Name for the 'Create A Story' how-to\"\n                id=\"gui.howtos.story.name\"\n            />\n        ),\n        img: libraryStory,\n        steps: [{\n            video: 'stah7jjorp'\n        },\n        {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add a Backdrop\"\n                    description=\"Step name for 'Add a Backdrop' step\"\n                    id=\"gui.howtos.story.step_addbg\"\n                />\n            ),\n            image: 'storyPickBackdrop'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add a Character\"\n                    description=\"Step name for 'Add a Character' step\"\n                    id=\"gui.howtos.story.step_addsprite\"\n                />\n            ),\n            image: 'storyPickSprite'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Say Something\"\n                    description=\"Step name for 'Say Something' step\"\n                    id=\"gui.howtos.story.step_saysomething\"\n                />\n            ),\n            image: 'storySaySomething'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add Another Character\"\n                    description=\"Step name for 'Add Another Character' step\"\n                    id=\"gui.howtos.story.step_addanothersprite\"\n                />\n            ),\n            image: 'storyPickSprite2'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Flip Direction\"\n                    description=\"Flip Direction' step\"\n                    id=\"gui.howtos.story.step_flip\"\n                />\n            ),\n            image: 'storyFlip'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Have A Conversation\"\n                    description=\"Step name for 'Have A Conversation' step\"\n                    id=\"gui.howtos.story.step_conversation\"\n                />\n            ),\n            image: 'storyConversation'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add Another Backdrop\"\n                    description=\"Step name for 'Add Another Backdrop' step\"\n                    id=\"gui.howtos.story.addanotherbg\"\n                />\n            ),\n            image: 'storyPickBackdrop2'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Switch Backdrops\"\n                    description=\"Step name for 'Switch Backdrops' step\"\n                    id=\"gui.howtos.story.step_swithbg\"\n                />\n            ),\n            image: 'storySwitchBackdrop'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Hide a Character\"\n                    description=\"Step name for 'Hide the Wizard' step\"\n                    id=\"gui.howtos.story.step_hidewizard\"\n                />\n            ),\n            image: 'storyHideCharacter'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Show a Character\"\n                    description=\"Step name for 'Show the Wizard' step\"\n                    id=\"gui.howtos.story.step_showwizard\"\n                />\n            ),\n            image: 'storyShowCharacter'\n        },\n        {\n            deckIds: [\n                'say-it-out-loud',\n                'record-a-sound'\n            ]\n        }\n        ],\n        urlId: 'tell-a-story'\n    },\n\n    'Chase-Game': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Make a Chase Game\"\n                description=\"Name for the 'Make a Chase Game' how-to\"\n                id=\"gui.howtos.make-a-chase-game.name\"\n            />\n        ),\n        img: libraryChaseGame,\n        tags: ['games', 'arrow', 'keyboard', 'score'],\n        steps: [{\n            video: 'Chase-Game'\n        },\n        {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add a Backdrop\"\n                    description=\"Step name for 'Add a Backdrop' step\"\n                    id=\"gui.howtos.Chase-Game.step_BG\"\n                />\n            ),\n            image: 'chaseGameAddBackdrop'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add a Sprite\"\n                    description=\"Step name for 'Add a Sprite' step\"\n                    id=\"gui.howtos.chase-game.step_AddOcto\"\n                />\n            ),\n            image: 'chaseGameAddSprite1'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Move Right & Left With Arrow Keys\"\n                    description=\"Step name for 'Move Right & Left With Arrow Keys' step\"\n                    id=\"gui.howtos.make-music.step_LeftRight\"\n                />\n            ),\n            image: 'chaseGameRightLeft'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Move Up & Down With Arrow Keys\"\n                    description=\"Step name for 'Move Up & Down With Arrow Keys' step\"\n                    id=\"gui.howtos.Chase-Game.step_UpDown\"\n                />\n            ),\n            image: 'chaseGameUpDown'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add Another Sprite\"\n                    description=\"Step name for 'Add Another Sprite' step\"\n                    id=\"gui.howtos.Chase-Game.step_AddStar\"\n                />\n            ),\n            image: 'chaseGameAddSprite2'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Move Randomly\"\n                    description=\"Step name for 'Move Randomly' step\"\n                    id=\"gui.howtos.Chase-Game.step_MoveRandom\"\n                />\n            ),\n            image: 'chaseGameMoveRandomly'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"In Octopus Sprite, When Touching Play Sound\"\n                    description=\"Step name for 'In Octopus Sprite, When Touching Play Sound' step\"\n                    id=\"gui.howtos.Chase-Game.step_WhenTouch\"\n                />\n            ),\n            image: 'chaseGamePlaySound'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Create Score Variable\"\n                    description=\"Step name for 'Create Score Variable\"\n                    id=\"gui.howtos.Chase-Game.step_ScoreVariable\"\n                />\n            ),\n            image: 'chaseGameAddVariable'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"In Octopus Sprite, When Touching Add Score\"\n                    description=\"Step name for 'In Octopus Sprite, When Touching Add Score step\"\n                    id=\"gui.howtos.Chase-Game.ScoreWhenTouch\"\n                />\n            ),\n            image: 'chaseGameChangeScore'\n        }, {\n            deckIds: [\n                'add-effects',\n                'move-around-with-arrow-keys'\n            ]\n        }\n        ],\n        urlId: 'chase-game'\n    },\n\n    'Animate-A-Character': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Animate A Character\"\n                description=\"Name for the 'Animate A Character' how-to\"\n                id=\"gui.howtos.animate-char.name\"\n            />\n        ),\n        img: libraryAnimateChar,\n        steps: [{\n            video: 's228u3g5u9'\n        },\n        {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add a Backdrop\"\n                    description=\"Step name for 'Add a Backdrop' step\"\n                    id=\"gui.howtos.animate-char.step_addbg\"\n                />\n            ),\n            image: 'animateCharPickBackdrop'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add a Sprite\"\n                    description=\"Step name for 'Add a Sprite' step\"\n                    id=\"gui.howtos.animate-char.step_addsprite\"\n                />\n            ),\n            image: 'animateCharPickSprite'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Say Something\"\n                    description=\"Step name for 'Say Something' step\"\n                    id=\"gui.howtos.animate-char.step_saysomething\"\n                />\n            ),\n            image: 'animateCharSaySomething'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add Sound\"\n                    description=\"Step name for 'Add Sound' step\"\n                    id=\"gui.howtos.animate-char.step_addsound\"\n                />\n            ),\n            image: 'animateCharAddSound'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Animate Talking\"\n                    description=\"Step name for 'Animate Talking' step\"\n                    id=\"gui.howtos.animate-char.step_animatetalking\"\n                />\n            ),\n            image: 'animateCharTalk'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Move Using Arrow Keys\"\n                    description=\"Step name for 'Move Using Arrow Keys' step\"\n                    id=\"gui.howtos.animate-char.step_arrowkeys\"\n                />\n            ),\n            image: 'animateCharMove'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Jump\"\n                    description=\"Step name for 'Jump' step\"\n                    id=\"gui.howtos.animate-char.step_jump\"\n                />\n            ),\n            image: 'animateCharJump'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Change Color\"\n                    description=\"Step name for 'Change Color' step\"\n                    id=\"gui.howtos.animate-char.step_changecolor\"\n                />\n            ),\n            image: 'animateCharChangeColor'\n        }, {\n            deckIds: [\n                'code-cartoon',\n                'Tell-A-Story'\n            ]\n        }\n        ],\n        urlId: 'animate-a-character'\n    },\n\n    'Make-A-Game': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Make a Clicker Game\"\n                description=\"Name for the 'Make a Clicker Game' how-to\"\n                id=\"gui.howtos.make-a-game.name\"\n            />\n        ),\n        img: libraryMakeAGame,\n        tags: ['games', 'click', 'clicked', 'score'],\n        steps: [{\n            video: 'Make-A-Game'\n        },\n        {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Pick A Sprite\"\n                    description=\"Step name for 'Pick A Sprite' step\"\n                    id=\"gui.howtos.Make-A-Game.step_GamePickSprite\"\n                />\n            ),\n            image: 'popGamePickSprite'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Play Sound When Clicked\"\n                    description=\"Play Sound When Clicked' step\"\n                    id=\"gui.howtos.make-a-game.step_GamePlaySound\"\n                />\n            ),\n            image: 'popGamePlaySound'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Create Score Variable\"\n                    description=\"Step name for 'Create Score Variable' step\"\n                    id=\"gui.howtos.make-a-game.step_GameAddScore\"\n                />\n            ),\n            image: 'popGameAddScore'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"When Clicked Increase Score\"\n                    description=\"Step name for 'When Clicked Increase Score' step\"\n                    id=\"gui.howtos.make-a-game.step_GameChangeScore\"\n                />\n            ),\n\n            image: 'popGameChangeScore'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Go to a random position\"\n                    description=\"Step name for 'Go to a random position' step\"\n                    id=\"gui.howtos.make-a-game.step_Random\"\n                />\n            ),\n            image: 'popGameRandomPosition'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Change Color\"\n                    description=\"Step name for 'Change Color' step\"\n                    id=\"gui.howtos.make-music.step_GameChangeColor\"\n                />\n            ),\n            image: 'popGameChangeColor'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Reset Score\"\n                    description=\"Step name for 'Reset Score' step\"\n                    id=\"gui.howtos.make-music.step_ResetScore\"\n                />\n            ),\n            image: 'popGameResetScore'\n        }, {\n            deckIds: [\n                'add-a-backdrop',\n                'move-around-with-arrow-keys'\n            ]\n        }\n        ],\n        urlId: 'clicker-game'\n    },\n\n    'make-it-fly': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Make it Fly\"\n                description=\"Name for the 'Make it Fly' Make it Fly\"\n                id=\"gui.howtos.make-it-fly.name\"\n            />\n        ),\n        tags: ['game', 'fly', 'how', 'can', 'animation'],\n        img: libraryMakeFly,\n        steps: [{\n            video: 'zbtdx2dem9'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose a Sky Background\"\n                    description=\"Step name for 'Choose a Sky Background' step\"\n                    id=\"gui.howtos.fly.step_stepflyChooseBackdrop\"\n                />\n            ),\n            image: 'flyChooseBackdrop'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose a Character\"\n                    description=\"Step name for 'Choose a Character' step\"\n                    id=\"gui.howtos.add-a-move-block.step_stepflyChooseCharacter\"\n                />\n            ),\n            image: 'flyChooseCharacter'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Say Something\"\n                    description=\"Step name for 'Say Something' step\"\n                    id=\"gui.howtos.fly.step_stepflySaySomething\"\n                />\n            ),\n            image: 'flySaySomething'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Move With Arrow Keys\"\n                    description=\"Step name for 'Move With Arrow Keys' step\"\n                    id=\"gui.howtos.add-a-move-block.step_stepflyMoveArrows\"\n                />\n            ),\n            image: 'flyMoveArrows'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose an Object to Collect\"\n                    description=\"Step name for 'Choose an Object to Collect' step\"\n                    id=\"gui.howtos.fly.step_stepflyChooseObject\"\n                />\n            ),\n            image: 'flyChooseObject'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Make the Object Move\"\n                    description=\"Step name for 'Make the Object Move' step\"\n                    id=\"gui.howtos.add-a-move-block.step_stepflyFlyingObject\"\n                />\n            ),\n            image: 'flyFlyingObject'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Select Your Character\"\n                    description=\"Step name for 'Select Your Character' step\"\n                    id=\"gui.howtos.add-a-move-block.step_stepflySelectFlyingSprite\"\n                />\n            ),\n            image: 'flySelectFlyingSprite'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add a Score\"\n                    description=\"Step name for 'Add a Score' step\"\n                    id=\"gui.howtos.add-a-move-block.step_stepflyAddScore\"\n                />\n            ),\n            image: 'flyAddScore'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Keep Score\"\n                    description=\"Step name for 'Keep Score' step\"\n                    id=\"gui.howtos.add-a-move-block.step_stepflyKeepScore\"\n                />\n            ),\n            image: 'flyKeepScore'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add Scenery\"\n                    description=\"Step name for 'Add Scenery' step\"\n                    id=\"gui.howtos.add-a-move-block.step_stepflyAddScenery\"\n                />\n            ),\n            image: 'flyAddScenery'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Move the Scenery\"\n                    description=\"Step name for 'Move the Scenery' step\"\n                    id=\"gui.howtos.add-a-move-block.step_stepflyMoveScenery\"\n                />\n            ),\n            image: 'flyMoveScenery'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Next Costume\"\n                    description=\"Step name for 'Change the Scenery' step\"\n                    id=\"gui.howtos.add-a-move-block.step_stepflySwitchLooks\"\n                />\n            ),\n            image: 'flySwitchLooks'\n        }, {\n            deckIds: [\n                'change-size',\n                'spin-video'\n            ]\n        }\n        ],\n        urlId: 'make-it-fly'\n    },\n\n    'pong': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Pong Game\"\n                description=\"Name for the 'Pong Game' how-to\"\n                id=\"gui.howtos.pong\"\n            />\n        ),\n        tags: ['pong', 'game'],\n        img: libraryPong,\n        steps: [{\n            video: 'pong-game'\n        },\n        {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add a Backdrop\"\n                    description=\"Step name for 'Add a Backdrop' step\"\n                    id=\"gui.howtos.pong.step_pongAddBackdrop\"\n                />\n            ),\n            image: 'pongAddBackdrop'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add a Ball Sprite\"\n                    description=\"Step name for 'Add a Ball Sprite' step\"\n                    id=\"gui.howtos.pong.step_pongAddBallSprite\"\n                />\n            ),\n            image: 'pongAddBallSprite'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Bounce Around\"\n                    description=\"Step name for 'Bounce Around' step\"\n                    id=\"gui.howtos.pong.step_pongBounceAround\"\n                />\n            ),\n            image: 'pongBounceAround'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add a Paddle\"\n                    description=\"Step name for 'Add a Paddle' step\"\n                    id=\"gui.howtos.pong.step_pongAddPaddle\"\n                />\n            ),\n            image: 'pongAddPaddle'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Move the Paddle\"\n                    description=\"Step name for 'Move the Paddle' step\"\n                    id=\"gui.howtos.pong.step_pongMoveThePaddle\"\n                />\n            ),\n            image: 'pongMoveThePaddle'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Select the Ball Sprite\"\n                    description=\"Step name for 'Select the Ball Sprite' step\"\n                    id=\"gui.howtos.pong.step_pongSelectBallSprite\"\n                />\n            ),\n            image: 'pongSelectBallSprite'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add Code to Bounce the Ball Off the Paddle\"\n                    description=\"Step name for 'Add Code to Bounce the Ball Off the Paddle' step\"\n                    id=\"gui.howtos.pong.step_pongAddMoreCodeToBall\"\n                />\n            ),\n            image: 'pongAddMoreCodeToBall'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add a Score\"\n                    description=\"Step name for 'Add a Score' step\"\n                    id=\"gui.howtos.pong.step_pongAddAScore\"\n                />\n            ),\n            image: 'pongAddAScore'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose 'Score' from the Menu\"\n                    description=\"Step name for 'Choose 'Score' from the Menu' step\"\n                    id=\"gui.howtos.pong.step_pongChooseScoreFromMenu\"\n                />\n            ),\n            image: 'pongChooseScoreFromMenu'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Insert the 'Change Score' Block\"\n                    description=\"Step name for 'Insert the 'Change Score' Block' step\"\n                    id=\"gui.howtos.pong.step_pongInsertChangeScoreBlock\"\n                />\n            ),\n            image: 'pongInsertChangeScoreBlock'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Reset Score\"\n                    description=\"Step name for 'Reset Score' step\"\n                    id=\"gui.howtos.pong.step_pongResetScore\"\n                />\n            ),\n            image: 'pongResetScore'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add the Line Sprite\"\n                    description=\"Step name for 'Add the Line Sprite' step\"\n                    id=\"gui.howtos.pong.step_pongAddLineSprite\"\n                />\n            ),\n            image: 'pongAddLineSprite'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Game Over\"\n                    description=\"Step name for 'Game Over' step\"\n                    id=\"gui.howtos.pong.step_pongGameOver\"\n                />\n            ),\n            image: 'pongGameOver'\n        }, {\n            deckIds: [\n                'add-effects',\n                'Video-Sensing'\n            ]\n        }\n        ],\n        urlId: 'pong'\n    },\n\n    'code-cartoon': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Code a Cartoon\"\n                description=\"Name for the 'Code a Cartoon' how-to\"\n                id=\"gui.howtos.code-cartoon\"\n            />\n        ),\n        tags: ['code-cartoon'],\n        requiredProjectId: '331474033',\n        img: libraryCodeCartoon,\n        steps: [{\n            video: 'code-cartoon'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Say Something When You Click the Green Flag\"\n                    description=\"Step name for 'Say Something When You Click the Green Flag' step\"\n                    id=\"gui.howtos.code-cartoon.step_codeCartoonSaySomething\"\n                />\n            ),\n            image: 'codeCartoonSaySomething'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Animate a Character When You Click It\"\n                    description=\"Step name for 'Animate a Character When You Click It' step\"\n                    id=\"gui.howtos.code-cartoon.step_codeCartoonAnimate\"\n                />\n            ),\n            image: 'codeCartoonAnimate'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Select a Different Character\"\n                    description=\"Step name for 'Select a Different Character' step\"\n                    id=\"gui.howtos.code-cartoon.step_codeCartoonSelectDifferentCharacter\"\n                />\n            ),\n            image: 'codeCartoonSelectDifferentCharacter'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Use a Minus Sign to Get Smaller\"\n                    description=\"Step name for 'Use a Minus Sign to Get Smaller' step\"\n                    id=\"gui.howtos.code-cartoon.step_codeCartoonUseMinusSign\"\n                />\n            ),\n            image: 'codeCartoonUseMinusSign'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Make a Character Grow and Shrink\"\n                    description=\"Step name for 'Make a Character Grow and Shrink' step\"\n                    id=\"gui.howtos.code-cartoon.step_codeCartoonGrowShrink\"\n                />\n            ),\n            image: 'codeCartoonGrowShrink'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Select a Different Character\"\n                    description=\"Step name for 'Select a Different Character' step\"\n                    id=\"gui.howtos.code-cartoon.step_codeCartoonSelectDifferentCharacter2\"\n                />\n            ),\n            image: 'codeCartoonSelectDifferentCharacter2'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Jump Up and Down\"\n                    description=\"Step name for 'Jump Up and Down' step\"\n                    id=\"gui.howtos.code-cartoon.step_codeCartoonJump\"\n                />\n            ),\n            image: 'codeCartoonJump'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Click a Character to Change Scenes\"\n                    description=\"Step name for 'Click a Character to Change Scenes' step\"\n                    id=\"gui.howtos.code-cartoon.step_codeCartoonChangeScenes\"\n                />\n            ),\n            image: 'codeCartoonChangeScenes'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Glide Around\"\n                    description=\"Step name for 'Glide Around' step\"\n                    id=\"gui.howtos.code-cartoon.step_codeCartoonGlideAround\"\n                />\n            ),\n            image: 'codeCartoonGlideAround'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Change Costumes\"\n                    description=\"Step name for 'Change Costumes' step\"\n                    id=\"gui.howtos.code-cartoon.step_codeCartoonChangeCostumes\"\n                />\n            ),\n            image: 'codeCartoonChangeCostumes'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose More Characters to Add to Your Cartoon\"\n                    description=\"Step name for 'Choose More Characters to Add to Your Cartoon' step\"\n                    id=\"gui.howtos.code-cartoon.step_codeCartoonChooseMoreCharacters\"\n                />\n            ),\n            image: 'codeCartoonChooseMoreCharacters'\n        }, {\n            deckIds: [\n                'Chase-Game',\n                'Tell-A-Story'\n            ]\n        }\n        ],\n        urlId: 'code-cartoon'\n    },\n    \n    'cartoon-network': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Animate an Adventure Game\"\n                description=\"Animate an Adventure Game' how-to\"\n                id=\"gui.howtos.cartoon-network\"\n            />\n        ),\n        requiredProjectId: '249143200',\n        img: libraryCartoonNetwork,\n        steps: [{\n            video: 'uz5oz5h9yg',\n            trackingPixel: (\n                <img src=\"https://code.org/api/hour/begin_scratch_adventure.png\" />\n            )\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose a Character to Show\"\n                    description=\"Step name for 'Choose a Character to Show' step\"\n                    id=\"gui.howtos.cartoon-network.step_CNcharacter\"\n                />\n            ),\n            image: 'cnShowCharacter'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Say Something\"\n                    description=\"Step name for 'Say Something' step\"\n                    id=\"gui.howtos.cartoon-network.step_CNsay\"\n                />\n            ),\n            image: 'cnSay'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Glide Around\"\n                    description=\"Step name for 'Glide Around' step\"\n                    id=\"gui.howtos.cartoon-network.step_CNglide\"\n                />\n            ),\n            image: 'cnGlide'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\" Choose an Object to Chase \"\n                    description=\"Step name for 'Choose an Object to Chase' step\"\n                    id=\"gui.howtos.cartoon-network.step_CNpicksprite\"\n                />\n            ),\n            image: 'cnPickSprite'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Collect Objects\"\n                    description=\"Step name for 'Collect Objects' step\"\n                    id=\"gui.howtos.cartoon-network.step_CNcollect\"\n                />\n            ),\n            image: 'cnCollect'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Make a Score Variable\"\n                    description=\"Step name for 'Make a Score Variable' step\"\n                    id=\"gui.howtos.cartoon-network.step_CNvariable\"\n                />\n            ),\n            image: 'cnVariable'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Keep Score\"\n                    description=\"Step name for 'Keep Score' step\"\n                    id=\"gui.howtos.cartoon-network.step_CNscore\"\n                />\n            ),\n            image: 'cnScore'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Level Up: Change Backdrop\"\n                    description=\"Step name for 'Level Up: Change Backdrop' step\"\n                    id=\"gui.howtos.cartoon-network.step_CNbackdrop\"\n                />\n            ),\n            image: 'cnBackdrop'\n        },\n        {\n            video: '6o76f5ivo1'\n        },\n        {\n            deckIds: [\n                'switch-costume',\n                'add-effects'\n            ]\n        }\n        ],\n        urlId: 'animate-an-adventure-game'\n    },\n\n    'Video-Sensing': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Video Sensing\"\n                description=\"Name for the 'Video Sensing' how-to\"\n                id=\"gui.howtos.videosens.name\"\n            />\n        ),\n        img: libraryVideoSens,\n        steps: [{\n            video: '3pd1z110d6'\n        },\n        {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add Extension\"\n                    description=\"Step name for 'Add Extension' step\"\n                    id=\"gui.howtos.videosens.step_addextension\"\n                />\n            ),\n            image: 'videoAddExtension'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Pet the Cat\"\n                    description=\"Step name for 'Pet the Cat' step\"\n                    id=\"gui.howtos.videosens.step_pet\"\n                />\n            ),\n            image: 'videoPet'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Animate\"\n                    description=\"Step name for 'Animate' step\"\n                    id=\"gui.howtos.videosens.step_animate\"\n                />\n            ),\n            image: 'videoAnimate'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Pop a Balloon\"\n                    description=\"Step name for 'Pop a Balloon' step\"\n                    id=\"gui.howtos.videosens.step_pop\"\n                />\n            ),\n            image: 'videoPop'\n        }, {\n            deckIds: [\n                'Make-Music',\n                'add-effects'\n            ]\n        }\n        ],\n        urlId: 'video-sensing'\n    },\n\n    'say-it-out-loud': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Create Animations That Talk\"\n                description=\"Name for the 'Create Animations That Talk' how-to\"\n                id=\"gui.howtos.say-it-out-loud\"\n            />\n        ),\n        img: libraryTXTSpeech,\n        steps: [{\n            video: 'k54n8uwcty',\n            trackingPixel: (\n                <img src=\"https://code.org/api/hour/begin_scratch_talk.png\" />\n            )\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add the Text to Speech blocks\"\n                    description=\"Step name for 'Add the Text to Speech blocks' step\"\n                    id=\"gui.howtos.say-it-out-loud.step_AddTXTextension\"\n                />\n            ),\n            image: 'speechAddExtension'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Say Something\"\n                    description=\"Step name for 'Say Something' step\"\n                    id=\"gui.howtos.say-it-out-loud.step_TXTSpeech\"\n                />\n            ),\n            image: 'speechSaySomething'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Set a Voice\"\n                    description=\"Step name for 'Set a Voice\"\n                    id=\"gui.howtos.say-it-out-loud_TXTSetVoice\"\n                />\n            ),\n            image: 'speechSetVoice'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Move Around\"\n                    description=\"Step name for 'Move Around' step\"\n                    id=\"gui.howtos.say-it-out-loud.step_TXTMove\"\n                />\n            ),\n            image: 'speechMoveAround'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add a Backdrop\"\n                    description=\"Step name for 'Add a Backdrop' step\"\n                    id=\"gui.howtos.say-it-out-loud.step_TXTBackdrop\"\n                />\n            ),\n            image: 'speechAddBackdrop'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add Another Character\"\n                    description=\"Step name for 'Add Another Character' step\"\n                    id=\"gui.howtos.say-it-out-loud.step_TXTAddSprite\"\n                />\n            ),\n            image: 'speechAddSprite'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Perform a Song\"\n                    description=\"Step name for 'Perform a Song' step\"\n                    id=\"gui.howtos.say-it-out-loud.step_TXTSong\"\n                />\n            ),\n            image: 'speechSong'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Change Color\"\n                    description=\"Step name for 'Change Color' step\"\n                    id=\"gui.howtos.say-it-out-loud.step_TXTColor\"\n                />\n            ),\n            image: 'speechChangeColor'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Spin Around\"\n                    description=\"Step name for 'Spin Around\"\n                    id=\"gui.howtos.say-it-out-loud.step_TXTSpin\"\n                />\n            ),\n            image: 'speechSpin'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Grow and Shrink\"\n                    description=\"Step name for 'Grow and Shrink' step\"\n                    id=\"gui.howtos.say-it-out-loud.step_TXTGrow\"\n                />\n            ),\n            image: 'speechGrowShrink'\n        }, {\n            deckIds: [\n                'animate-a-name',\n                'talking'\n            ]\n        }\n        ],\n        urlId: 'animations-that-talk'\n    },\n\n    'talking': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Talking Tales\"\n                description=\"Name for the 'Talking Tales' how-to\"\n                id=\"gui.howtos.talking\"\n            />\n        ),\n        tags: ['talking'],\n        img: libraryTalking,\n        steps: [{\n            video: 'talking'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Click to Add the Text-to-Speech Blocks\"\n                    description=\"Step name for 'Click to Add the Text-to-Speech Blocks' step\"\n                    id=\"gui.howtos.talking.step_talesAddExtension\"\n                />\n            ),\n            image: 'talesAddExtension'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose a Sprite\"\n                    description=\"Step name for 'Choose a Sprite' step\"\n                    id=\"gui.howtos.talking.step_talesChooseSprite\"\n                />\n            ),\n            image: 'talesChooseSprite'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Make a Character Speak\"\n                    description=\"Step name for 'Make a Character Speak' step\"\n                    id=\"gui.howtos.talking.step_talesSaySomething\"\n                />\n            ),\n            image: 'talesSaySomething'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose a Backdrop\"\n                    description=\"Step name for 'Choose a Backdrop' step\"\n                    id=\"gui.howtos.talking.step_talesChooseBackdrop\"\n                />\n            ),\n            image: 'talesChooseBackdrop'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Click a Character to Go to the Next Backdrop\"\n                    description=\"Step name for 'Click a Character to Go to the Next Backdrop' step\"\n                    id=\"gui.howtos.talking.step_talesSwitchBackdrop\"\n                />\n            ),\n            image: 'talesSwitchBackdrop'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose Another Sprite\"\n                    description=\"Step name for 'Choose Another Sprite' step\"\n                    id=\"gui.howtos.talking.step_talesChooseAnotherSprite\"\n                />\n            ),\n            image: 'talesChooseAnotherSprite'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Move Around\"\n                    description=\"Step name for 'Move Around' step\"\n                    id=\"gui.howtos.talking.step_talesMoveAround\"\n                />\n            ),\n            image: 'talesMoveAround'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose Another Backdrop\"\n                    description=\"Step name for 'Choose Another Backdrop' step\"\n                    id=\"gui.howtos.talking.step_talesChooseAnotherBackdrop\"\n                />\n            ),\n            image: 'talesChooseAnotherBackdrop'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Animate Talking\"\n                    description=\"Step name for 'Animate Talking' step\"\n                    id=\"gui.howtos.talking.step_talesAnimateTalking\"\n                />\n            ),\n            image: 'talesAnimateTalking'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose Another Backdrop\"\n                    description=\"Step name for 'Choose Another Backdrop' step\"\n                    id=\"gui.howtos.talking.step_talesChooseThirdBackdrop\"\n                />\n            ),\n            image: 'talesChooseThirdBackdrop'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose a Song to Dance To\"\n                    description=\"Step name for 'Choose a Song to Dance To' step\"\n                    id=\"gui.howtos.talking.step_talesChooseSound\"\n                />\n            ),\n            image: 'talesChooseSound'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Dance Moves\"\n                    description=\"Step name for 'Dance Moves' step\"\n                    id=\"gui.howtos.talking.step_talesDanceMoves\"\n                />\n            ),\n            image: 'talesDanceMoves'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Get the Ask and Answer Blocks from the Sensing Category\"\n                    description=\"Step name for 'Get the Ask and Answer Blocks from the Sensing Category' step\"\n                    id=\"gui.howtos.talking.step_talesAskAnswer\"\n                />\n            ),\n            image: 'talesAskAnswer'\n        }, {\n            deckIds: [\n                'Tell-A-Story',\n                'Animate-A-Character'\n            ]\n        }\n        ],\n        urlId: 'talking'\n    },\n\n    'add-sprite': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Add a Sprite\"\n                description=\"Name for the 'Add a Sprite' how-to\"\n                id=\"gui.howtos.add-sprite.name\"\n            />\n        ),\n        img: libraryAddSprite,\n        tags: ['art', 'games', 'stories', 'character'],\n        steps: [\n            {\n                title: (\n                    <FormattedMessage\n                        defaultMessage=\"Add a Sprite\"\n                        description=\"Step name for 'Add a new sprite' step\"\n                        id=\"gui.howtos.add-sprite.step_addSprite\"\n                    />\n                ),\n                image: 'addSprite'\n            },\n            {\n                deckIds: [\n                    'add-a-backdrop',\n                    'switch-costume'\n                ]\n            }\n        ],\n        urlId: 'add-a-sprite'\n    },\n\n    'add-a-backdrop': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Add a Backdrop\"\n                description=\"Name for the 'Add a Backdrop' how-to\"\n                id=\"gui.howtos.add-a-backdrop.name\"\n            />\n        ),\n        img: addBackdropThumb,\n        tags: ['art', 'games', 'stories', 'background'],\n        steps: [{\n            video: 'add-a-backdrop'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add a Backdrop\"\n                    description=\"Step name for 'Add a Backdrop' step\"\n                    id=\"gui.howtos.add-a-backdrop.step_addBackdrop\"\n                />\n            ),\n            image: 'addBackdrop'\n        },\n\n        {\n            deckIds: [\n                'change-size',\n                'switch-costume'\n            ]\n        }],\n        urlId: 'add-a-backdrop'\n    },\n\n    'change-size': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Change Size\"\n                description=\"Name for the 'Change Size' how-to\"\n                id=\"gui.howtos.change-size.name\"\n            />\n        ),\n        img: changeSizeThumb,\n        scale: ['art', 'animation', 'scale'],\n        steps: [{\n            video: 'change-size'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Change Size\"\n                    description=\"Step name for 'Change Size' step\"\n                    id=\"gui.howtos.change-size.step_changeSize\"\n                />\n            ),\n            image: 'changeSize'\n        }, {\n            deckIds: [\n                'glide-around',\n                'spin-video'\n            ]\n        }],\n        urlId: 'change-size'\n    },\n\n    'glide-around': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Glide Around\"\n                description=\"Name for the 'Glide Around' how-to\"\n                id=\"gui.howtos.glide-around.name\"\n            />\n        ),\n        img: glideAroundThumb,\n        tags: ['animation', 'stories', 'music', 'instrument', 'play', 'song', 'band'],\n        steps: [{\n            video: 'glide-around'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Glide Around\"\n                    description=\"Step name for 'Glide Around' step\"\n                    id=\"gui.howtos.change-size.step_glideAroundBackAndForth\"\n                />\n            ),\n            image: 'glideAroundBackAndForth'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Glide to a Point\"\n                    description=\"Step name for 'Glide to a Point' step\"\n                    id=\"gui.howtos.change-size.step_glideAroundPoint\"\n                />\n            ),\n            image: 'glideAroundPoint'\n        }, {\n            deckIds: [\n                'Tell-A-Story',\n                'switch-costume'\n            ]\n        }],\n        urlId: 'glide-around'\n    },\n\n    'record-a-sound': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Record a Sound\"\n                description=\"Record A Sound' how-to\"\n                id=\"gui.howtos.record-a-sound.name\"\n            />\n        ),\n        tags: ['music', 'games', 'stories'],\n        img: recordASound,\n        steps: [{\n            video: 'record-a-sound'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Click on the 'Sounds' Tab\"\n                    description=\"Step name for 'Click on the Sounds Tab' step\"\n                    id=\"gui.howtos.change-size.step_recordASoundSoundsTab\"\n                />\n            ),\n            image: 'recordASoundSoundsTab'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Click 'Record'\"\n                    description=\"Step name for 'Click Record' step\"\n                    id=\"gui.howtos.change-size.step_recordASoundClickRecord\"\n                />\n            ),\n            image: 'recordASoundClickRecord'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Press the Record Button\"\n                    description=\"Step name for 'Press the Record Button' step\"\n                    id=\"gui.howtos.change-size.step_recordASoundPressRecordButton\"\n                />\n            ),\n            image: 'recordASoundPressRecordButton'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Choose Your Sound\"\n                    description=\"Step name for 'Choose Your Sound' step\"\n                    id=\"gui.howtos.change-size.step_recordASoundChooseSound\"\n                />\n            ),\n            image: 'recordASoundChooseSound'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Play Your Sound\"\n                    description=\"Step name for 'Play Your Sound' step\"\n                    id=\"gui.howtos.change-size.step_recordASoundPlayYourSound\"\n                />\n            ),\n            image: 'recordASoundPlayYourSound'\n        }, {\n            deckIds: [\n                'Make-Music',\n                'switch-costume'\n            ]\n        }],\n        urlId: 'record-a-sound'\n    },\n\n    'spin-video': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Make It Spin\"\n                description=\"Name for the 'Make It Spin' how-to\"\n                id=\"gui.howtos.spin-video.name\"\n            />\n        ),\n        img: spinThumb,\n        tags: ['animation', 'rotate', 'rotation'],\n        steps: [{\n            video: 'spin-video'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Turn\"\n                    description=\"Step name for 'Turn' step\"\n                    id=\"gui.howtos.change-size.step_spinTurn\"\n                />\n            ),\n            image: 'spinTurn'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Set Direction\"\n                    description=\"Step name for 'Set Direction' step\"\n                    id=\"gui.howtos.change-size.step_spinPointInDirection\"\n                />\n            ),\n            image: 'spinPointInDirection'\n        }, {\n            deckIds: [\n                'add-a-backdrop',\n                'switch-costume'\n            ]\n        }],\n        urlId: 'make-it-spin'\n    },\n\n    'hide-and-show': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Hide and Show\"\n                description=\"Name for the 'Hide and Show' how-to\"\n                id=\"gui.howtos.hide-and-show.name\"\n            />\n        ),\n        img: hideAndShowThumb,\n        tags: ['stories', 'appear', 'disappear'],\n        steps: [{\n            video: 'hide-and-show'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Hide and Show\"\n                    description=\"Step name for 'Hide and Show' step\"\n                    id=\"gui.howtos.change-size.step_hideAndShow\"\n                />\n            ),\n            image: 'hideAndShow'\n        }, {\n            deckIds: [\n                'add-a-backdrop',\n                'switch-costume'\n            ]\n        }],\n        urlId: 'hide'\n    },\n\n    'switch-costume': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Animate a Sprite\"\n                description=\"Name for the 'Animate a Sprite' how-to\"\n                id=\"gui.howtos.switch-costume.name\"\n            />\n        ),\n        img: switchCostumeThumb,\n        tags: ['animation', 'art', 'games', 'stories', 'paint', 'edit', 'change', 'character', 'sprite'],\n        steps: [{\n            video: 'switch-costume'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Animate a Sprite\"\n                    description=\"Step name for 'Animate a Sprite' step\"\n                    id=\"gui.howtos.change-size.step_switchCostumes\"\n                />\n            ),\n            image: 'switchCostumes'\n        }, {\n            deckIds: [\n                'imagine',\n                'add-effects'\n            ]\n        }],\n        urlId: 'animate-a-sprite'\n    },\n\n    'move-around-with-arrow-keys': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Use Arrow Keys\"\n                description=\"Name for the 'Use Arrow Keys' how-to\"\n                id=\"gui.howtos.move-around-with-arrow-keys.name\"\n            />\n        ),\n        img: moveArrowKeysThumb,\n        tags: ['games', 'keyboard'],\n        steps: [{\n            video: 'move-around-with-arrow-keys'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Move Left and Right\"\n                    description=\"Step name for 'Move Left and Right' step\"\n                    id=\"gui.howtos.add-a-backdrop.step_moveArrowKeysLeftRight\"\n                />\n            ),\n            image: 'moveArrowKeysLeftRight'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Move Up and Down\"\n                    description=\"Step name for 'Move Up and Down' step\"\n                    id=\"gui.howtos.add-a-backdrop.step_moveArrowKeysUpDown\"\n                />\n            ),\n            image: 'moveArrowKeysUpDown'\n        }, {\n            deckIds: [\n                'make-it-fly',\n                'switch-costume'\n            ]\n        }],\n        urlId: 'arrow-keys'\n    },\n\n    'add-effects': {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Add Effects\"\n                description=\"Name for the 'Add Effects' how-to\"\n                id=\"gui.howtos.add-effects.name\"\n            />\n        ),\n        tags: ['animation', 'art', 'games', 'stories', '8-bit', 'brightness', 'ghost', 'transparency', 'opacity',\n            'fx', 'color', 'fisheye', 'whirl', 'twist', 'pixelate', 'mosaic', '8bit'],\n        img: addEffectsThumb,\n        steps: [{\n            video: 'add-effects'\n        }, {\n            title: (\n                <FormattedMessage\n                    defaultMessage=\"Add Effects\"\n                    description=\"Step name for 'Add Effects' step\"\n                    id=\"gui.howtos.videosens.step_addEffects\"\n                />\n            ),\n            image: 'addEffects'\n        }, {\n            deckIds: [\n                'add-a-backdrop',\n                'code-cartoon'\n            ]\n        }],\n        urlId: 'add-effects'\n    },\n\n    'wedo2-getting-started': {\n        steps: [{\n            video: '4im7iizv47'\n        }],\n        urlId: 'wedo',\n        hidden: true\n    },\n\n    'ev3-getting-started': {\n        steps: [{\n            video: 'qgu78c5y7d'\n        }],\n        urlId: 'ev3',\n        hidden: true\n    },\n\n    'whats-new': {\n        steps: [{\n            video: 'mtqymxg0qq'\n        }],\n        urlId: 'whatsnew',\n        hidden: true\n    }\n};\n","import React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport musicIconURL from './music/music.png';\nimport musicInsetIconURL from './music/music-small.svg';\n\nimport penIconURL from './pen/pen.png';\nimport penInsetIconURL from './pen/pen-small.svg';\n\nimport videoSensingIconURL from './videoSensing/video-sensing.png';\nimport videoSensingInsetIconURL from './videoSensing/video-sensing-small.svg';\n\nimport text2speechIconURL from './text2speech/text2speech.png';\nimport text2speechInsetIconURL from './text2speech/text2speech-small.svg';\n\nimport translateIconURL from './translate/translate.png';\nimport translateInsetIconURL from './translate/translate-small.png';\n\nimport makeymakeyIconURL from './makeymakey/makeymakey.png';\nimport makeymakeyInsetIconURL from './makeymakey/makeymakey-small.svg';\n\nimport microbitIconURL from './microbit/microbit.png';\nimport microbitInsetIconURL from './microbit/microbit-small.svg';\nimport microbitConnectionIconURL from './microbit/microbit-illustration.svg';\nimport microbitConnectionSmallIconURL from './microbit/microbit-small.svg';\n\nimport ev3IconURL from './ev3/ev3.png';\nimport ev3InsetIconURL from './ev3/ev3-small.svg';\nimport ev3ConnectionIconURL from './ev3/ev3-hub-illustration.svg';\nimport ev3ConnectionSmallIconURL from './ev3/ev3-small.svg';\n\nimport wedo2IconURL from './wedo2/wedo.png'; // TODO: Rename file names to match variable/prop names?\nimport wedo2InsetIconURL from './wedo2/wedo-small.svg';\nimport wedo2ConnectionIconURL from './wedo2/wedo-illustration.svg';\nimport wedo2ConnectionSmallIconURL from './wedo2/wedo-small.svg';\nimport wedo2ConnectionTipIconURL from './wedo2/wedo-button-illustration.svg';\n\nimport boostIconURL from './boost/boost.png';\nimport boostInsetIconURL from './boost/boost-small.svg';\nimport boostConnectionIconURL from './boost/boost-illustration.svg';\nimport boostConnectionSmallIconURL from './boost/boost-small.svg';\nimport boostConnectionTipIconURL from './boost/boost-button-illustration.svg';\n\nimport gdxforIconURL from './gdxfor/gdxfor.png';\nimport gdxforInsetIconURL from './gdxfor/gdxfor-small.svg';\nimport gdxforConnectionIconURL from './gdxfor/gdxfor-illustration.svg';\nimport gdxforConnectionSmallIconURL from './gdxfor/gdxfor-small.svg';\n\nexport default [\n    {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Music\"\n                description=\"Name for the 'Music' extension\"\n                id=\"gui.extension.music.name\"\n            />\n        ),\n        extensionId: 'music',\n        iconURL: musicIconURL,\n        insetIconURL: musicInsetIconURL,\n        description: (\n            <FormattedMessage\n                defaultMessage=\"Play instruments and drums.\"\n                description=\"Description for the 'Music' extension\"\n                id=\"gui.extension.music.description\"\n            />\n        ),\n        featured: true\n    },\n    {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Pen\"\n                description=\"Name for the 'Pen' extension\"\n                id=\"gui.extension.pen.name\"\n            />\n        ),\n        extensionId: 'pen',\n        iconURL: penIconURL,\n        insetIconURL: penInsetIconURL,\n        description: (\n            <FormattedMessage\n                defaultMessage=\"Draw with your sprites.\"\n                description=\"Description for the 'Pen' extension\"\n                id=\"gui.extension.pen.description\"\n            />\n        ),\n        featured: true\n    },\n    {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Video Sensing\"\n                description=\"Name for the 'Video Sensing' extension\"\n                id=\"gui.extension.videosensing.name\"\n            />\n        ),\n        extensionId: 'videoSensing',\n        iconURL: videoSensingIconURL,\n        insetIconURL: videoSensingInsetIconURL,\n        description: (\n            <FormattedMessage\n                defaultMessage=\"Sense motion with the camera.\"\n                description=\"Description for the 'Video Sensing' extension\"\n                id=\"gui.extension.videosensing.description\"\n            />\n        ),\n        featured: true\n    },\n    {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Text to Speech\"\n                description=\"Name for the Text to Speech extension\"\n                id=\"gui.extension.text2speech.name\"\n            />\n        ),\n        extensionId: 'text2speech',\n        collaborator: 'Amazon Web Services',\n        iconURL: text2speechIconURL,\n        insetIconURL: text2speechInsetIconURL,\n        description: (\n            <FormattedMessage\n                defaultMessage=\"Make your projects talk.\"\n                description=\"Description for the Text to speech extension\"\n                id=\"gui.extension.text2speech.description\"\n            />\n        ),\n        featured: true,\n        internetConnectionRequired: true\n    },\n    {\n        name: (\n            <FormattedMessage\n                defaultMessage=\"Translate\"\n                description=\"Name for the Translate extension\"\n                id=\"gui.extension.translate.name\"\n            />\n        ),\n        extensionId: 'translate',\n        collaborator: 'Google',\n        iconURL: translateIconURL,\n        insetIconURL: translateInsetIconURL,\n        description: (\n            <FormattedMessage\n                defaultMessage=\"Translate text into many languages.\"\n                description=\"Description for the Translate extension\"\n                id=\"gui.extension.translate.description\"\n            />\n        ),\n        featured: true,\n        internetConnectionRequired: true\n    },\n    {\n        name: 'Makey Makey',\n        extensionId: 'makeymakey',\n        collaborator: 'JoyLabz',\n        iconURL: makeymakeyIconURL,\n        insetIconURL: makeymakeyInsetIconURL,\n        description: (\n            <FormattedMessage\n                defaultMessage=\"Make anything into a key.\"\n                description=\"Description for the 'Makey Makey' extension\"\n                id=\"gui.extension.makeymakey.description\"\n            />\n        ),\n        featured: true\n    },\n    {\n        name: 'micro:bit',\n        extensionId: 'microbit',\n        collaborator: 'micro:bit',\n        iconURL: microbitIconURL,\n        insetIconURL: microbitInsetIconURL,\n        description: (\n            <FormattedMessage\n                defaultMessage=\"Connect your projects with the world.\"\n                description=\"Description for the 'micro:bit' extension\"\n                id=\"gui.extension.microbit.description\"\n            />\n        ),\n        featured: true,\n        disabled: false,\n        bluetoothRequired: true,\n        internetConnectionRequired: true,\n        launchPeripheralConnectionFlow: true,\n        useAutoScan: false,\n        connectionIconURL: microbitConnectionIconURL,\n        connectionSmallIconURL: microbitConnectionSmallIconURL,\n        connectingMessage: (\n            <FormattedMessage\n                defaultMessage=\"Connecting\"\n                description=\"Message to help people connect to their micro:bit.\"\n                id=\"gui.extension.microbit.connectingMessage\"\n            />\n        ),\n        helpLink: 'https://scratch.mit.edu/microbit'\n    },\n    {\n        name: 'LEGO MINDSTORMS EV3',\n        extensionId: 'ev3',\n        collaborator: 'LEGO',\n        iconURL: ev3IconURL,\n        insetIconURL: ev3InsetIconURL,\n        description: (\n            <FormattedMessage\n                defaultMessage=\"Build interactive robots and more.\"\n                description=\"Description for the 'LEGO MINDSTORMS EV3' extension\"\n                id=\"gui.extension.ev3.description\"\n            />\n        ),\n        featured: true,\n        disabled: false,\n        bluetoothRequired: true,\n        internetConnectionRequired: true,\n        launchPeripheralConnectionFlow: true,\n        useAutoScan: false,\n        connectionIconURL: ev3ConnectionIconURL,\n        connectionSmallIconURL: ev3ConnectionSmallIconURL,\n        connectingMessage: (\n            <FormattedMessage\n                defaultMessage=\"Connecting. Make sure the pin on your EV3 is set to 1234.\"\n                description=\"Message to help people connect to their EV3. Must note the PIN should be 1234.\"\n                id=\"gui.extension.ev3.connectingMessage\"\n            />\n        ),\n        helpLink: 'https://scratch.mit.edu/ev3'\n    },\n    {\n        name: 'LEGO BOOST',\n        extensionId: 'boost',\n        collaborator: 'LEGO',\n        iconURL: boostIconURL,\n        insetIconURL: boostInsetIconURL,\n        description: (\n            <FormattedMessage\n                defaultMessage=\"Bring robotic creations to life.\"\n                description=\"Description for the 'LEGO BOOST' extension\"\n                id=\"gui.extension.boost.description\"\n            />\n        ),\n        featured: true,\n        disabled: false,\n        bluetoothRequired: true,\n        internetConnectionRequired: true,\n        launchPeripheralConnectionFlow: true,\n        useAutoScan: true,\n        connectionIconURL: boostConnectionIconURL,\n        connectionSmallIconURL: boostConnectionSmallIconURL,\n        connectionTipIconURL: boostConnectionTipIconURL,\n        connectingMessage: (\n            <FormattedMessage\n                defaultMessage=\"Connecting\"\n                description=\"Message to help people connect to their BOOST.\"\n                id=\"gui.extension.boost.connectingMessage\"\n            />\n        ),\n        helpLink: 'https://scratch.mit.edu/boost'\n    },\n    {\n        name: 'LEGO Education WeDo 2.0',\n        extensionId: 'wedo2',\n        collaborator: 'LEGO',\n        iconURL: wedo2IconURL,\n        insetIconURL: wedo2InsetIconURL,\n        description: (\n            <FormattedMessage\n                defaultMessage=\"Build with motors and sensors.\"\n                description=\"Description for the 'LEGO WeDo 2.0' extension\"\n                id=\"gui.extension.wedo2.description\"\n            />\n        ),\n        featured: true,\n        disabled: false,\n        bluetoothRequired: true,\n        internetConnectionRequired: true,\n        launchPeripheralConnectionFlow: true,\n        useAutoScan: true,\n        connectionIconURL: wedo2ConnectionIconURL,\n        connectionSmallIconURL: wedo2ConnectionSmallIconURL,\n        connectionTipIconURL: wedo2ConnectionTipIconURL,\n        connectingMessage: (\n            <FormattedMessage\n                defaultMessage=\"Connecting\"\n                description=\"Message to help people connect to their WeDo.\"\n                id=\"gui.extension.wedo2.connectingMessage\"\n            />\n        ),\n        helpLink: 'https://scratch.mit.edu/wedo'\n    },\n    {\n        name: 'Go Direct Force & Acceleration',\n        extensionId: 'gdxfor',\n        collaborator: 'Vernier',\n        iconURL: gdxforIconURL,\n        insetIconURL: gdxforInsetIconURL,\n        description: (\n            <FormattedMessage\n                defaultMessage=\"Sense push, pull, motion, and spin.\"\n                description=\"Description for the Vernier Go Direct Force and Acceleration sensor extension\"\n                id=\"gui.extension.gdxfor.description\"\n            />\n        ),\n        featured: true,\n        disabled: false,\n        bluetoothRequired: true,\n        internetConnectionRequired: true,\n        launchPeripheralConnectionFlow: true,\n        useAutoScan: false,\n        connectionIconURL: gdxforConnectionIconURL,\n        connectionSmallIconURL: gdxforConnectionSmallIconURL,\n        connectingMessage: (\n            <FormattedMessage\n                defaultMessage=\"Connecting\"\n                description=\"Message to help people connect to their force and acceleration sensor.\"\n                id=\"gui.extension.gdxfor.connectingMessage\"\n            />\n        ),\n        helpLink: 'https://scratch.mit.edu/vernier'\n    }\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport ConnectedIntlProvider from './connected-intl-provider.jsx';\n\n/*\n * Higher Order Component to provide localiztion state. Creates a nested IntlProvider\n * to handle Gui intl context. The component accepts an onSetLanguage callback that is\n * called when the locale chagnes.\n * @param {React.Component} WrappedComponent - component to provide state for\n * @returns {React.Component} component with intl state provided from redux\n */\nconst LocalizationHOC = function (WrappedComponent) {\n    class LocalizationWrapper extends React.Component {\n        componentDidUpdate (prevProps) {\n            if (prevProps.locale !== this.props.locale) {\n                this.props.onSetLanguage(this.props.locale);\n            }\n        }\n        render () {\n            const {\n                locale, // eslint-disable-line no-unused-vars\n                onSetLanguage, // eslint-disable-line no-unused-vars\n                ...componentProps\n            } = this.props;\n            return (\n                <ConnectedIntlProvider>\n                    <WrappedComponent {...componentProps} />\n                </ConnectedIntlProvider>\n            );\n        }\n    }\n    LocalizationWrapper.propTypes = {\n        locale: PropTypes.string,\n        onSetLanguage: PropTypes.func\n    };\n\n    LocalizationWrapper.defaultProps = {\n        onSetLanguage: () => {}\n    };\n\n    const mapStateToProps = state => ({\n        locale: state.locales.locale\n    });\n\n    const mapDispatchToProps = () => ({});\n\n    return connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(LocalizationWrapper);\n};\n\nexport default LocalizationHOC;\n","import minilog from 'minilog';\nminilog.enable();\n\nexport default minilog('gui');\n","import ScratchBlocks from 'scratch-blocks';\nimport {defaultColors} from './themes';\n\nconst categorySeparator = '<sep gap=\"36\"/>';\n\nconst blockSeparator = '<sep gap=\"36\"/>'; // At default scale, about 28px\n\n/* eslint-disable no-unused-vars */\nconst motion = function (isInitialSetup, isStage, targetId, colors) {\n    const stageSelected = ScratchBlocks.ScratchMsgs.translate(\n        'MOTION_STAGE_SELECTED',\n        'Stage selected: no motion blocks'\n    );\n    // Note: the category's secondaryColour matches up with the blocks' tertiary color, both used for border color.\n    return `\n    <category name=\"%{BKY_CATEGORY_MOTION}\" id=\"motion\" colour=\"${colors.primary}\" secondaryColour=\"${colors.tertiary}\">\n        ${isStage ? `\n        <label text=\"${stageSelected}\"></label>\n        ` : `\n        <block type=\"motion_movesteps\">\n            <value name=\"STEPS\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">10</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"motion_turnright\">\n            <value name=\"DEGREES\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">15</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"motion_turnleft\">\n            <value name=\"DEGREES\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">15</field>\n                </shadow>\n            </value>\n        </block>\n        ${blockSeparator}\n        <block type=\"motion_goto\">\n            <value name=\"TO\">\n                <shadow type=\"motion_goto_menu\">\n                </shadow>\n            </value>\n        </block>\n        <block type=\"motion_gotoxy\">\n            <value name=\"X\">\n                <shadow id=\"movex\" type=\"math_number\">\n                    <field name=\"NUM\">0</field>\n                </shadow>\n            </value>\n            <value name=\"Y\">\n                <shadow id=\"movey\" type=\"math_number\">\n                    <field name=\"NUM\">0</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"motion_glideto\" id=\"motion_glideto\">\n            <value name=\"SECS\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">1</field>\n                </shadow>\n            </value>\n            <value name=\"TO\">\n                <shadow type=\"motion_glideto_menu\">\n                </shadow>\n            </value>\n        </block>\n        <block type=\"motion_glidesecstoxy\">\n            <value name=\"SECS\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">1</field>\n                </shadow>\n            </value>\n            <value name=\"X\">\n                <shadow id=\"glidex\" type=\"math_number\">\n                    <field name=\"NUM\">0</field>\n                </shadow>\n            </value>\n            <value name=\"Y\">\n                <shadow id=\"glidey\" type=\"math_number\">\n                    <field name=\"NUM\">0</field>\n                </shadow>\n            </value>\n        </block>\n        ${blockSeparator}\n        <block type=\"motion_pointindirection\">\n            <value name=\"DIRECTION\">\n                <shadow type=\"math_angle\">\n                    <field name=\"NUM\">90</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"motion_pointtowards\">\n            <value name=\"TOWARDS\">\n                <shadow type=\"motion_pointtowards_menu\">\n                </shadow>\n            </value>\n        </block>\n        ${blockSeparator}\n        <block type=\"motion_changexby\">\n            <value name=\"DX\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">10</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"motion_setx\">\n            <value name=\"X\">\n                <shadow id=\"setx\" type=\"math_number\">\n                    <field name=\"NUM\">0</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"motion_changeyby\">\n            <value name=\"DY\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">10</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"motion_sety\">\n            <value name=\"Y\">\n                <shadow id=\"sety\" type=\"math_number\">\n                    <field name=\"NUM\">0</field>\n                </shadow>\n            </value>\n        </block>\n        ${blockSeparator}\n        <block type=\"motion_ifonedgebounce\"/>\n        ${blockSeparator}\n        <block type=\"motion_setrotationstyle\"/>\n        ${blockSeparator}\n        <block id=\"${targetId}_xposition\" type=\"motion_xposition\"/>\n        <block id=\"${targetId}_yposition\" type=\"motion_yposition\"/>\n        <block id=\"${targetId}_direction\" type=\"motion_direction\"/>`}\n        ${categorySeparator}\n    </category>\n    `;\n};\n\nconst xmlEscape = function (unsafe) {\n    return unsafe.replace(/[<>&'\"]/g, c => {\n        switch (c) {\n        case '<': return '&lt;';\n        case '>': return '&gt;';\n        case '&': return '&amp;';\n        case '\\'': return '&apos;';\n        case '\"': return '&quot;';\n        }\n    });\n};\n\nconst looks = function (isInitialSetup, isStage, targetId, costumeName, backdropName, colors) {\n    const hello = ScratchBlocks.ScratchMsgs.translate('LOOKS_HELLO', 'Hello!');\n    const hmm = ScratchBlocks.ScratchMsgs.translate('LOOKS_HMM', 'Hmm...');\n    // Note: the category's secondaryColour matches up with the blocks' tertiary color, both used for border color.\n    return `\n    <category name=\"%{BKY_CATEGORY_LOOKS}\" id=\"looks\" colour=\"${colors.primary}\" secondaryColour=\"${colors.tertiary}\">\n        ${isStage ? '' : `\n        <block type=\"looks_sayforsecs\">\n            <value name=\"MESSAGE\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\">${hello}</field>\n                </shadow>\n            </value>\n            <value name=\"SECS\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">2</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"looks_say\">\n            <value name=\"MESSAGE\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\">${hello}</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"looks_thinkforsecs\">\n            <value name=\"MESSAGE\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\">${hmm}</field>\n                </shadow>\n            </value>\n            <value name=\"SECS\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">2</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"looks_think\">\n            <value name=\"MESSAGE\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\">${hmm}</field>\n                </shadow>\n            </value>\n        </block>\n        ${blockSeparator}\n        `}\n        ${isStage ? `\n            <block type=\"looks_switchbackdropto\">\n                <value name=\"BACKDROP\">\n                    <shadow type=\"looks_backdrops\">\n                        <field name=\"BACKDROP\">${backdropName}</field>\n                    </shadow>\n                </value>\n            </block>\n            <block type=\"looks_switchbackdroptoandwait\">\n                <value name=\"BACKDROP\">\n                    <shadow type=\"looks_backdrops\">\n                        <field name=\"BACKDROP\">${backdropName}</field>\n                    </shadow>\n                </value>\n            </block>\n            <block type=\"looks_nextbackdrop\"/>\n        ` : `\n            <block id=\"${targetId}_switchcostumeto\" type=\"looks_switchcostumeto\">\n                <value name=\"COSTUME\">\n                    <shadow type=\"looks_costume\">\n                        <field name=\"COSTUME\">${costumeName}</field>\n                    </shadow>\n                </value>\n            </block>\n            <block type=\"looks_nextcostume\"/>\n            <block type=\"looks_switchbackdropto\">\n                <value name=\"BACKDROP\">\n                    <shadow type=\"looks_backdrops\">\n                        <field name=\"BACKDROP\">${backdropName}</field>\n                    </shadow>\n                </value>\n            </block>\n            <block type=\"looks_nextbackdrop\"/>\n            ${blockSeparator}\n            <block type=\"looks_changesizeby\">\n                <value name=\"CHANGE\">\n                    <shadow type=\"math_number\">\n                        <field name=\"NUM\">10</field>\n                    </shadow>\n                </value>\n            </block>\n            <block type=\"looks_setsizeto\">\n                <value name=\"SIZE\">\n                    <shadow type=\"math_number\">\n                        <field name=\"NUM\">100</field>\n                    </shadow>\n                </value>\n            </block>\n        `}\n        ${blockSeparator}\n        <block type=\"looks_changeeffectby\">\n            <value name=\"CHANGE\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">25</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"looks_seteffectto\">\n            <value name=\"VALUE\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">0</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"looks_cleargraphiceffects\"/>\n        ${blockSeparator}\n        ${isStage ? '' : `\n            <block type=\"looks_show\"/>\n            <block type=\"looks_hide\"/>\n        ${blockSeparator}\n            <block type=\"looks_gotofrontback\"/>\n            <block type=\"looks_goforwardbackwardlayers\">\n                <value name=\"NUM\">\n                    <shadow type=\"math_integer\">\n                        <field name=\"NUM\">1</field>\n                    </shadow>\n                </value>\n            </block>\n        `}\n        ${isStage ? `\n            <block id=\"backdropnumbername\" type=\"looks_backdropnumbername\"/>\n        ` : `\n            <block id=\"${targetId}_costumenumbername\" type=\"looks_costumenumbername\"/>\n            <block id=\"backdropnumbername\" type=\"looks_backdropnumbername\"/>\n            <block id=\"${targetId}_size\" type=\"looks_size\"/>\n        `}\n        ${categorySeparator}\n    </category>\n    `;\n};\n\nconst sound = function (isInitialSetup, isStage, targetId, soundName, colors) {\n    // Note: the category's secondaryColour matches up with the blocks' tertiary color, both used for border color.\n    return `\n    <category name=\"%{BKY_CATEGORY_SOUND}\" id=\"sound\" colour=\"${colors.primary}\" secondaryColour=\"${colors.tertiary}\">\n        <block id=\"${targetId}_sound_playuntildone\" type=\"sound_playuntildone\">\n            <value name=\"SOUND_MENU\">\n                <shadow type=\"sound_sounds_menu\">\n                    <field name=\"SOUND_MENU\">${soundName}</field>\n                </shadow>\n            </value>\n        </block>\n        <block id=\"${targetId}_sound_play\" type=\"sound_play\">\n            <value name=\"SOUND_MENU\">\n                <shadow type=\"sound_sounds_menu\">\n                    <field name=\"SOUND_MENU\">${soundName}</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"sound_stopallsounds\"/>\n        ${blockSeparator}\n        <block type=\"sound_changeeffectby\">\n            <value name=\"VALUE\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">10</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"sound_seteffectto\">\n            <value name=\"VALUE\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">100</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"sound_cleareffects\"/>\n        ${blockSeparator}\n        <block type=\"sound_changevolumeby\">\n            <value name=\"VOLUME\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">-10</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"sound_setvolumeto\">\n            <value name=\"VOLUME\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">100</field>\n                </shadow>\n            </value>\n        </block>\n        <block id=\"${targetId}_volume\" type=\"sound_volume\"/>\n        ${categorySeparator}\n    </category>\n    `;\n};\n\nconst events = function (isInitialSetup, isStage, targetId, colors) {\n    // Note: the category's secondaryColour matches up with the blocks' tertiary color, both used for border color.\n    return `\n    <category name=\"%{BKY_CATEGORY_EVENTS}\" id=\"events\" colour=\"${colors.primary}\" secondaryColour=\"${colors.tertiary}\">\n        <block type=\"event_whenflagclicked\"/>\n        <block type=\"event_whenkeypressed\">\n        </block>\n        ${isStage ? `\n            <block type=\"event_whenstageclicked\"/>\n        ` : `\n            <block type=\"event_whenthisspriteclicked\"/>\n        `}\n        <block type=\"event_whenbackdropswitchesto\">\n        </block>\n        ${blockSeparator}\n        <block type=\"event_whengreaterthan\">\n            <value name=\"VALUE\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">10</field>\n                </shadow>\n            </value>\n        </block>\n        ${blockSeparator}\n        <block type=\"event_whenbroadcastreceived\">\n        </block>\n        <block type=\"event_broadcast\">\n            <value name=\"BROADCAST_INPUT\">\n                <shadow type=\"event_broadcast_menu\"></shadow>\n            </value>\n        </block>\n        <block type=\"event_broadcastandwait\">\n            <value name=\"BROADCAST_INPUT\">\n              <shadow type=\"event_broadcast_menu\"></shadow>\n            </value>\n        </block>\n        ${categorySeparator}\n    </category>\n    `;\n};\n\nconst control = function (isInitialSetup, isStage, targetId, colors) {\n    // Note: the category's secondaryColour matches up with the blocks' tertiary color, both used for border color.\n    return `\n    <category\n        name=\"%{BKY_CATEGORY_CONTROL}\"\n        id=\"control\"\n        colour=\"${colors.primary}\"\n        secondaryColour=\"${colors.tertiary}\">\n        <block type=\"control_wait\">\n            <value name=\"DURATION\">\n                <shadow type=\"math_positive_number\">\n                    <field name=\"NUM\">1</field>\n                </shadow>\n            </value>\n        </block>\n        ${blockSeparator}\n        <block type=\"control_repeat\">\n            <value name=\"TIMES\">\n                <shadow type=\"math_whole_number\">\n                    <field name=\"NUM\">10</field>\n                </shadow>\n            </value>\n        </block>\n        <block id=\"forever\" type=\"control_forever\"/>\n        ${blockSeparator}\n        <block type=\"control_if\"/>\n        <block type=\"control_if_else\"/>\n        <block id=\"wait_until\" type=\"control_wait_until\"/>\n        <block id=\"repeat_until\" type=\"control_repeat_until\"/>\n        ${blockSeparator}\n        <block type=\"control_stop\"/>\n        ${blockSeparator}\n        ${isStage ? `\n            <block type=\"control_create_clone_of\">\n                <value name=\"CLONE_OPTION\">\n                    <shadow type=\"control_create_clone_of_menu\"/>\n                </value>\n            </block>\n        ` : `\n            <block type=\"control_start_as_clone\"/>\n            <block type=\"control_create_clone_of\">\n                <value name=\"CLONE_OPTION\">\n                    <shadow type=\"control_create_clone_of_menu\"/>\n                </value>\n            </block>\n            <block type=\"control_delete_this_clone\"/>\n        `}\n        ${categorySeparator}\n    </category>\n    `;\n};\n\nconst sensing = function (isInitialSetup, isStage, targetId, colors) {\n    const name = ScratchBlocks.ScratchMsgs.translate('SENSING_ASK_TEXT', 'What\\'s your name?');\n    // Note: the category's secondaryColour matches up with the blocks' tertiary color, both used for border color.\n    return `\n    <category\n        name=\"%{BKY_CATEGORY_SENSING}\"\n        id=\"sensing\"\n        colour=\"${colors.primary}\"\n        secondaryColour=\"${colors.tertiary}\">\n        ${isStage ? '' : `\n            <block type=\"sensing_touchingobject\">\n                <value name=\"TOUCHINGOBJECTMENU\">\n                    <shadow type=\"sensing_touchingobjectmenu\"/>\n                </value>\n            </block>\n            <block type=\"sensing_touchingcolor\">\n                <value name=\"COLOR\">\n                    <shadow type=\"colour_picker\"/>\n                </value>\n            </block>\n            <block type=\"sensing_coloristouchingcolor\">\n                <value name=\"COLOR\">\n                    <shadow type=\"colour_picker\"/>\n                </value>\n                <value name=\"COLOR2\">\n                    <shadow type=\"colour_picker\"/>\n                </value>\n            </block>\n            <block type=\"sensing_distanceto\">\n                <value name=\"DISTANCETOMENU\">\n                    <shadow type=\"sensing_distancetomenu\"/>\n                </value>\n            </block>\n            ${blockSeparator}\n        `}\n        ${isInitialSetup ? '' : `\n            <block id=\"askandwait\" type=\"sensing_askandwait\">\n                <value name=\"QUESTION\">\n                    <shadow type=\"text\">\n                        <field name=\"TEXT\">${name}</field>\n                    </shadow>\n                </value>\n            </block>\n        `}\n        <block id=\"answer\" type=\"sensing_answer\"/>\n        ${blockSeparator}\n        <block type=\"sensing_keypressed\">\n            <value name=\"KEY_OPTION\">\n                <shadow type=\"sensing_keyoptions\"/>\n            </value>\n        </block>\n        <block type=\"sensing_mousedown\"/>\n        <block type=\"sensing_mousex\"/>\n        <block type=\"sensing_mousey\"/>\n        ${isStage ? '' : `\n            ${blockSeparator}\n            '<block type=\"sensing_setdragmode\" id=\"sensing_setdragmode\"></block>'+\n            ${blockSeparator}\n        `}\n        ${blockSeparator}\n        <block id=\"loudness\" type=\"sensing_loudness\"/>\n        ${blockSeparator}\n        <block id=\"timer\" type=\"sensing_timer\"/>\n        <block type=\"sensing_resettimer\"/>\n        ${blockSeparator}\n        <block id=\"of\" type=\"sensing_of\">\n            <value name=\"OBJECT\">\n                <shadow id=\"sensing_of_object_menu\" type=\"sensing_of_object_menu\"/>\n            </value>\n        </block>\n        ${blockSeparator}\n        <block id=\"current\" type=\"sensing_current\"/>\n        <block type=\"sensing_dayssince2000\"/>\n        ${blockSeparator}\n        <block type=\"sensing_username\"/>\n        ${categorySeparator}\n    </category>\n    `;\n};\n\nconst operators = function (isInitialSetup, isStage, targetId, colors) {\n    const apple = ScratchBlocks.ScratchMsgs.translate('OPERATORS_JOIN_APPLE', 'apple');\n    const banana = ScratchBlocks.ScratchMsgs.translate('OPERATORS_JOIN_BANANA', 'banana');\n    const letter = ScratchBlocks.ScratchMsgs.translate('OPERATORS_LETTEROF_APPLE', 'a');\n    // Note: the category's secondaryColour matches up with the blocks' tertiary color, both used for border color.\n    return `\n    <category\n        name=\"%{BKY_CATEGORY_OPERATORS}\"\n        id=\"operators\"\n        colour=\"${colors.primary}\"\n        secondaryColour=\"${colors.tertiary}\">\n        <block type=\"operator_add\">\n            <value name=\"NUM1\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n            <value name=\"NUM2\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"operator_subtract\">\n            <value name=\"NUM1\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n            <value name=\"NUM2\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"operator_multiply\">\n            <value name=\"NUM1\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n            <value name=\"NUM2\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"operator_divide\">\n            <value name=\"NUM1\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n            <value name=\"NUM2\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n        </block>\n        ${blockSeparator}\n        <block type=\"operator_random\">\n            <value name=\"FROM\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">1</field>\n                </shadow>\n            </value>\n            <value name=\"TO\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">10</field>\n                </shadow>\n            </value>\n        </block>\n        ${blockSeparator}\n        <block type=\"operator_gt\">\n            <value name=\"OPERAND1\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\"/>\n                </shadow>\n            </value>\n            <value name=\"OPERAND2\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\">50</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"operator_lt\">\n            <value name=\"OPERAND1\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\"/>\n                </shadow>\n            </value>\n            <value name=\"OPERAND2\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\">50</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"operator_equals\">\n            <value name=\"OPERAND1\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\"/>\n                </shadow>\n            </value>\n            <value name=\"OPERAND2\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\">50</field>\n                </shadow>\n            </value>\n        </block>\n        ${blockSeparator}\n        <block type=\"operator_and\"/>\n        <block type=\"operator_or\"/>\n        <block type=\"operator_not\"/>\n        ${blockSeparator}\n        ${isInitialSetup ? '' : `\n            <block type=\"operator_join\">\n                <value name=\"STRING1\">\n                    <shadow type=\"text\">\n                        <field name=\"TEXT\">${apple} </field>\n                    </shadow>\n                </value>\n                <value name=\"STRING2\">\n                    <shadow type=\"text\">\n                        <field name=\"TEXT\">${banana}</field>\n                    </shadow>\n                </value>\n            </block>\n            <block type=\"operator_letter_of\">\n                <value name=\"LETTER\">\n                    <shadow type=\"math_whole_number\">\n                        <field name=\"NUM\">1</field>\n                    </shadow>\n                </value>\n                <value name=\"STRING\">\n                    <shadow type=\"text\">\n                        <field name=\"TEXT\">${apple}</field>\n                    </shadow>\n                </value>\n            </block>\n            <block type=\"operator_length\">\n                <value name=\"STRING\">\n                    <shadow type=\"text\">\n                        <field name=\"TEXT\">${apple}</field>\n                    </shadow>\n                </value>\n            </block>\n            <block type=\"operator_contains\" id=\"operator_contains\">\n              <value name=\"STRING1\">\n                <shadow type=\"text\">\n                  <field name=\"TEXT\">${apple}</field>\n                </shadow>\n              </value>\n              <value name=\"STRING2\">\n                <shadow type=\"text\">\n                  <field name=\"TEXT\">${letter}</field>\n                </shadow>\n              </value>\n            </block>\n        `}\n        ${blockSeparator}\n        <block type=\"operator_mod\">\n            <value name=\"NUM1\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n            <value name=\"NUM2\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"operator_round\">\n            <value name=\"NUM\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n        </block>\n        ${blockSeparator}\n        <block type=\"operator_mathop\">\n            <value name=\"NUM\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n        </block>\n        ${categorySeparator}\n    </category>\n    `;\n};\n\nconst variables = function (isInitialSetup, isStage, targetId, colors) {\n    // Note: the category's secondaryColour matches up with the blocks' tertiary color, both used for border color.\n    return `\n    <category\n        name=\"%{BKY_CATEGORY_VARIABLES}\"\n        id=\"variables\"\n        colour=\"${colors.primary}\"\n        secondaryColour=\"${colors.tertiary}\"\n        custom=\"VARIABLE\">\n    </category>\n    `;\n};\n\nconst myBlocks = function (isInitialSetup, isStage, targetId, colors) {\n    // Note: the category's secondaryColour matches up with the blocks' tertiary color, both used for border color.\n    return `\n    <category\n        name=\"%{BKY_CATEGORY_MYBLOCKS}\"\n        id=\"myBlocks\"\n        colour=\"${colors.primary}\"\n        secondaryColour=\"${colors.tertiary}\"\n        custom=\"PROCEDURE\">\n    </category>\n    `;\n};\n/* eslint-enable no-unused-vars */\n\nconst xmlOpen = '<xml style=\"display: none\">';\nconst xmlClose = '</xml>';\n\n/**\n * @param {!boolean} isInitialSetup - Whether the toolbox is for initial setup. If the mode is \"initial setup\",\n * blocks with localized default parameters (e.g. ask and wait) should not be loaded. (LLK/scratch-gui#5445)\n * @param {?boolean} isStage - Whether the toolbox is for a stage-type target. This is always set to true\n * when isInitialSetup is true.\n * @param {?string} targetId - The current editing target\n * @param {?Array.<object>} categoriesXML - optional array of `{id,xml}` for categories. This can include both core\n * and other extensions: core extensions will be placed in the normal Scratch order; others will go at the bottom.\n * @property {string} id - the extension / category ID.\n * @property {string} xml - the `<category>...</category>` XML for this extension / category.\n * @param {?string} costumeName - The name of the default selected costume dropdown.\n * @param {?string} backdropName - The name of the default selected backdrop dropdown.\n * @param {?string} soundName -  The name of the default selected sound dropdown.\n * @param {?object} colors - The colors for the theme.\n * @returns {string} - a ScratchBlocks-style XML document for the contents of the toolbox.\n */\nconst makeToolboxXML = function (isInitialSetup, isStage = true, targetId, categoriesXML = [],\n    costumeName = '', backdropName = '', soundName = '', colors = defaultColors) {\n    isStage = isInitialSetup || isStage;\n    const gap = [categorySeparator];\n\n    costumeName = xmlEscape(costumeName);\n    backdropName = xmlEscape(backdropName);\n    soundName = xmlEscape(soundName);\n\n    categoriesXML = categoriesXML.slice();\n    const moveCategory = categoryId => {\n        const index = categoriesXML.findIndex(categoryInfo => categoryInfo.id === categoryId);\n        if (index >= 0) {\n            // remove the category from categoriesXML and return its XML\n            const [categoryInfo] = categoriesXML.splice(index, 1);\n            return categoryInfo.xml;\n        }\n        // return `undefined`\n    };\n    const motionXML = moveCategory('motion') || motion(isInitialSetup, isStage, targetId, colors.motion);\n    const looksXML = moveCategory('looks') ||\n        looks(isInitialSetup, isStage, targetId, costumeName, backdropName, colors.looks);\n    const soundXML = moveCategory('sound') || sound(isInitialSetup, isStage, targetId, soundName, colors.sounds);\n    const eventsXML = moveCategory('event') || events(isInitialSetup, isStage, targetId, colors.event);\n    const controlXML = moveCategory('control') || control(isInitialSetup, isStage, targetId, colors.control);\n    const sensingXML = moveCategory('sensing') || sensing(isInitialSetup, isStage, targetId, colors.sensing);\n    const operatorsXML = moveCategory('operators') || operators(isInitialSetup, isStage, targetId, colors.operators);\n    const variablesXML = moveCategory('data') || variables(isInitialSetup, isStage, targetId, colors.data);\n    const myBlocksXML = moveCategory('procedures') || myBlocks(isInitialSetup, isStage, targetId, colors.more);\n\n    const everything = [\n        xmlOpen,\n        motionXML, gap,\n        looksXML, gap,\n        soundXML, gap,\n        eventsXML, gap,\n        controlXML, gap,\n        sensingXML, gap,\n        operatorsXML, gap,\n        variablesXML, gap,\n        myBlocksXML\n    ];\n\n    for (const extensionCategory of categoriesXML) {\n        everything.push(gap, extensionCategory.xml);\n    }\n\n    everything.push(xmlClose);\n    return everything.join('\\n');\n};\n\nexport default makeToolboxXML;\n","import OpcodeLabels from './opcode-labels.js';\n\nconst isUndefined = a => typeof a === 'undefined';\n\n/**\n * Convert monitors from VM format to what the GUI needs to render.\n * - Convert opcode to a label and a category\n * @param {string} block.id - The id of the monitor block\n * @param {string} block.spriteName - Present only if the monitor applies only to the sprite\n *     with given target ID. The name of the target sprite when the monitor was created\n * @param {string} block.opcode - The opcode of the monitor\n * @param {object} block.params - Extra params to the monitor block\n * @param {string|number|Array} block.value - The monitor value\n * @param {VirtualMachine} block.vm - the VM instance which owns the block\n * @return {object} The adapted monitor with label and category\n */\nexport default function ({id, spriteName, opcode, params, value, vm}) {\n    // Extension monitors get their labels from the Runtime through `getLabelForOpcode`.\n    // Other monitors' labels are hard-coded in `OpcodeLabels`.\n    let {label, category, labelFn} = (vm && vm.runtime.getLabelForOpcode(opcode)) || OpcodeLabels.getLabel(opcode);\n\n    // Use labelFn if provided for dynamic labelling (e.g. variables)\n    if (!isUndefined(labelFn)) label = labelFn(params);\n\n    // Append sprite name for sprite-specific monitors\n    if (spriteName) {\n        label = `${spriteName}: ${label}`;\n    }\n\n    // If value is a number, round it to six decimal places\n    if (typeof value === 'number') {\n        value = Number(value.toFixed(6));\n    }\n\n    // Turn the value to a string, for handle boolean values\n    if (typeof value === 'boolean') {\n        value = value.toString();\n    }\n\n    // Lists can contain booleans, which should also be turned to strings\n    if (Array.isArray(value)) {\n        value = value.map(item => item.toString());\n    }\n\n    return {id, label, category, value};\n}\n","import {defineMessages} from 'react-intl';\n\nconst messages = defineMessages({\n    motion_direction: {\n        defaultMessage: 'direction',\n        description: 'Label for the direction monitor when shown on the stage',\n        id: 'gui.opcodeLabels.direction'\n    },\n    motion_xposition: {\n        defaultMessage: 'x position',\n        description: 'Label for the x position monitor when shown on the stage',\n        id: 'gui.opcodeLabels.xposition'\n    },\n    motion_yposition: {\n        defaultMessage: 'y position',\n        description: 'Label for the y position monitor when shown on the stage',\n        id: 'gui.opcodeLabels.yposition'\n    },\n\n    // Looks\n    looks_size: {\n        defaultMessage: 'size',\n        description: 'Label for the size monitor when shown on the stage',\n        id: 'gui.opcodeLabels.size'\n    },\n    looks_costumename: {\n        defaultMessage: 'costume name',\n        description: 'Label for the costume name monitor when shown on the stage',\n        id: 'gui.opcodeLabels.costumename'\n    },\n    looks_costumenumber: {\n        defaultMessage: 'costume number',\n        description: 'Label for the costume number monitor when shown on the stage',\n        id: 'gui.opcodeLabels.costumenumber'\n    },\n    looks_backdropname: {\n        defaultMessage: 'backdrop name',\n        description: 'Label for the backdrop name monitor when shown on the stage',\n        id: 'gui.opcodeLabels.backdropname'\n    },\n    looks_backdropnumber: {\n        defaultMessage: 'backdrop number',\n        description: 'Label for the backdrop number monitor when shown on the stage',\n        id: 'gui.opcodeLabels.backdropnumber'\n    },\n\n\n    // Sound\n    sound_volume: {\n        defaultMessage: 'volume',\n        description: 'Label for the volume monitor when shown on the stage',\n        id: 'gui.opcodeLabels.volume'\n    },\n    sound_tempo: {\n        defaultMessage: 'tempo',\n        description: 'Label for the tempo monitor when shown on the stage',\n        id: 'gui.opcodeLabels.tempo'\n    },\n\n    // Sensing\n    sensing_answer: {\n        defaultMessage: 'answer',\n        description: 'Label for the answer monitor when shown on the stage',\n        id: 'gui.opcodeLabels.answer'\n    },\n    sensing_loudness: {\n        defaultMessage: 'loudness',\n        description: 'Label for the loudness monitor when shown on the stage',\n        id: 'gui.opcodeLabels.loudness'\n    },\n    sensing_username: {\n        defaultMessage: 'username',\n        description: 'Label for the username monitor when shown on the stage',\n        id: 'gui.opcodeLabels.username'\n    },\n    sensing_current_year: {\n        defaultMessage: 'year',\n        description: 'Label for the current year monitor when shown on the stage',\n        id: 'gui.opcodeLabels.year'\n    },\n    sensing_current_month: {\n        defaultMessage: 'month',\n        description: 'Label for the current month monitor when shown on the stage.',\n        id: 'gui.opcodeLabels.month'\n    },\n    sensing_current_date: {\n        defaultMessage: 'date',\n        description: 'Label for the current date monitor when shown on the stage. Shows the current day of the month',\n        id: 'gui.opcodeLabels.date'\n    },\n    sensing_current_dayofweek: {\n        defaultMessage: 'day of week',\n        description: 'Label for the current day of week monitor when shown on the stage',\n        id: 'gui.opcodeLabels.dayofweek'\n    },\n    sensing_current_hour: {\n        defaultMessage: 'hour',\n        description: 'Label for the current hour monitor when shown on the stage',\n        id: 'gui.opcodeLabels.hour'\n    },\n    sensing_current_minute: {\n        defaultMessage: 'minute',\n        description: 'Label for the current minute monitor when shown on the stage',\n        id: 'gui.opcodeLabels.minute'\n    },\n    sensing_current_second: {\n        defaultMessage: 'second',\n        description: 'Label for the current second monitor when shown on the stage',\n        id: 'gui.opcodeLabels.second'\n    },\n    sensing_timer: {\n        defaultMessage: 'timer',\n        description: 'Label for the timer monitor when shown on the stage',\n        id: 'gui.opcodeLabels.timer'\n    }\n});\n\nclass OpcodeLabels {\n    constructor () {\n        /**\n         * Translation function for labels. By default just return the defaultMessage\n         * @private\n         * @param {object} message A message object compatible with react-intl formatMessage\n         * @return {string} Return the default string initially\n         */\n        this._translator = message => message.defaultMessage;\n\n        /**\n         * Initial opcode map, with categories defined\n         * @private\n         */\n        this._opcodeMap = {\n            // Motion\n            motion_direction: {category: 'motion'},\n            motion_xposition: {category: 'motion'},\n            motion_yposition: {category: 'motion'},\n\n            // Looks\n            looks_size: {category: 'looks'},\n            looks_costumenumbername: {category: 'looks'},\n            looks_backdropnumbername: {category: 'looks'},\n            looks_backdropname: {category: 'looks'},\n\n            // Data\n            data_variable: {category: 'data'},\n            data_listcontents: {category: 'list'},\n\n            // Sound\n            sound_volume: {category: 'sound'},\n            sound_tempo: {category: 'sound'},\n\n            // Sensing\n            sensing_answer: {category: 'sensing'},\n            sensing_loudness: {category: 'sensing'},\n            sensing_username: {category: 'sensing'},\n            sensing_current: {category: 'sensing'},\n            sensing_timer: {category: 'sensing'}\n        };\n\n        // Initialize opcodeMap with default strings\n        this._refreshOpcodeMap();\n    }\n\n    /**\n     * Set the translation function for monitor labels. The function should accept\n     * a message object as defined by react-intl defineMessages\n     * @param {function} translator the function to use for localization\n     */\n    setTranslatorFunction (translator) {\n        this._translator = translator;\n        this._refreshOpcodeMap();\n    }\n\n    /**\n     * Internal function to update opcode Map when translation function is defined\n     * @private\n     */\n    _refreshOpcodeMap () {\n        // Motion\n        this._opcodeMap.motion_direction.labelFn = () => this._translator(messages.motion_direction);\n        this._opcodeMap.motion_xposition.labelFn = () => this._translator(messages.motion_xposition);\n        this._opcodeMap.motion_yposition.labelFn = () => this._translator(messages.motion_yposition);\n\n        // Looks\n        this._opcodeMap.looks_size.labelFn = () => this._translator(messages.looks_size);\n        this._opcodeMap.looks_costumenumbername.labelFn = params => {\n            if (params.NUMBER_NAME === 'number') {\n                return this._translator(messages.looks_costumenumber);\n            }\n            return this._translator(messages.looks_costumename);\n        };\n        this._opcodeMap.looks_backdropnumbername.labelFn = params => {\n            if (params.NUMBER_NAME === 'number') {\n                return this._translator(messages.looks_backdropnumber);\n            }\n            return this._translator(messages.looks_backdropname);\n        };\n        this._opcodeMap.looks_backdropname.labelFn = () => this._translator(messages.looks_backdropname);\n\n        // Data\n        this._opcodeMap.data_variable.labelFn = params => params.VARIABLE;\n        this._opcodeMap.data_listcontents.labelFn = params => params.LIST;\n\n        // Sound\n        this._opcodeMap.sound_volume.labelFn = () => this._translator(messages.sound_volume);\n        this._opcodeMap.sound_tempo.labelFn = () => this._translator(messages.sound_tempo);\n\n        // Sensing\n        this._opcodeMap.sensing_answer.labelFn = () => this._translator(messages.sensing_answer);\n        this._opcodeMap.sensing_loudness.labelFn = () => this._translator(messages.sensing_loudness);\n        this._opcodeMap.sensing_username.labelFn = () => this._translator(messages.sensing_username);\n        this._opcodeMap.sensing_current.labelFn = params => {\n            switch (params.CURRENTMENU.toLowerCase()) {\n            case 'year':\n                return this._translator(messages.sensing_current_year);\n            case 'month':\n                return this._translator(messages.sensing_current_month);\n            case 'date':\n                return this._translator(messages.sensing_current_date);\n            case 'dayofweek':\n                return this._translator(messages.sensing_current_dayofweek);\n            case 'hour':\n                return this._translator(messages.sensing_current_hour);\n            case 'minute':\n                return this._translator(messages.sensing_current_minute);\n            case 'second':\n                return this._translator(messages.sensing_current_second);\n            }\n        };\n        this._opcodeMap.sensing_timer.labelFn = () => this._translator(messages.sensing_timer);\n    }\n\n    /**\n     * Return the label for an opcode\n     * @param {string} opcode the opcode you want a label for\n     * @return {object} object with  label and category\n     */\n    getLabel (opcode) {\n        if (opcode in this._opcodeMap) return this._opcodeMap[opcode];\n        return {\n            category: 'extension',\n            label: opcode\n        };\n    }\n}\n\nexport default new OpcodeLabels();\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {intlShape, injectIntl} from 'react-intl';\nimport bindAll from 'lodash.bindall';\nimport {connect} from 'react-redux';\n\nimport {setProjectUnchanged} from '../reducers/project-changed';\nimport {\n    LoadingStates,\n    getIsCreatingNew,\n    getIsFetchingWithId,\n    getIsLoading,\n    getIsShowingProject,\n    onFetchedProjectData,\n    projectError,\n    setProjectId\n} from '../reducers/project-state';\nimport {\n    activateTab,\n    BLOCKS_TAB_INDEX\n} from '../reducers/editor-tab';\n\nimport log from './log';\nimport storage from './storage';\n\n/* Higher Order Component to provide behavior for loading projects by id. If\n * there's no id, the default project is loaded.\n * @param {React.Component} WrappedComponent component to receive projectData prop\n * @returns {React.Component} component with project loading behavior\n */\nconst ProjectFetcherHOC = function (WrappedComponent) {\n    class ProjectFetcherComponent extends React.Component {\n        constructor (props) {\n            super(props);\n            bindAll(this, [\n                'fetchProject'\n            ]);\n            storage.setProjectHost(props.projectHost);\n            storage.setProjectToken(props.projectToken);\n            storage.setAssetHost(props.assetHost);\n            storage.setTranslatorFunction(props.intl.formatMessage);\n            // props.projectId might be unset, in which case we use our default;\n            // or it may be set by an even higher HOC, and passed to us.\n            // Either way, we now know what the initial projectId should be, so\n            // set it in the redux store.\n            if (\n                props.projectId !== '' &&\n                props.projectId !== null &&\n                typeof props.projectId !== 'undefined'\n            ) {\n                this.props.setProjectId(props.projectId.toString());\n            }\n        }\n        componentDidUpdate (prevProps) {\n            if (prevProps.projectHost !== this.props.projectHost) {\n                storage.setProjectHost(this.props.projectHost);\n            }\n            if (prevProps.projectToken !== this.props.projectToken) {\n                storage.setProjectToken(this.props.projectToken);\n            }\n            if (prevProps.assetHost !== this.props.assetHost) {\n                storage.setAssetHost(this.props.assetHost);\n            }\n            if (this.props.isFetchingWithId && !prevProps.isFetchingWithId) {\n                this.fetchProject(this.props.reduxProjectId, this.props.loadingState);\n            }\n            if (this.props.isShowingProject && !prevProps.isShowingProject) {\n                this.props.onProjectUnchanged();\n            }\n            if (this.props.isShowingProject && (prevProps.isLoadingProject || prevProps.isCreatingNew)) {\n                this.props.onActivateTab(BLOCKS_TAB_INDEX);\n            }\n        }\n        fetchProject (projectId, loadingState) {\n            return storage\n                .load(storage.AssetType.Project, projectId, storage.DataFormat.JSON)\n                .then(projectAsset => {\n                    if (projectAsset) {\n                        this.props.onFetchedProjectData(projectAsset.data, loadingState);\n                    } else {\n                        // Treat failure to load as an error\n                        // Throw to be caught by catch later on\n                        throw new Error('Could not find project');\n                    }\n                })\n                .catch(err => {\n                    this.props.onError(err);\n                    log.error(err);\n                });\n        }\n        render () {\n            const {\n                /* eslint-disable no-unused-vars */\n                assetHost,\n                intl,\n                isLoadingProject: isLoadingProjectProp,\n                loadingState,\n                onActivateTab,\n                onError: onErrorProp,\n                onFetchedProjectData: onFetchedProjectDataProp,\n                onProjectUnchanged,\n                projectHost,\n                projectId,\n                reduxProjectId,\n                setProjectId: setProjectIdProp,\n                /* eslint-enable no-unused-vars */\n                isFetchingWithId: isFetchingWithIdProp,\n                ...componentProps\n            } = this.props;\n            return (\n                <WrappedComponent\n                    fetchingProject={isFetchingWithIdProp}\n                    {...componentProps}\n                />\n            );\n        }\n    }\n    ProjectFetcherComponent.propTypes = {\n        assetHost: PropTypes.string,\n        canSave: PropTypes.bool,\n        intl: intlShape.isRequired,\n        isCreatingNew: PropTypes.bool,\n        isFetchingWithId: PropTypes.bool,\n        isLoadingProject: PropTypes.bool,\n        isShowingProject: PropTypes.bool,\n        loadingState: PropTypes.oneOf(LoadingStates),\n        onActivateTab: PropTypes.func,\n        onError: PropTypes.func,\n        onFetchedProjectData: PropTypes.func,\n        onProjectUnchanged: PropTypes.func,\n        projectHost: PropTypes.string,\n        projectToken: PropTypes.string,\n        projectId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        reduxProjectId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        setProjectId: PropTypes.func\n    };\n    ProjectFetcherComponent.defaultProps = {\n        assetHost: 'https://assets.scratch.mit.edu',\n        projectHost: 'https://projects.scratch.mit.edu'\n    };\n\n    const mapStateToProps = state => ({\n        isCreatingNew: getIsCreatingNew(state.scratchGui.projectState.loadingState),\n        isFetchingWithId: getIsFetchingWithId(state.scratchGui.projectState.loadingState),\n        isLoadingProject: getIsLoading(state.scratchGui.projectState.loadingState),\n        isShowingProject: getIsShowingProject(state.scratchGui.projectState.loadingState),\n        loadingState: state.scratchGui.projectState.loadingState,\n        reduxProjectId: state.scratchGui.projectState.projectId\n    });\n    const mapDispatchToProps = dispatch => ({\n        onActivateTab: tab => dispatch(activateTab(tab)),\n        onError: error => dispatch(projectError(error)),\n        onFetchedProjectData: (projectData, loadingState) =>\n            dispatch(onFetchedProjectData(projectData, loadingState)),\n        setProjectId: projectId => dispatch(setProjectId(projectId)),\n        onProjectUnchanged: () => dispatch(setProjectUnchanged())\n    });\n    // Allow incoming props to override redux-provided props. Used to mock in tests.\n    const mergeProps = (stateProps, dispatchProps, ownProps) => Object.assign(\n        {}, stateProps, dispatchProps, ownProps\n    );\n    return injectIntl(connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(ProjectFetcherComponent));\n};\n\nexport {\n    ProjectFetcherHOC as default\n};\n","import bindAll from 'lodash.bindall';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport VM from 'scratch-vm';\n\nimport collectMetadata from '../lib/collect-metadata';\nimport log from '../lib/log';\nimport storage from '../lib/storage';\nimport dataURItoBlob from '../lib/data-uri-to-blob';\nimport saveProjectToServer from '../lib/save-project-to-server';\n\nimport {\n    showAlertWithTimeout,\n    showStandardAlert\n} from '../reducers/alerts';\nimport {setAutoSaveTimeoutId} from '../reducers/timeout';\nimport {setProjectUnchanged} from '../reducers/project-changed';\nimport {\n    LoadingStates,\n    autoUpdateProject,\n    createProject,\n    doneCreatingProject,\n    doneUpdatingProject,\n    getIsAnyCreatingNewState,\n    getIsCreatingCopy,\n    getIsCreatingNew,\n    getIsLoading,\n    getIsManualUpdating,\n    getIsRemixing,\n    getIsShowingWithId,\n    getIsShowingWithoutId,\n    getIsUpdating,\n    projectError\n} from '../reducers/project-state';\n\n/**\n * Higher Order Component to provide behavior for saving projects.\n * @param {React.Component} WrappedComponent the component to add project saving functionality to\n * @returns {React.Component} WrappedComponent with project saving functionality added\n *\n * <ProjectSaverHOC>\n *     <WrappedComponent />\n * </ProjectSaverHOC>\n */\nconst ProjectSaverHOC = function (WrappedComponent) {\n    class ProjectSaverComponent extends React.Component {\n        constructor (props) {\n            super(props);\n            bindAll(this, [\n                'getProjectThumbnail',\n                'leavePageConfirm',\n                'tryToAutoSave'\n            ]);\n        }\n        componentWillMount () {\n            if (typeof window === 'object') {\n                // Note: it might be better to use a listener instead of assigning onbeforeunload;\n                // but then it'd be hard to turn this listening off in our tests\n                window.onbeforeunload = e => this.leavePageConfirm(e);\n            }\n\n            // Allow the GUI consumer to pass in a function to receive a trigger\n            // for triggering thumbnail or whole project saves.\n            // These functions are called with null on unmount to prevent stale references.\n            this.props.onSetProjectThumbnailer(this.getProjectThumbnail);\n            this.props.onSetProjectSaver(this.tryToAutoSave);\n        }\n        componentDidUpdate (prevProps) {\n            if (!this.props.isAnyCreatingNewState && prevProps.isAnyCreatingNewState) {\n                this.reportTelemetryEvent('projectWasCreated');\n            }\n            if (!this.props.isLoading && prevProps.isLoading) {\n                this.reportTelemetryEvent('projectDidLoad');\n            }\n\n            if (this.props.projectChanged && !prevProps.projectChanged) {\n                this.scheduleAutoSave();\n            }\n            if (this.props.isUpdating && !prevProps.isUpdating) {\n                this.updateProjectToStorage();\n            }\n            if (this.props.isCreatingNew && !prevProps.isCreatingNew) {\n                this.createNewProjectToStorage();\n            }\n            if (this.props.isCreatingCopy && !prevProps.isCreatingCopy) {\n                this.createCopyToStorage();\n            }\n            if (this.props.isRemixing && !prevProps.isRemixing) {\n                this.props.onRemixing(true);\n                this.createRemixToStorage();\n            } else if (!this.props.isRemixing && prevProps.isRemixing) {\n                this.props.onRemixing(false);\n            }\n\n            // see if we should \"create\" the current project on the server\n            //\n            // don't try to create or save immediately after trying to create\n            if (prevProps.isCreatingNew) return;\n            // if we're newly able to create this project, create it!\n            if (this.isShowingCreatable(this.props) && !this.isShowingCreatable(prevProps)) {\n                this.props.onCreateProject();\n            }\n\n            // see if we should save/update the current project on the server\n            //\n            // don't try to save immediately after trying to save\n            if (prevProps.isUpdating) return;\n            // if we're newly able to save this project, save it!\n            const becameAbleToSave = this.props.canSave && !prevProps.canSave;\n            const becameShared = this.props.isShared && !prevProps.isShared;\n            if (this.props.isShowingSaveable && (becameAbleToSave || becameShared)) {\n                this.props.onAutoUpdateProject();\n            }\n        }\n        componentWillUnmount () {\n            this.clearAutoSaveTimeout();\n            // Cant unset the beforeunload because it might no longer belong to this component\n            // i.e. if another of this component has been mounted before this one gets unmounted\n            // which happens when going from project to editor view.\n            // window.onbeforeunload = undefined; // eslint-disable-line no-undefined\n            // Remove project thumbnailer function since the components are unmounting\n            this.props.onSetProjectThumbnailer(null);\n            this.props.onSetProjectSaver(null);\n        }\n        leavePageConfirm (e) {\n            if (this.props.projectChanged) {\n                // both methods of returning a value may be necessary for browser compatibility\n                (e || window.event).returnValue = true;\n                return true;\n            }\n            return; // Returning undefined prevents the prompt from coming up\n        }\n        clearAutoSaveTimeout () {\n            if (this.props.autoSaveTimeoutId !== null) {\n                clearTimeout(this.props.autoSaveTimeoutId);\n                this.props.setAutoSaveTimeoutId(null);\n            }\n        }\n        scheduleAutoSave () {\n            if (this.props.isShowingSaveable && this.props.autoSaveTimeoutId === null) {\n                const timeoutId = setTimeout(this.tryToAutoSave,\n                    this.props.autoSaveIntervalSecs * 1000);\n                this.props.setAutoSaveTimeoutId(timeoutId);\n            }\n        }\n        tryToAutoSave () {\n            if (this.props.projectChanged && this.props.isShowingSaveable) {\n                this.props.onAutoUpdateProject();\n            }\n        }\n        isShowingCreatable (props) {\n            return props.canCreateNew && props.isShowingWithoutId;\n        }\n        updateProjectToStorage () {\n            this.props.onShowSavingAlert();\n            return this.storeProject(this.props.reduxProjectId)\n                .then(() => {\n                    // there's an http response object available here, but we don't need to examine\n                    // it, because there are no values contained in it that we care about\n                    this.props.onUpdatedProject(this.props.loadingState);\n                    this.props.onShowSaveSuccessAlert();\n                })\n                .catch(err => {\n                    // Always show the savingError alert because it gives the\n                    // user the chance to download or retry the save manually.\n                    this.props.onShowAlert('savingError');\n                    this.props.onProjectError(err);\n                });\n        }\n        createNewProjectToStorage () {\n            return this.storeProject(null)\n                .then(response => {\n                    this.props.onCreatedProject(response.id.toString(), this.props.loadingState);\n                })\n                .catch(err => {\n                    this.props.onShowAlert('creatingError');\n                    this.props.onProjectError(err);\n                });\n        }\n        createCopyToStorage () {\n            this.props.onShowCreatingCopyAlert();\n            return this.storeProject(null, {\n                originalId: this.props.reduxProjectId,\n                isCopy: 1,\n                title: this.props.reduxProjectTitle\n            })\n                .then(response => {\n                    this.props.onCreatedProject(response.id.toString(), this.props.loadingState);\n                    this.props.onShowCopySuccessAlert();\n                })\n                .catch(err => {\n                    this.props.onShowAlert('creatingError');\n                    this.props.onProjectError(err);\n                });\n        }\n        createRemixToStorage () {\n            this.props.onShowCreatingRemixAlert();\n            return this.storeProject(null, {\n                originalId: this.props.reduxProjectId,\n                isRemix: 1,\n                title: this.props.reduxProjectTitle\n            })\n                .then(response => {\n                    this.props.onCreatedProject(response.id.toString(), this.props.loadingState);\n                    this.props.onShowRemixSuccessAlert();\n                })\n                .catch(err => {\n                    this.props.onShowAlert('creatingError');\n                    this.props.onProjectError(err);\n                });\n        }\n        /**\n         * storeProject:\n         * @param  {number|string|undefined} projectId - defined value will PUT/update; undefined/null will POST/create\n         * @return {Promise} - resolves with json object containing project's existing or new id\n         * @param {?object} requestParams - object of params to add to request body\n         */\n        storeProject (projectId, requestParams) {\n            requestParams = requestParams || {};\n            this.clearAutoSaveTimeout();\n            // Serialize VM state now before embarking on\n            // the asynchronous journey of storing assets to\n            // the server. This ensures that assets don't update\n            // while in the process of saving a project (e.g. the\n            // serialized project refers to a newer asset than what\n            // we just finished saving).\n            const savedVMState = this.props.vm.toJSON();\n            return Promise.all(this.props.vm.assets\n                .filter(asset => !asset.clean)\n                .map(\n                    asset => storage.store(\n                        asset.assetType,\n                        asset.dataFormat,\n                        asset.data,\n                        asset.assetId\n                    ).then(response => {\n                        // Asset servers respond with {status: ok} for successful POSTs\n                        if (response.status !== 'ok') {\n                            // Errors include a `code` property, e.g. \"Forbidden\"\n                            return Promise.reject(response.code);\n                        }\n                        asset.clean = true;\n                    })\n                )\n            )\n                .then(() => this.props.onUpdateProjectData(projectId, savedVMState, requestParams))\n                .then(response => {\n                    this.props.onSetProjectUnchanged();\n                    const id = response.id.toString();\n                    if (id && this.props.onUpdateProjectThumbnail) {\n                        this.storeProjectThumbnail(id);\n                    }\n                    this.reportTelemetryEvent('projectDidSave');\n                    return response;\n                })\n                .catch(err => {\n                    log.error(err);\n                    throw err; // pass the error up the chain\n                });\n        }\n\n        /**\n         * Store a snapshot of the project once it has been saved/created.\n         * Needs to happen _after_ save because the project must have an ID.\n         * @param {!string} projectId - id of the project, must be defined.\n         */\n        storeProjectThumbnail (projectId) {\n            try {\n                this.getProjectThumbnail(dataURI => {\n                    this.props.onUpdateProjectThumbnail(projectId, dataURItoBlob(dataURI));\n                });\n            } catch (e) {\n                log.error('Project thumbnail save error', e);\n                // This is intentionally fire/forget because a failure\n                // to save the thumbnail is not vitally important to the user.\n            }\n        }\n\n        getProjectThumbnail (callback) {\n            this.props.vm.postIOData('video', {forceTransparentPreview: true});\n            this.props.vm.renderer.requestSnapshot(dataURI => {\n                this.props.vm.postIOData('video', {forceTransparentPreview: false});\n                callback(dataURI);\n            });\n            this.props.vm.renderer.draw();\n        }\n\n        /**\n         * Report a telemetry event.\n         * @param {string} event - one of `projectWasCreated`, `projectDidLoad`, `projectDidSave`, `projectWasUploaded`\n         */\n        // TODO make a telemetry HOC and move this stuff there\n        reportTelemetryEvent (event) {\n            try {\n                if (this.props.onProjectTelemetryEvent) {\n                    const metadata = collectMetadata(this.props.vm, this.props.reduxProjectTitle, this.props.locale);\n                    this.props.onProjectTelemetryEvent(event, metadata);\n                }\n            } catch (e) {\n                log.error('Telemetry error', event, e);\n                // This is intentionally fire/forget because a failure\n                // to report telemetry should not block saving\n            }\n        }\n\n        render () {\n            const {\n                /* eslint-disable no-unused-vars */\n                autoSaveTimeoutId,\n                autoSaveIntervalSecs,\n                isCreatingCopy,\n                isCreatingNew,\n                projectChanged,\n                isAnyCreatingNewState,\n                isLoading,\n                isManualUpdating,\n                isRemixing,\n                isShowingSaveable,\n                isShowingWithId,\n                isShowingWithoutId,\n                isUpdating,\n                loadingState,\n                onAutoUpdateProject,\n                onCreatedProject,\n                onCreateProject,\n                onProjectError,\n                onRemixing,\n                onSetProjectUnchanged,\n                onSetProjectThumbnailer,\n                onSetProjectSaver,\n                onShowAlert,\n                onShowCopySuccessAlert,\n                onShowRemixSuccessAlert,\n                onShowCreatingCopyAlert,\n                onShowCreatingRemixAlert,\n                onShowSaveSuccessAlert,\n                onShowSavingAlert,\n                onUpdatedProject,\n                onUpdateProjectData,\n                onUpdateProjectThumbnail,\n                reduxProjectId,\n                reduxProjectTitle,\n                setAutoSaveTimeoutId: setAutoSaveTimeoutIdProp,\n                /* eslint-enable no-unused-vars */\n                ...componentProps\n            } = this.props;\n            return (\n                <WrappedComponent\n                    isCreating={isAnyCreatingNewState}\n                    {...componentProps}\n                />\n            );\n        }\n    }\n\n    ProjectSaverComponent.propTypes = {\n        autoSaveIntervalSecs: PropTypes.number.isRequired,\n        autoSaveTimeoutId: PropTypes.number,\n        canCreateNew: PropTypes.bool,\n        canSave: PropTypes.bool,\n        isAnyCreatingNewState: PropTypes.bool,\n        isCreatingCopy: PropTypes.bool,\n        isCreatingNew: PropTypes.bool,\n        isLoading: PropTypes.bool,\n        isManualUpdating: PropTypes.bool,\n        isRemixing: PropTypes.bool,\n        isShared: PropTypes.bool,\n        isShowingSaveable: PropTypes.bool,\n        isShowingWithId: PropTypes.bool,\n        isShowingWithoutId: PropTypes.bool,\n        isUpdating: PropTypes.bool,\n        loadingState: PropTypes.oneOf(LoadingStates),\n        locale: PropTypes.string.isRequired,\n        onAutoUpdateProject: PropTypes.func,\n        onCreateProject: PropTypes.func,\n        onCreatedProject: PropTypes.func,\n        onProjectError: PropTypes.func,\n        onProjectTelemetryEvent: PropTypes.func,\n        onRemixing: PropTypes.func,\n        onSetProjectSaver: PropTypes.func.isRequired,\n        onSetProjectThumbnailer: PropTypes.func.isRequired,\n        onSetProjectUnchanged: PropTypes.func.isRequired,\n        onShowAlert: PropTypes.func,\n        onShowCopySuccessAlert: PropTypes.func,\n        onShowCreatingCopyAlert: PropTypes.func,\n        onShowCreatingRemixAlert: PropTypes.func,\n        onShowRemixSuccessAlert: PropTypes.func,\n        onShowSaveSuccessAlert: PropTypes.func,\n        onShowSavingAlert: PropTypes.func,\n        onUpdateProjectData: PropTypes.func.isRequired,\n        onUpdateProjectThumbnail: PropTypes.func,\n        onUpdatedProject: PropTypes.func,\n        projectChanged: PropTypes.bool,\n        reduxProjectId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        reduxProjectTitle: PropTypes.string,\n        setAutoSaveTimeoutId: PropTypes.func.isRequired,\n        vm: PropTypes.instanceOf(VM).isRequired\n    };\n    ProjectSaverComponent.defaultProps = {\n        autoSaveIntervalSecs: 600, // 10 minutes = 600 seconds\n        onRemixing: () => {},\n        onSetProjectThumbnailer: () => {},\n        onSetProjectSaver: () => {},\n        onUpdateProjectData: saveProjectToServer\n    };\n    const mapStateToProps = (state, ownProps) => {\n        const loadingState = state.scratchGui.projectState.loadingState;\n        const isShowingWithId = getIsShowingWithId(loadingState);\n        return {\n            autoSaveTimeoutId: state.scratchGui.timeout.autoSaveTimeoutId,\n            isAnyCreatingNewState: getIsAnyCreatingNewState(loadingState),\n            isLoading: getIsLoading(loadingState),\n            isCreatingCopy: getIsCreatingCopy(loadingState),\n            isCreatingNew: getIsCreatingNew(loadingState),\n            isRemixing: getIsRemixing(loadingState),\n            isShowingSaveable: ownProps.canSave && isShowingWithId,\n            isShowingWithId: isShowingWithId,\n            isShowingWithoutId: getIsShowingWithoutId(loadingState),\n            isUpdating: getIsUpdating(loadingState),\n            isManualUpdating: getIsManualUpdating(loadingState),\n            loadingState: loadingState,\n            locale: state.locales.locale,\n            projectChanged: state.scratchGui.projectChanged,\n            reduxProjectId: state.scratchGui.projectState.projectId,\n            reduxProjectTitle: state.scratchGui.projectTitle,\n            vm: state.scratchGui.vm\n        };\n    };\n    const mapDispatchToProps = dispatch => ({\n        onAutoUpdateProject: () => dispatch(autoUpdateProject()),\n        onCreatedProject: (projectId, loadingState) => dispatch(doneCreatingProject(projectId, loadingState)),\n        onCreateProject: () => dispatch(createProject()),\n        onProjectError: error => dispatch(projectError(error)),\n        onSetProjectUnchanged: () => dispatch(setProjectUnchanged()),\n        onShowAlert: alertType => dispatch(showStandardAlert(alertType)),\n        onShowCopySuccessAlert: () => showAlertWithTimeout(dispatch, 'createCopySuccess'),\n        onShowRemixSuccessAlert: () => showAlertWithTimeout(dispatch, 'createRemixSuccess'),\n        onShowCreatingCopyAlert: () => showAlertWithTimeout(dispatch, 'creatingCopy'),\n        onShowCreatingRemixAlert: () => showAlertWithTimeout(dispatch, 'creatingRemix'),\n        onShowSaveSuccessAlert: () => showAlertWithTimeout(dispatch, 'saveSuccess'),\n        onShowSavingAlert: () => showAlertWithTimeout(dispatch, 'saving'),\n        onUpdatedProject: loadingState => dispatch(doneUpdatingProject(loadingState)),\n        setAutoSaveTimeoutId: id => dispatch(setAutoSaveTimeoutId(id))\n    });\n    // Allow incoming props to override redux-provided props. Used to mock in tests.\n    const mergeProps = (stateProps, dispatchProps, ownProps) => Object.assign(\n        {}, stateProps, dispatchProps, ownProps\n    );\n    return connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(ProjectSaverComponent);\n};\n\nexport {\n    ProjectSaverHOC as default\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport queryString from 'query-string';\nimport {connect} from 'react-redux';\n\nimport {detectTutorialId} from './tutorial-from-url';\n\nimport {activateDeck} from '../reducers/cards';\nimport {openTipsLibrary} from '../reducers/modals';\n\n/* Higher Order Component to get parameters from the URL query string and initialize redux state\n * @param {React.Component} WrappedComponent: component to render\n * @returns {React.Component} component with query parsing behavior\n */\nconst QueryParserHOC = function (WrappedComponent) {\n    class QueryParserComponent extends React.Component {\n        constructor (props) {\n            super(props);\n            const queryParams = queryString.parse(location.search);\n            const tutorialId = detectTutorialId(queryParams);\n            if (tutorialId) {\n                if (tutorialId === 'all') {\n                    this.openTutorials();\n                } else {\n                    this.setActiveCards(tutorialId);\n                }\n            }\n        }\n        setActiveCards (tutorialId) {\n            this.props.onUpdateReduxDeck(tutorialId);\n        }\n        openTutorials () {\n            this.props.onOpenTipsLibrary();\n        }\n        render () {\n            const {\n                onOpenTipsLibrary, // eslint-disable-line no-unused-vars\n                onUpdateReduxDeck, // eslint-disable-line no-unused-vars\n                ...componentProps\n            } = this.props;\n            return (\n                <WrappedComponent\n                    {...componentProps}\n                />\n            );\n        }\n    }\n    QueryParserComponent.propTypes = {\n        onOpenTipsLibrary: PropTypes.func,\n        onUpdateReduxDeck: PropTypes.func\n    };\n    const mapDispatchToProps = dispatch => ({\n        onOpenTipsLibrary: () => {\n            dispatch(openTipsLibrary());\n        },\n        onUpdateReduxDeck: tutorialId => {\n            dispatch(activateDeck(tutorialId));\n        }\n    });\n    return connect(\n        null,\n        mapDispatchToProps\n    )(QueryParserComponent);\n};\n\nexport {\n    QueryParserHOC as default\n};\n","import queryString from 'query-string';\nimport xhr from 'xhr';\nimport storage from '../lib/storage';\n\n/**\n * Save a project JSON to the project server.\n * This should eventually live in scratch-www.\n * @param {number} projectId the ID of the project, null if a new project.\n * @param {object} vmState the JSON project representation.\n * @param {object} params the request params.\n * @property {?number} params.originalId the original project ID if a copy/remix.\n * @property {?boolean} params.isCopy a flag indicating if this save is creating a copy.\n * @property {?boolean} params.isRemix a flag indicating if this save is creating a remix.\n * @property {?string} params.title the title of the project.\n * @return {Promise} A promise that resolves when the network request resolves.\n */\nexport default function (projectId, vmState, params) {\n    const opts = {\n        body: vmState,\n        // If we set json:true then the body is double-stringified, so don't\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        withCredentials: true\n    };\n    const creatingProject = projectId === null || typeof projectId === 'undefined';\n    const queryParams = {};\n    if (Object.prototype.hasOwnProperty.call(params, 'originalId')) queryParams.original_id = params.originalId;\n    if (Object.prototype.hasOwnProperty.call(params, 'isCopy')) queryParams.is_copy = params.isCopy;\n    if (Object.prototype.hasOwnProperty.call(params, 'isRemix')) queryParams.is_remix = params.isRemix;\n    if (Object.prototype.hasOwnProperty.call(params, 'title')) queryParams.title = params.title;\n    let qs = queryString.stringify(queryParams);\n    if (qs) qs = `?${qs}`;\n    if (creatingProject) {\n        Object.assign(opts, {\n            method: 'post',\n            url: `${storage.projectHost}/${qs}`\n        });\n    } else {\n        Object.assign(opts, {\n            method: 'put',\n            url: `${storage.projectHost}/${projectId}${qs}`\n        });\n    }\n    return new Promise((resolve, reject) => {\n        xhr(opts, (err, response) => {\n            if (err) return reject(err);\n            if (response.statusCode !== 200) return reject(response.statusCode);\n            let body;\n            try {\n                // Since we didn't set json: true, we have to parse manually\n                body = JSON.parse(response.body);\n            } catch (e) {\n                return reject(e);\n            }\n            body.id = projectId;\n            if (creatingProject) {\n                body.id = body['content-name'];\n            }\n            resolve(body);\n        });\n    });\n}\n","import bindAll from 'lodash.bindall';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {defineMessages, intlShape, injectIntl} from 'react-intl';\nimport {connect} from 'react-redux';\nimport log from '../lib/log';\nimport sharedMessages from './shared-messages';\n\nimport {\n    LoadingStates,\n    getIsLoadingUpload,\n    getIsShowingWithoutId,\n    onLoadedProject,\n    requestProjectUpload\n} from '../reducers/project-state';\nimport {setProjectTitle} from '../reducers/project-title';\nimport {\n    openLoadingProject,\n    closeLoadingProject\n} from '../reducers/modals';\nimport {\n    closeFileMenu\n} from '../reducers/menus';\n\nconst messages = defineMessages({\n    loadError: {\n        id: 'gui.projectLoader.loadError',\n        defaultMessage: 'The project file that was selected failed to load.',\n        description: 'An error that displays when a local project file fails to load.'\n    }\n});\n\n/**\n * Higher Order Component to provide behavior for loading local project files into editor.\n * @param {React.Component} WrappedComponent the component to add project file loading functionality to\n * @returns {React.Component} WrappedComponent with project file loading functionality added\n *\n * <SBFileUploaderHOC>\n *     <WrappedComponent />\n * </SBFileUploaderHOC>\n */\nconst SBFileUploaderHOC = function (WrappedComponent) {\n    class SBFileUploaderComponent extends React.Component {\n        constructor (props) {\n            super(props);\n            bindAll(this, [\n                'createFileObjects',\n                'getProjectTitleFromFilename',\n                'handleFinishedLoadingUpload',\n                'handleStartSelectingFileUpload',\n                'handleChange',\n                'onload',\n                'removeFileObjects'\n            ]);\n        }\n        componentDidUpdate (prevProps) {\n            if (this.props.isLoadingUpload && !prevProps.isLoadingUpload) {\n                this.handleFinishedLoadingUpload(); // cue step 5 below\n            }\n        }\n        componentWillUnmount () {\n            this.removeFileObjects();\n        }\n        // step 1: this is where the upload process begins\n        handleStartSelectingFileUpload () {\n            this.createFileObjects(); // go to step 2\n        }\n        // step 2: create a FileReader and an <input> element, and issue a\n        // pseudo-click to it. That will open the file chooser dialog.\n        createFileObjects () {\n            // redo step 7, in case it got skipped last time and its objects are\n            // still in memory\n            this.removeFileObjects();\n            // create fileReader\n            this.fileReader = new FileReader();\n            this.fileReader.onload = this.onload;\n            // create <input> element and add it to DOM\n            this.inputElement = document.createElement('input');\n            this.inputElement.accept = '.sb,.sb2,.sb3';\n            this.inputElement.style = 'display: none;';\n            this.inputElement.type = 'file';\n            this.inputElement.onchange = this.handleChange; // connects to step 3\n            document.body.appendChild(this.inputElement);\n            // simulate a click to open file chooser dialog\n            this.inputElement.click();\n        }\n        // step 3: user has picked a file using the file chooser dialog.\n        // We don't actually load the file here, we only decide whether to do so.\n        handleChange (e) {\n            const {\n                intl,\n                isShowingWithoutId,\n                loadingState,\n                projectChanged,\n                userOwnsProject\n            } = this.props;\n            const thisFileInput = e.target;\n            if (thisFileInput.files) { // Don't attempt to load if no file was selected\n                this.fileToUpload = thisFileInput.files[0];\n\n                // If user owns the project, or user has changed the project,\n                // we must confirm with the user that they really intend to\n                // replace it. (If they don't own the project and haven't\n                // changed it, no need to confirm.)\n                let uploadAllowed = true;\n                if (userOwnsProject || (projectChanged && isShowingWithoutId)) {\n                    uploadAllowed = confirm( // eslint-disable-line no-alert\n                        intl.formatMessage(sharedMessages.replaceProjectWarning)\n                    );\n                }\n                if (uploadAllowed) {\n                    // cues step 4\n                    this.props.requestProjectUpload(loadingState);\n                } else {\n                    // skips ahead to step 7\n                    this.removeFileObjects();\n                }\n                this.props.closeFileMenu();\n            }\n        }\n        // step 4 is below, in mapDispatchToProps\n\n        // step 5: called from componentDidUpdate when project state shows\n        // that project data has finished \"uploading\" into the browser\n        handleFinishedLoadingUpload () {\n            if (this.fileToUpload && this.fileReader) {\n                // begin to read data from the file. When finished,\n                // cues step 6 using the reader's onload callback\n                this.fileReader.readAsArrayBuffer(this.fileToUpload);\n            } else {\n                this.props.cancelFileUpload(this.props.loadingState);\n                // skip ahead to step 7\n                this.removeFileObjects();\n            }\n        }\n        // used in step 6 below\n        getProjectTitleFromFilename (fileInputFilename) {\n            if (!fileInputFilename) return '';\n            // only parse title with valid scratch project extensions\n            // (.sb, .sb2, and .sb3)\n            const matches = fileInputFilename.match(/^(.*)\\.sb[23]?$/);\n            if (!matches) return '';\n            return matches[1].substring(0, 100); // truncate project title to max 100 chars\n        }\n        // step 6: attached as a handler on our FileReader object; called when\n        // file upload raw data is available in the reader\n        onload () {\n            if (this.fileReader) {\n                this.props.onLoadingStarted();\n                const filename = this.fileToUpload && this.fileToUpload.name;\n                let loadingSuccess = false;\n                this.props.vm.loadProject(this.fileReader.result)\n                    .then(() => {\n                        if (filename) {\n                            const uploadedProjectTitle = this.getProjectTitleFromFilename(filename);\n                            this.props.onSetProjectTitle(uploadedProjectTitle);\n                        }\n                        loadingSuccess = true;\n                    })\n                    .catch(error => {\n                        log.warn(error);\n                        alert(this.props.intl.formatMessage(messages.loadError)); // eslint-disable-line no-alert\n                    })\n                    .then(() => {\n                        this.props.onLoadingFinished(this.props.loadingState, loadingSuccess);\n                        // go back to step 7: whether project loading succeeded\n                        // or failed, reset file objects\n                        this.removeFileObjects();\n                    });\n            }\n        }\n        // step 7: remove the <input> element from the DOM and clear reader and\n        // fileToUpload reference, so those objects can be garbage collected\n        removeFileObjects () {\n            if (this.inputElement) {\n                this.inputElement.value = null;\n                document.body.removeChild(this.inputElement);\n            }\n            this.inputElement = null;\n            this.fileReader = null;\n            this.fileToUpload = null;\n        }\n        render () {\n            const {\n                /* eslint-disable no-unused-vars */\n                cancelFileUpload,\n                closeFileMenu: closeFileMenuProp,\n                isLoadingUpload,\n                isShowingWithoutId,\n                loadingState,\n                onLoadingFinished,\n                onLoadingStarted,\n                onSetProjectTitle,\n                projectChanged,\n                requestProjectUpload: requestProjectUploadProp,\n                userOwnsProject,\n                /* eslint-enable no-unused-vars */\n                ...componentProps\n            } = this.props;\n            return (\n                <React.Fragment>\n                    <WrappedComponent\n                        onStartSelectingFileUpload={this.handleStartSelectingFileUpload}\n                        {...componentProps}\n                    />\n                </React.Fragment>\n            );\n        }\n    }\n\n    SBFileUploaderComponent.propTypes = {\n        canSave: PropTypes.bool,\n        cancelFileUpload: PropTypes.func,\n        closeFileMenu: PropTypes.func,\n        intl: intlShape.isRequired,\n        isLoadingUpload: PropTypes.bool,\n        isShowingWithoutId: PropTypes.bool,\n        loadingState: PropTypes.oneOf(LoadingStates),\n        onLoadingFinished: PropTypes.func,\n        onLoadingStarted: PropTypes.func,\n        onSetProjectTitle: PropTypes.func,\n        projectChanged: PropTypes.bool,\n        requestProjectUpload: PropTypes.func,\n        userOwnsProject: PropTypes.bool,\n        vm: PropTypes.shape({\n            loadProject: PropTypes.func\n        })\n    };\n    const mapStateToProps = (state, ownProps) => {\n        const loadingState = state.scratchGui.projectState.loadingState;\n        const user = state.session && state.session.session && state.session.session.user;\n        return {\n            isLoadingUpload: getIsLoadingUpload(loadingState),\n            isShowingWithoutId: getIsShowingWithoutId(loadingState),\n            loadingState: loadingState,\n            projectChanged: state.scratchGui.projectChanged,\n            userOwnsProject: ownProps.authorUsername && user &&\n                (ownProps.authorUsername === user.username),\n            vm: state.scratchGui.vm\n        };\n    };\n    const mapDispatchToProps = (dispatch, ownProps) => ({\n        cancelFileUpload: loadingState => dispatch(onLoadedProject(loadingState, false, false)),\n        closeFileMenu: () => dispatch(closeFileMenu()),\n        // transition project state from loading to regular, and close\n        // loading screen and file menu\n        onLoadingFinished: (loadingState, success) => {\n            dispatch(onLoadedProject(loadingState, ownProps.canSave, success));\n            dispatch(closeLoadingProject());\n            dispatch(closeFileMenu());\n        },\n        // show project loading screen\n        onLoadingStarted: () => dispatch(openLoadingProject()),\n        onSetProjectTitle: title => dispatch(setProjectTitle(title)),\n        // step 4: transition the project state so we're ready to handle the new\n        // project data. When this is done, the project state transition will be\n        // noticed by componentDidUpdate()\n        requestProjectUpload: loadingState => dispatch(requestProjectUpload(loadingState))\n    });\n    // Allow incoming props to override redux-provided props. Used to mock in tests.\n    const mergeProps = (stateProps, dispatchProps, ownProps) => Object.assign(\n        {}, stateProps, dispatchProps, ownProps\n    );\n    return injectIntl(connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(SBFileUploaderComponent));\n};\n\nexport {\n    SBFileUploaderHOC as default\n};\n","import layout, {STAGE_DISPLAY_SCALES, STAGE_SIZE_MODES, STAGE_DISPLAY_SIZES} from '../lib/layout-constants';\n\n/**\n * @typedef {object} StageDimensions\n * @property {int} height - the height to be used for the stage in the current situation.\n * @property {int} width - the width to be used for the stage in the current situation.\n * @property {number} scale - the scale factor from the stage's default size to its current size.\n * @property {int} heightDefault - the height of the stage in its default (large) size.\n * @property {int} widthDefault - the width of the stage in its default (large) size.\n */\n\nconst STAGE_DIMENSION_DEFAULTS = {\n    // referencing css/units.css,\n    // spacingBorderAdjustment = 2 * $full-screen-top-bottom-margin +\n    //   2 * $full-screen-border-width\n    fullScreenSpacingBorderAdjustment: 12,\n    // referencing css/units.css,\n    // menuHeightAdjustment = $stage-menu-height\n    menuHeightAdjustment: 44\n};\n\n/**\n * Resolve the current GUI and browser state to an actual stage size enum value.\n * @param {STAGE_SIZE_MODES} stageSizeMode - the state of the stage size toggle button.\n * @param {boolean} isFullSize - true if the window is large enough for the large stage at its full size.\n * @return {STAGE_DISPLAY_SIZES} - the stage size enum value we should use in this situation.\n */\nconst resolveStageSize = (stageSizeMode, isFullSize) => {\n    if (stageSizeMode === STAGE_SIZE_MODES.small) {\n        return STAGE_DISPLAY_SIZES.small;\n    }\n    if (isFullSize) {\n        return STAGE_DISPLAY_SIZES.large;\n    }\n    return STAGE_DISPLAY_SIZES.largeConstrained;\n};\n\n/**\n * Retrieve info used to determine the actual stage size based on the current GUI and browser state.\n * @param {STAGE_DISPLAY_SIZES} stageSize - the current fully-resolved stage size.\n * @param {boolean} isFullScreen - true if full-screen mode is enabled.\n * @return {StageDimensions} - an object describing the dimensions of the stage.\n */\nconst getStageDimensions = (stageSize, isFullScreen) => {\n    const stageDimensions = {\n        heightDefault: layout.standardStageHeight,\n        widthDefault: layout.standardStageWidth,\n        height: 0,\n        width: 0,\n        scale: 0\n    };\n\n    if (isFullScreen) {\n        stageDimensions.height = window.innerHeight -\n            STAGE_DIMENSION_DEFAULTS.menuHeightAdjustment -\n            STAGE_DIMENSION_DEFAULTS.fullScreenSpacingBorderAdjustment;\n\n        stageDimensions.width = stageDimensions.height + (stageDimensions.height / 3);\n\n        if (stageDimensions.width > window.innerWidth) {\n            stageDimensions.width = window.innerWidth;\n            stageDimensions.height = stageDimensions.width * .75;\n        }\n\n        stageDimensions.scale = stageDimensions.width / stageDimensions.widthDefault;\n    } else {\n        stageDimensions.scale = STAGE_DISPLAY_SCALES[stageSize];\n        stageDimensions.height = stageDimensions.scale * stageDimensions.heightDefault;\n        stageDimensions.width = stageDimensions.scale * stageDimensions.widthDefault;\n    }\n\n    // Round off dimensions to prevent resampling/blurriness\n    stageDimensions.height = Math.round(stageDimensions.height);\n    stageDimensions.width = Math.round(stageDimensions.width);\n\n    return stageDimensions;\n};\n\n/**\n * Take a pair of sizes for the stage (a target height and width and a default height and width),\n * calculate the ratio between them, and return a CSS transform to scale to that ratio.\n * @param {object} sizeInfo An object containing dimensions of the target and default stage sizes.\n * @param {number} sizeInfo.width The target width\n * @param {number} sizeInfo.height The target height\n * @param {number} sizeInfo.widthDefault The default width\n * @param {number} sizeInfo.heightDefault The default height\n * @returns {object} the CSS transform\n */\nconst stageSizeToTransform = ({width, height, widthDefault, heightDefault}) => {\n    const scaleX = width / widthDefault;\n    const scaleY = height / heightDefault;\n    if (scaleX === 1 && scaleY === 1) {\n        // Do not set a transform if the scale is 1 because\n        // it messes up `position: fixed` elements like the context menu.\n        return;\n    }\n    return {transform: `scale(${scaleX},${scaleY})`};\n};\n\nexport {\n    getStageDimensions,\n    resolveStageSize,\n    stageSizeToTransform\n};\n","import {defineMessages} from 'react-intl';\n\nexport default defineMessages({\n    backdrop: {\n        defaultMessage: 'backdrop{index}',\n        description: 'Default name for a new backdrop, scratch will automatically adjust the number if necessary',\n        id: 'gui.sharedMessages.backdrop'\n    },\n    costume: {\n        defaultMessage: 'costume{index}',\n        description: 'Default name for a new costume, scratch will automatically adjust the number if necessary',\n        id: 'gui.sharedMessages.costume'\n    },\n    sprite: {\n        defaultMessage: 'Sprite{index}',\n        description: 'Default name for a new sprite, scratch will automatically adjust the number if necessary',\n        id: 'gui.sharedMessages.sprite'\n    },\n    pop: {\n        defaultMessage: 'pop',\n        description: 'Name of the pop sound, the default sound added to a sprite',\n        id: 'gui.sharedMessages.pop'\n    },\n    replaceProjectWarning: {\n        id: 'gui.sharedMessages.replaceProjectWarning',\n        defaultMessage: 'Replace contents of the current project?',\n        description: 'Confirmation that user wants to overwrite the current project contents'\n    },\n    loadFromComputerTitle: {\n        id: 'gui.sharedMessages.loadFromComputerTitle',\n        defaultMessage: 'Load from your computer',\n        description: 'Title for uploading a project from your computer'\n    }\n});\n","import ScratchStorage from 'scratch-storage';\n\nimport defaultProject from './default-project';\n\n/**\n * Wrapper for ScratchStorage which adds default web sources.\n * @todo make this more configurable\n */\nclass Storage extends ScratchStorage {\n    constructor () {\n        super();\n        this.cacheDefaultProject();\n    }\n    addOfficialScratchWebStores () {\n        this.addWebStore(\n            [this.AssetType.Project],\n            this.getProjectGetConfig.bind(this),\n            this.getProjectCreateConfig.bind(this),\n            this.getProjectUpdateConfig.bind(this)\n        );\n        this.addWebStore(\n            [this.AssetType.ImageVector, this.AssetType.ImageBitmap, this.AssetType.Sound],\n            this.getAssetGetConfig.bind(this),\n            // We set both the create and update configs to the same method because\n            // storage assumes it should update if there is an assetId, but the\n            // asset store uses the assetId as part of the create URI.\n            this.getAssetCreateConfig.bind(this),\n            this.getAssetCreateConfig.bind(this)\n        );\n        this.addWebStore(\n            [this.AssetType.Sound],\n            asset => `static/extension-assets/scratch3_music/${asset.assetId}.${asset.dataFormat}`\n        );\n    }\n    setProjectHost (projectHost) {\n        this.projectHost = projectHost;\n    }\n    setProjectToken (projectToken) {\n        this.projectToken = projectToken;\n    }\n    getProjectGetConfig (projectAsset) {\n        const path = `${this.projectHost}/${projectAsset.assetId}`;\n        const qs = this.projectToken ? `?token=${this.projectToken}` : '';\n        return path + qs;\n    }\n    getProjectCreateConfig () {\n        return {\n            url: `${this.projectHost}/`,\n            withCredentials: true\n        };\n    }\n    getProjectUpdateConfig (projectAsset) {\n        return {\n            url: `${this.projectHost}/${projectAsset.assetId}`,\n            withCredentials: true\n        };\n    }\n    setAssetHost (assetHost) {\n        this.assetHost = assetHost;\n    }\n    getAssetGetConfig (asset) {\n        return `${this.assetHost}/internalapi/asset/${asset.assetId}.${asset.dataFormat}/get/`;\n    }\n    getAssetCreateConfig (asset) {\n        return {\n            // There is no such thing as updating assets, but storage assumes it\n            // should update if there is an assetId, and the asset store uses the\n            // assetId as part of the create URI. So, force the method to POST.\n            // Then when storage finds this config to use for the \"update\", still POSTs\n            method: 'post',\n            url: `${this.assetHost}/${asset.assetId}.${asset.dataFormat}`,\n            withCredentials: true\n        };\n    }\n    setTranslatorFunction (translator) {\n        this.translator = translator;\n        this.cacheDefaultProject();\n    }\n    cacheDefaultProject () {\n        const defaultProjectAssets = defaultProject(this.translator);\n        defaultProjectAssets.forEach(asset => this.builtinHelper._store(\n            this.AssetType[asset.assetType],\n            this.DataFormat[asset.dataFormat],\n            asset.data,\n            asset.id\n        ));\n    }\n}\n\nconst storage = new Storage();\n\nexport default storage;\n","import bowser from 'bowser';\n\nconst minVersions = {\n    chrome: '63',\n    msedge: '15',\n    firefox: '57',\n    safari: '11'\n};\n\n/**\n * Helper function to determine if the browser is supported at all.\n * @returns {boolean} False if the platform is definitely not supported.\n */\nconst supportedBrowser = () => {\n    if (bowser.msie) {\n        return false;\n    }\n    return true;\n};\n\n/**\n * Helper function to determine if the browser meets the minimum recommended version\n * @returns {boolean} False if the browser isn't a recommended browser, or doesn't\n * meet the minimum version for recommended browsers.\n * NOTE: uses strict_mode==true so that any browser not listed in the minVersions\n *   always returns false\n */\n\nconst recommendedBrowser = () =>\n    !bowser.isUnsupportedBrowser(minVersions, true) ||\n    window.navigator.userAgent.toLowerCase().indexOf('googlebot') !== -1;\n\nexport {\n    supportedBrowser as default,\n    recommendedBrowser\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport {setTheme} from '../reducers/theme';\nimport {detectTheme} from './themes/themePersistance';\n\n// Dark mode is not yet supported\n// const prefersDarkQuery = '(prefers-color-scheme: dark)';\nconst prefersHighContrastQuery = '(prefers-contrast: more)';\n\nconst systemPreferencesHOC = function (WrappedComponent) {\n    class SystemPreferences extends React.Component {\n        componentDidMount () {\n            this.preferencesListener = () => this.props.onSetTheme(detectTheme());\n\n            if (window.matchMedia) {\n                this.highContrastMatchMedia = window.matchMedia(prefersHighContrastQuery);\n                if (this.highContrastMatchMedia) {\n                    if (this.highContrastMatchMedia.addEventListener) {\n                        this.highContrastMatchMedia.addEventListener('change', this.preferencesListener);\n                    } else {\n                        this.highContrastMatchMedia.addListener(this.preferencesListener);\n                    }\n                }\n            }\n        }\n\n        componentWillUnmount () {\n            if (this.highContrastMatchMedia) {\n                if (this.highContrastMatchMedia.removeEventListener) {\n                    this.highContrastMatchMedia.removeEventListener('change', this.preferencesListener);\n                } else {\n                    this.highContrastMatchMedia.removeListener(this.preferencesListener);\n                }\n            }\n        }\n\n        render () {\n            const {\n                /* eslint-disable no-unused-vars */\n                onSetTheme,\n                /* eslint-enable no-unused-vars */\n                ...props\n            } = this.props;\n            return <WrappedComponent {...props} />;\n        }\n    }\n\n    SystemPreferences.propTypes = {\n        onSetTheme: PropTypes.func\n    };\n\n    const mapDispatchToProps = dispatch => ({\n        onSetTheme: theme => dispatch(setTheme(theme))\n    });\n\n    return connect(\n        null,\n        mapDispatchToProps\n    )(SystemPreferences);\n};\n\nexport default systemPreferencesHOC;\n","const blockColors = {\n    motion: {\n        primary: '#0F1E33',\n        secondary: '#4C4C4C',\n        tertiary: '#4C97FF',\n        quaternary: '#4C97FF'\n    },\n    looks: {\n        primary: '#1E1433',\n        secondary: '#4C4C4C',\n        tertiary: '#9966FF',\n        quaternary: '#9966FF'\n    },\n    sounds: {\n        primary: '#291329',\n        secondary: '#4C4C4C',\n        tertiary: '#CF63CF',\n        quaternary: '#CF63CF'\n    },\n    control: {\n        primary: '#332205',\n        secondary: '#4C4C4C',\n        tertiary: '#FFAB19',\n        quaternary: '#FFAB19'\n    },\n    event: {\n        primary: '#332600',\n        secondary: '#4C4C4C',\n        tertiary: '#FFBF00',\n        quaternary: '#FFBF00'\n    },\n    sensing: {\n        primary: '#12232A',\n        secondary: '#4C4C4C',\n        tertiary: '#5CB1D6',\n        quaternary: '#5CB1D6'\n    },\n    pen: {\n        primary: '#03251C',\n        secondary: '#4C4C4C',\n        tertiary: '#0fBD8C',\n        quaternary: '#0fBD8C'\n    },\n    operators: {\n        primary: '#112611',\n        secondary: '#4C4C4C',\n        tertiary: '#59C059',\n        quaternary: '#59C059'\n    },\n    data: {\n        primary: '#331C05',\n        secondary: '#4C4C4C',\n        tertiary: '#FF8C1A',\n        quaternary: '#FF8C1A'\n    },\n    data_lists: {\n        primary: '#331405',\n        secondary: '#4C4C4C',\n        tertiary: '#FF661A',\n        quaternary: '#FF661A'\n    },\n    more: {\n        primary: '#331419',\n        secondary: '#4C4C4C',\n        tertiary: '#FF6680',\n        quaternary: '#FF6680'\n    },\n    text: 'rgba(255, 255, 255, .7)',\n    textFieldText: '#E5E5E5',\n    workspace: '#121212',\n    toolboxSelected: '#4C4C4C',\n    toolboxText: '#E5E5E5',\n    toolbox: '#121212',\n    flyout: '#121212',\n    textField: '#4C4C4C',\n    menuHover: 'rgba(255, 255, 255, 0.3)'\n};\n\nconst extensions = {};\n\nexport {\n    blockColors,\n    extensions\n};\n","const blockColors = {\n    motion: {\n        primary: '#4C97FF',\n        secondary: '#4280D7',\n        tertiary: '#3373CC',\n        quaternary: '#3373CC'\n    },\n    looks: {\n        primary: '#9966FF',\n        secondary: '#855CD6',\n        tertiary: '#774DCB',\n        quaternary: '#774DCB'\n    },\n    sounds: {\n        primary: '#CF63CF',\n        secondary: '#C94FC9',\n        tertiary: '#BD42BD',\n        quaternary: '#BD42BD'\n    },\n    control: {\n        primary: '#FFAB19',\n        secondary: '#EC9C13',\n        tertiary: '#CF8B17',\n        quaternary: '#CF8B17'\n    },\n    event: {\n        primary: '#FFBF00',\n        secondary: '#E6AC00',\n        tertiary: '#CC9900',\n        quaternary: '#CC9900'\n    },\n    sensing: {\n        primary: '#5CB1D6',\n        secondary: '#47A8D1',\n        tertiary: '#2E8EB8',\n        quaternary: '#2E8EB8'\n    },\n    pen: {\n        primary: '#0fBD8C',\n        secondary: '#0DA57A',\n        tertiary: '#0B8E69',\n        quaternary: '#0B8E69'\n    },\n    operators: {\n        primary: '#59C059',\n        secondary: '#46B946',\n        tertiary: '#389438',\n        quaternary: '#389438'\n    },\n    data: {\n        primary: '#FF8C1A',\n        secondary: '#FF8000',\n        tertiary: '#DB6E00',\n        quaternary: '#DB6E00'\n    },\n    // This is not a new category, but rather for differentiation\n    // between lists and scalar variables.\n    data_lists: {\n        primary: '#FF661A',\n        secondary: '#FF5500',\n        tertiary: '#E64D00',\n        quaternary: '#E64D00'\n    },\n    more: {\n        primary: '#FF6680',\n        secondary: '#FF4D6A',\n        tertiary: '#FF3355',\n        quaternary: '#FF3355'\n    },\n    text: '#FFFFFF',\n    workspace: '#F9F9F9',\n    toolboxHover: '#4C97FF',\n    toolboxSelected: '#E9EEF2',\n    toolboxText: '#575E75',\n    toolbox: '#FFFFFF',\n    flyout: '#F9F9F9',\n    scrollbar: '#CECDCE',\n    scrollbarHover: '#CECDCE',\n    textField: '#FFFFFF',\n    textFieldText: '#575E75',\n    insertionMarker: '#000000',\n    insertionMarkerOpacity: 0.2,\n    dragShadowOpacity: 0.6,\n    stackGlow: '#FFF200',\n    stackGlowSize: 4,\n    stackGlowOpacity: 1,\n    replacementGlow: '#FFFFFF',\n    replacementGlowSize: 2,\n    replacementGlowOpacity: 1,\n    colourPickerStroke: '#FFFFFF',\n    // CSS colours: support RGBA\n    fieldShadow: 'rgba(255, 255, 255, 0.3)',\n    dropDownShadow: 'rgba(0, 0, 0, .3)',\n    numPadBackground: '#547AB2',\n    numPadBorder: '#435F91',\n    numPadActiveBackground: '#435F91',\n    numPadText: 'white', // Do not use hex here, it cannot be inlined with data-uri SVG\n    valueReportBackground: '#FFFFFF',\n    valueReportBorder: '#AAAAAA',\n    menuHover: 'rgba(0, 0, 0, 0.2)'\n};\n\nexport {\n    blockColors\n};\n","import musicIcon from './extensions/musicIcon.svg';\nimport penIcon from './extensions/penIcon.svg';\nimport text2speechIcon from './extensions/text2speechIcon.svg';\nimport translateIcon from './extensions/translateIcon.svg';\nimport videoSensingIcon from './extensions/videoSensingIcon.svg';\n\nconst blockColors = {\n    motion: {\n        primary: '#80B5FF',\n        secondary: '#B3D2FF',\n        tertiary: '#3373CC',\n        quaternary: '#CCE1FF'\n    },\n    looks: {\n        primary: '#CCB3FF',\n        secondary: '#DDCCFF',\n        tertiary: '#774DCB',\n        quaternary: '#EEE5FF'\n    },\n    sounds: {\n        primary: '#E19DE1',\n        secondary: '#FFB3FF',\n        tertiary: '#BD42BD',\n        quaternary: '#FFCCFF'\n\n    },\n    control: {\n        primary: '#FFBE4C',\n        secondary: '#FFDA99',\n        tertiary: '#CF8B17',\n        quaternary: '#FFE3B3'\n    },\n    event: {\n        primary: '#FFD966',\n        secondary: '#FFECB3',\n        tertiary: '#CC9900',\n        quaternary: '#FFF2CC'\n    },\n    sensing: {\n        primary: '#85C4E0',\n        secondary: '#AED8EA',\n        tertiary: '#2E8EB8',\n        quaternary: '#C2E2F0'\n    },\n    pen: {\n        primary: '#13ECAF',\n        secondary: '#75F0CD',\n        tertiary: '#0B8E69',\n        quaternary: '#A3F5DE'\n    },\n    operators: {\n        primary: '#7ECE7E',\n        secondary: '#B5E3B5',\n        tertiary: '#389438',\n        quaternary: '#DAF1DA'\n    },\n    data: {\n        primary: '#FFA54C',\n        secondary: '#FFCC99',\n        tertiary: '#DB6E00',\n        quaternary: '#FFE5CC'\n    },\n    // This is not a new category, but rather for differentiation\n    // between lists and scalar variables.\n    data_lists: {\n        primary: '#FF9966',\n        secondary: '#FFCAB0', // I don't think this is used, b/c we don't have any droppable fields in list blocks\n        tertiary: '#E64D00',\n        quaternary: '#FFDDCC'\n    },\n    more: {\n        primary: '#FF99AA',\n        secondary: '#FFCCD5',\n        tertiary: '#FF3355',\n        quaternary: '#FFE5EA'\n    },\n    text: '#000000',\n    textFieldText: '#000000', // Text inside of inputs e.g. 90 in [point in direction (90)]\n    toolboxText: '#000000', // Toolbox text, color picker text (used to be #575E75)\n    // The color that the category menu label (e.g. 'motion', 'looks', etc.) changes to on hover\n    toolboxHover: '#3373CC',\n    insertionMarker: '#000000',\n    insertionMarkerOpacity: 0.2,\n    fieldShadow: 'rgba(255, 255, 255, 0.3)',\n    dragShadowOpacity: 0.6,\n    menuHover: 'rgba(255, 255, 255, 0.3)'\n};\n\nconst extensions = {\n    music: {\n        blockIconURI: musicIcon\n    },\n    pen: {\n        blockIconURI: penIcon\n    },\n    text2speech: {\n        blockIconURI: text2speechIcon\n    },\n    translate: {\n        blockIconURI: translateIcon\n    },\n    videoSensing: {\n        blockIconURI: videoSensingIcon\n    }\n};\n\nexport {\n    blockColors,\n    extensions\n};\n","import defaultsDeep from 'lodash.defaultsdeep';\nimport {defineMessages} from 'react-intl';\n\nimport {\n    blockColors as darkModeBlockColors,\n    extensions as darkModeExtensions\n} from './dark';\nimport {\n    blockColors as highContrastBlockColors,\n    extensions as highContrastExtensions\n} from './high-contrast';\nimport {blockColors as defaultColors} from './default';\n\nimport defaultIcon from './default/icon.svg';\nimport highContrastIcon from './high-contrast/icon.svg';\n\nconst DEFAULT_THEME = 'default';\nconst HIGH_CONTRAST_THEME = 'high-contrast';\nconst DARK_THEME = 'dark';\n\nconst mergeWithDefaults = colors => defaultsDeep({}, colors, defaultColors);\n\nconst messages = defineMessages({\n    [DEFAULT_THEME]: {\n        id: 'gui.theme.default',\n        defaultMessage: 'Original',\n        description: 'label for original theme'\n    },\n    [DARK_THEME]: {\n        id: 'gui.theme.dark',\n        defaultMessage: 'Dark',\n        description: 'label for dark mode theme'\n    },\n    [HIGH_CONTRAST_THEME]: {\n        id: 'gui.theme.highContrast',\n        defaultMessage: 'High Contrast',\n        description: 'label for high theme'\n    }\n});\n\nconst themeMap = {\n    [DEFAULT_THEME]: {\n        blocksMediaFolder: 'blocks-media/default',\n        colors: defaultColors,\n        extensions: {},\n        label: messages[DEFAULT_THEME],\n        icon: defaultIcon\n    },\n    [DARK_THEME]: {\n        blocksMediaFolder: 'blocks-media/default',\n        colors: mergeWithDefaults(darkModeBlockColors),\n        extensions: darkModeExtensions,\n        label: messages[DARK_THEME]\n    },\n    [HIGH_CONTRAST_THEME]: {\n        blocksMediaFolder: 'blocks-media/high-contrast',\n        colors: mergeWithDefaults(highContrastBlockColors),\n        extensions: highContrastExtensions,\n        label: messages[HIGH_CONTRAST_THEME],\n        icon: highContrastIcon\n    }\n};\n\nconst getColorsForTheme = theme => {\n    const themeInfo = themeMap[theme];\n\n    if (!themeInfo) {\n        throw new Error(`Undefined theme ${theme}`);\n    }\n\n    return themeInfo.colors;\n};\n\nexport {\n    DEFAULT_THEME,\n    DARK_THEME,\n    HIGH_CONTRAST_THEME,\n    defaultColors,\n    getColorsForTheme,\n    themeMap\n};\n","import cookie from 'cookie';\n\nimport {DEFAULT_THEME, HIGH_CONTRAST_THEME} from '.';\n\nconst PREFERS_HIGH_CONTRAST_QUERY = '(prefers-contrast: more)';\nconst COOKIE_KEY = 'scratchtheme';\n\n// Dark mode isn't enabled yet\nconst isValidTheme = theme => [DEFAULT_THEME, HIGH_CONTRAST_THEME].includes(theme);\n\nconst systemPreferencesTheme = () => {\n    if (window.matchMedia && window.matchMedia(PREFERS_HIGH_CONTRAST_QUERY).matches) return HIGH_CONTRAST_THEME;\n\n    return DEFAULT_THEME;\n};\n\nconst detectTheme = () => {\n    const obj = cookie.parse(document.cookie) || {};\n    const themeCookie = obj.scratchtheme;\n\n    if (isValidTheme(themeCookie)) return themeCookie;\n\n    // No cookie set. Fall back to system preferences\n    return systemPreferencesTheme();\n};\n\nconst persistTheme = theme => {\n    if (!isValidTheme(theme)) {\n        throw new Error(`Invalid theme: ${theme}`);\n    }\n\n    if (systemPreferencesTheme() === theme) {\n        // Clear the cookie to represent using the system preferences\n        document.cookie = `${COOKIE_KEY}=;path=/`;\n        return;\n    }\n\n    const expires = new Date(new Date().setYear(new Date().getFullYear() + 1)).toUTCString();\n    document.cookie = `${COOKIE_KEY}=${theme};expires=${expires};path=/`;\n};\n\nexport {\n    detectTheme,\n    persistTheme\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {defineMessages, injectIntl, intlShape} from 'react-intl';\n\nimport {\n    getIsAnyCreatingNewState,\n    getIsShowingWithoutId\n} from '../reducers/project-state';\nimport {setProjectTitle} from '../reducers/project-title';\n\nconst messages = defineMessages({\n    defaultProjectTitle: {\n        id: 'gui.gui.defaultProjectTitle',\n        description: 'Default title for project',\n        defaultMessage: 'Scratch Project'\n    }\n});\n\n/* Higher Order Component to get and set the project title\n * @param {React.Component} WrappedComponent component to receive project title related props\n * @returns {React.Component} component with project loading behavior\n */\nconst TitledHOC = function (WrappedComponent) {\n    class TitledComponent extends React.Component {\n        componentDidMount () {\n            this.handleReceivedProjectTitle(this.props.projectTitle);\n        }\n        componentDidUpdate (prevProps) {\n            if (this.props.projectTitle !== prevProps.projectTitle) {\n                this.handleReceivedProjectTitle(this.props.projectTitle);\n            }\n            // if project is a new default project, and has loaded,\n            if (this.props.isShowingWithoutId && prevProps.isAnyCreatingNewState) {\n                // reset title to default\n                const defaultProjectTitle = this.handleReceivedProjectTitle();\n                this.props.onUpdateProjectTitle(defaultProjectTitle);\n            }\n            // if the projectTitle hasn't changed, but the reduxProjectTitle\n            // HAS changed, we need to report that change to the projectTitle's owner\n            if (this.props.reduxProjectTitle !== prevProps.reduxProjectTitle &&\n                this.props.reduxProjectTitle !== this.props.projectTitle) {\n                this.props.onUpdateProjectTitle(this.props.reduxProjectTitle);\n            }\n        }\n        handleReceivedProjectTitle (requestedTitle) {\n            let newTitle = requestedTitle;\n            if (newTitle === null || typeof newTitle === 'undefined') {\n                newTitle = this.props.intl.formatMessage(messages.defaultProjectTitle);\n            }\n            this.props.onChangedProjectTitle(newTitle);\n            return newTitle;\n        }\n        render () {\n            const {\n                /* eslint-disable no-unused-vars */\n                intl,\n                isAnyCreatingNewState,\n                isShowingWithoutId,\n                onChangedProjectTitle,\n                // for children, we replace onUpdateProjectTitle with our own\n                onUpdateProjectTitle,\n                // we don't pass projectTitle prop to children -- they must use\n                // redux value\n                projectTitle,\n                reduxProjectTitle,\n                /* eslint-enable no-unused-vars */\n                ...componentProps\n            } = this.props;\n            return (\n                <WrappedComponent\n                    {...componentProps}\n                />\n            );\n        }\n    }\n\n    TitledComponent.propTypes = {\n        intl: intlShape,\n        isAnyCreatingNewState: PropTypes.bool,\n        isShowingWithoutId: PropTypes.bool,\n        onChangedProjectTitle: PropTypes.func,\n        onUpdateProjectTitle: PropTypes.func,\n        projectTitle: PropTypes.string,\n        reduxProjectTitle: PropTypes.string\n    };\n\n    TitledComponent.defaultProps = {\n        onUpdateProjectTitle: () => {}\n    };\n\n    const mapStateToProps = state => {\n        const loadingState = state.scratchGui.projectState.loadingState;\n        return {\n            isAnyCreatingNewState: getIsAnyCreatingNewState(loadingState),\n            isShowingWithoutId: getIsShowingWithoutId(loadingState),\n            reduxProjectTitle: state.scratchGui.projectTitle\n        };\n    };\n\n    const mapDispatchToProps = dispatch => ({\n        onChangedProjectTitle: title => dispatch(setProjectTitle(title))\n    });\n\n    return injectIntl(connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(TitledComponent));\n};\n\nexport {\n    TitledHOC as default\n};\n","const getEventXY = e => {\n    if (e.touches && e.touches[0]) {\n        return {x: e.touches[0].clientX, y: e.touches[0].clientY};\n    } else if (e.changedTouches && e.changedTouches[0]) {\n        return {x: e.changedTouches[0].clientX, y: e.changedTouches[0].clientY};\n    }\n    return {x: e.clientX, y: e.clientY};\n};\n\nexport {\n    getEventXY\n};\n","/**\n * @fileoverview\n * Utility function to detect tutorial id from query paramenter on the URL.\n */\n\nimport tutorials from './libraries/decks/index.jsx';\nimport analytics from './analytics';\n\n/**\n * Get the tutorial id from the given numerical id (representing the\n * url id of the tutorial).\n * @param {number} urlId The URL Id for the tutorial\n * @returns {string} The string id for the tutorial, or null if the URL ID\n * was not found.\n */\nconst getDeckIdFromUrlId = urlId => {\n    for (const deckId in tutorials) {\n        if (tutorials[deckId].urlId === urlId) {\n            analytics.event({\n                category: 'how-to',\n                action: 'load from url',\n                label: `${deckId}`\n            });\n            return deckId;\n        }\n    }\n    return null;\n};\n\n/**\n * Check if there's a tutorial id provided as a query parameter in the URL.\n * Return the corresponding tutorial id or null if not found.\n * @param {object} queryParams the results of parsing the query string\n * @return {string} The ID of the requested tutorial or null if no tutorial was\n * requested or found.\n */\nconst detectTutorialId = queryParams => {\n    const tutorialID = Array.isArray(queryParams.tutorial) ?\n        queryParams.tutorial[0] :\n        queryParams.tutorial;\n    if (typeof tutorialID === 'undefined') return null;\n    if (tutorialID === 'all') return tutorialID;\n    return getDeckIdFromUrlId(tutorialID);\n};\n\nexport {\n    detectTutorialId\n};\n","// Utility functions for updating variables in the VM\n// TODO (VM#1145) these should be moved to top-level VM API\nconst getVariable = (vm, targetId, variableId) => {\n    const target = targetId ?\n        vm.runtime.getTargetById(targetId) :\n        vm.runtime.getTargetForStage();\n    return target.variables[variableId];\n};\n\nconst getVariableValue = (vm, targetId, variableId) => {\n    const variable = getVariable(vm, targetId, variableId);\n    // If array, return a new copy for mutating, ensuring that updates stay immutable.\n    if (variable.value instanceof Array) return variable.value.slice();\n    return variable.value;\n};\n\nconst setVariableValue = (vm, targetId, variableId, value) => {\n    getVariable(vm, targetId, variableId).value = value;\n};\n\nexport {\n    getVariable,\n    getVariableValue,\n    setVariableValue\n};\n","import getUserMedia from 'get-user-media-promise';\n\n// Single Setup For All Video Streams used by the GUI\n// While VideoProvider uses a private _singleSetup\n// property to ensure that each instance of a VideoProvider\n// use the same setup, this ensures that all instances\n// of VideoProviders use a single stream. This way, closing a camera modal\n// does not affect the video on the stage, and a program running and disabling\n// video on the stage will not affect the camera modal's video.\nconst requestStack = [];\nconst requestVideoStream = videoDesc => {\n    let streamPromise;\n    if (requestStack.length === 0) {\n        streamPromise = getUserMedia({\n            audio: false,\n            video: videoDesc\n        });\n        requestStack.push(streamPromise);\n    } else if (requestStack.length > 0) {\n        streamPromise = requestStack[0];\n        requestStack.push(true);\n    }\n    return streamPromise;\n};\n\nconst requestDisableVideo = () => {\n    requestStack.pop();\n    if (requestStack.length > 0) return false;\n    return true;\n};\n\nexport {\n    requestVideoStream,\n    requestDisableVideo\n};\n","import {requestVideoStream, requestDisableVideo} from './camera.js';\nimport log from '../log.js';\n\n/**\n * Video Manager for video extensions.\n */\nclass VideoProvider {\n    constructor () {\n        /**\n         * Default value for mirrored frames.\n         * @type boolean\n         */\n        this.mirror = true;\n\n        /**\n         * Cache frames for this many ms.\n         * @type number\n         */\n        this._frameCacheTimeout = 16;\n\n        /**\n         * DOM Video element\n         * @private\n         */\n        this._video = null;\n\n        /**\n         * Usermedia stream track\n         * @private\n         */\n        this._track = null;\n\n        /**\n         * Stores some canvas/frame data per resolution/mirror states\n         */\n        this._workspace = [];\n    }\n\n    static get FORMAT_IMAGE_DATA () {\n        return 'image-data';\n    }\n\n    static get FORMAT_CANVAS () {\n        return 'canvas';\n    }\n\n    /**\n     * Dimensions the video stream is analyzed at after its rendered to the\n     * sample canvas.\n     * @type {Array.<number>}\n     */\n    static get DIMENSIONS () {\n        return [480, 360];\n    }\n\n    /**\n     * Order preview drawable is inserted at in the renderer.\n     * @type {number}\n     */\n    static get ORDER () {\n        return 1;\n    }\n\n    /**\n     * Get the HTML video element containing the stream\n     */\n    get video () {\n        return this._video;\n    }\n\n    /**\n     * Request video be enabled.  Sets up video, creates video skin and enables preview.\n     *\n     * @return {Promise.<Video>} resolves a promise to this video provider when video is ready.\n     */\n    enableVideo () {\n        this.enabled = true;\n        return this._setupVideo();\n    }\n\n    /**\n     * Disable video stream (turn video off)\n     */\n    disableVideo () {\n        this.enabled = false;\n        // If we have begun a setup process, call _teardown after it completes\n        if (this._singleSetup) {\n            this._singleSetup\n                .then(this._teardown.bind(this))\n                .catch(err => this.onError(err));\n        }\n    }\n\n    /**\n     * async part of disableVideo\n     * @private\n     */\n    _teardown () {\n        // we might be asked to re-enable before _teardown is called, just ignore it.\n        if (this.enabled === false) {\n            const disableTrack = requestDisableVideo();\n            this._singleSetup = null;\n            // by clearing refs to video and track, we should lose our hold over the camera\n            this._video = null;\n            if (this._track && disableTrack) {\n                this._track.stop();\n            }\n            this._track = null;\n        }\n    }\n\n    /**\n     * Return frame data from the video feed in a specified dimensions, format, and mirroring.\n     *\n     * @param {object} frameInfo A descriptor of the frame you would like to receive.\n     * @param {Array.<number>} frameInfo.dimensions [width, height] array of numbers.  Defaults to [480,360]\n     * @param {boolean} frameInfo.mirror If you specificly want a mirror/non-mirror frame, defaults to true\n     * @param {string} frameInfo.format Requested video format, available formats are 'image-data' and 'canvas'.\n     * @param {number} frameInfo.cacheTimeout Will reuse previous image data if the time since capture is less than\n     *                                        the cacheTimeout.  Defaults to 16ms.\n     *\n     * @return {ArrayBuffer|Canvas|string|null} Frame data in requested format, null when errors.\n     */\n    getFrame ({\n        dimensions = VideoProvider.DIMENSIONS,\n        mirror = this.mirror,\n        format = VideoProvider.FORMAT_IMAGE_DATA,\n        cacheTimeout = this._frameCacheTimeout\n    }) {\n        if (!this.videoReady) {\n            return null;\n        }\n        const [width, height] = dimensions;\n        const workspace = this._getWorkspace({dimensions, mirror: Boolean(mirror)});\n        const {videoWidth, videoHeight} = this._video;\n        const {canvas, context, lastUpdate, cacheData} = workspace;\n        const now = Date.now();\n\n        // if the canvas hasn't been updated...\n        if (lastUpdate + cacheTimeout < now) {\n\n            if (mirror) {\n                context.scale(-1, 1);\n                context.translate(width * -1, 0);\n            }\n\n            context.drawImage(this._video,\n                // source x, y, width, height\n                0, 0, videoWidth, videoHeight,\n                // dest x, y, width, height\n                0, 0, width, height\n            );\n\n            // context.resetTransform() doesn't work on Edge but the following should\n            context.setTransform(1, 0, 0, 1, 0, 0);\n            workspace.lastUpdate = now;\n        }\n\n        // each data type has it's own data cache, but the canvas is the same\n        if (!cacheData[format]) {\n            cacheData[format] = {lastUpdate: 0};\n        }\n        const formatCache = cacheData[format];\n\n        if (formatCache.lastUpdate + cacheTimeout < now) {\n            if (format === VideoProvider.FORMAT_IMAGE_DATA) {\n                formatCache.lastData = context.getImageData(0, 0, width, height);\n            } else if (format === VideoProvider.FORMAT_CANVAS) {\n                // this will never change\n                formatCache.lastUpdate = Infinity;\n                formatCache.lastData = canvas;\n            } else {\n                log.error(`video io error - unimplemented format ${format}`);\n                // cache the null result forever, don't log about it again..\n                formatCache.lastUpdate = Infinity;\n                formatCache.lastData = null;\n            }\n\n            // rather than set to now, this data is as stale as it's canvas is\n            formatCache.lastUpdate = Math.max(workspace.lastUpdate, formatCache.lastUpdate);\n        }\n\n        return formatCache.lastData;\n    }\n\n    /**\n     * Method called when an error happens.  Default implementation is just to log error.\n     *\n     * @abstract\n     * @param {Error} error An error object from getUserMedia or other source of error.\n     */\n    onError (error) {\n        log.error('Unhandled video io device error', error);\n    }\n\n    /**\n     * Create a video stream.\n     * @private\n     * @return {Promise} When video has been received, rejected if video is not received\n     */\n    _setupVideo () {\n        // We cache the result of this setup so that we can only ever have a single\n        // video/getUserMedia request happen at a time.\n        if (this._singleSetup) {\n            return this._singleSetup;\n        }\n\n        this._singleSetup = requestVideoStream({\n            width: {min: 480, ideal: 640},\n            height: {min: 360, ideal: 480}\n        })\n            .then(stream => {\n                this._video = document.createElement('video');\n\n                // Use the new srcObject API, falling back to createObjectURL\n                try {\n                    this._video.srcObject = stream;\n                } catch (error) {\n                    this._video.src = window.URL.createObjectURL(stream);\n                }\n                // Hint to the stream that it should load. A standard way to do this\n                // is add the video tag to the DOM. Since this extension wants to\n                // hide the video tag and instead render a sample of the stream into\n                // the webgl rendered Scratch canvas, another hint like this one is\n                // needed.\n                this._video.play(); // Needed for Safari/Firefox, Chrome auto-plays.\n                this._track = stream.getTracks()[0];\n                return this;\n            })\n            .catch(error => {\n                this._singleSetup = null;\n                this.onError(error);\n            });\n\n        return this._singleSetup;\n    }\n\n    get videoReady () {\n        if (!this.enabled) {\n            return false;\n        }\n        if (!this._video) {\n            return false;\n        }\n        if (!this._track) {\n            return false;\n        }\n        const {videoWidth, videoHeight} = this._video;\n        if (typeof videoWidth !== 'number' || typeof videoHeight !== 'number') {\n            return false;\n        }\n        if (videoWidth === 0 || videoHeight === 0) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * get an internal workspace for canvas/context/caches\n     * this uses some document stuff to create a canvas and what not, probably needs abstraction\n     * into the renderer layer?\n     * @private\n     * @return {object} A workspace for canvas/data storage.  Internal format not documented intentionally\n     */\n    _getWorkspace ({dimensions, mirror}) {\n        let workspace = this._workspace.find(space => (\n            space.dimensions.join('-') === dimensions.join('-') &&\n            space.mirror === mirror\n        ));\n        if (!workspace) {\n            workspace = {\n                dimensions,\n                mirror,\n                canvas: document.createElement('canvas'),\n                lastUpdate: 0,\n                cacheData: {}\n            };\n            workspace.canvas.width = dimensions[0];\n            workspace.canvas.height = dimensions[1];\n            workspace.context = workspace.canvas.getContext('2d');\n            this._workspace.push(workspace);\n        }\n        return workspace;\n    }\n}\n\nexport default VideoProvider;\n","import bindAll from 'lodash.bindall';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport VM from 'scratch-vm';\n\nimport {connect} from 'react-redux';\n\nimport {updateTargets} from '../reducers/targets';\nimport {updateBlockDrag} from '../reducers/block-drag';\nimport {updateMonitors} from '../reducers/monitors';\nimport {setProjectChanged, setProjectUnchanged} from '../reducers/project-changed';\nimport {setRunningState, setTurboState, setStartedState} from '../reducers/vm-status';\nimport {showExtensionAlert} from '../reducers/alerts';\nimport {updateMicIndicator} from '../reducers/mic-indicator';\n\n/*\n * Higher Order Component to manage events emitted by the VM\n * @param {React.Component} WrappedComponent component to manage VM events for\n * @returns {React.Component} connected component with vm events bound to redux\n */\nconst vmListenerHOC = function (WrappedComponent) {\n    class VMListener extends React.Component {\n        constructor (props) {\n            super(props);\n            bindAll(this, [\n                'handleKeyDown',\n                'handleKeyUp',\n                'handleProjectChanged',\n                'handleTargetsUpdate'\n            ]);\n            // We have to start listening to the vm here rather than in\n            // componentDidMount because the HOC mounts the wrapped component,\n            // so the HOC componentDidMount triggers after the wrapped component\n            // mounts.\n            // If the wrapped component uses the vm in componentDidMount, then\n            // we need to start listening before mounting the wrapped component.\n            this.props.vm.on('targetsUpdate', this.handleTargetsUpdate);\n            this.props.vm.on('MONITORS_UPDATE', this.props.onMonitorsUpdate);\n            this.props.vm.on('BLOCK_DRAG_UPDATE', this.props.onBlockDragUpdate);\n            this.props.vm.on('TURBO_MODE_ON', this.props.onTurboModeOn);\n            this.props.vm.on('TURBO_MODE_OFF', this.props.onTurboModeOff);\n            this.props.vm.on('PROJECT_RUN_START', this.props.onProjectRunStart);\n            this.props.vm.on('PROJECT_RUN_STOP', this.props.onProjectRunStop);\n            this.props.vm.on('PROJECT_CHANGED', this.handleProjectChanged);\n            this.props.vm.on('RUNTIME_STARTED', this.props.onRuntimeStarted);\n            this.props.vm.on('PROJECT_START', this.props.onGreenFlag);\n            this.props.vm.on('PERIPHERAL_CONNECTION_LOST_ERROR', this.props.onShowExtensionAlert);\n            this.props.vm.on('MIC_LISTENING', this.props.onMicListeningUpdate);\n\n        }\n        componentDidMount () {\n            if (this.props.attachKeyboardEvents) {\n                document.addEventListener('keydown', this.handleKeyDown);\n                document.addEventListener('keyup', this.handleKeyUp);\n            }\n            this.props.vm.postIOData('userData', {username: this.props.username});\n        }\n        componentDidUpdate (prevProps) {\n            if (prevProps.username !== this.props.username) {\n                this.props.vm.postIOData('userData', {username: this.props.username});\n            }\n\n            // Re-request a targets update when the shouldUpdateTargets state changes to true\n            // i.e. when the editor transitions out of fullscreen/player only modes\n            if (this.props.shouldUpdateTargets && !prevProps.shouldUpdateTargets) {\n                this.props.vm.emitTargetsUpdate(false /* Emit the event, but do not trigger project change */);\n            }\n        }\n        componentWillUnmount () {\n            this.props.vm.removeListener('PERIPHERAL_CONNECTION_LOST_ERROR', this.props.onShowExtensionAlert);\n            if (this.props.attachKeyboardEvents) {\n                document.removeEventListener('keydown', this.handleKeyDown);\n                document.removeEventListener('keyup', this.handleKeyUp);\n            }\n        }\n        handleProjectChanged () {\n            if (this.props.shouldUpdateProjectChanged && !this.props.projectChanged) {\n                this.props.onProjectChanged();\n            }\n        }\n        handleTargetsUpdate (data) {\n            if (this.props.shouldUpdateTargets) {\n                this.props.onTargetsUpdate(data);\n            }\n        }\n        handleKeyDown (e) {\n            // Don't capture keys intended for Blockly inputs.\n            if (e.target !== document && e.target !== document.body) return;\n\n            const key = (!e.key || e.key === 'Dead') ? e.keyCode : e.key;\n            this.props.vm.postIOData('keyboard', {\n                key: key,\n                isDown: true\n            });\n\n            // Prevent space/arrow key from scrolling the page.\n            if (e.keyCode === 32 || // 32=space\n                (e.keyCode >= 37 && e.keyCode <= 40)) { // 37, 38, 39, 40 are arrows\n                e.preventDefault();\n            }\n        }\n        handleKeyUp (e) {\n            // Always capture up events,\n            // even those that have switched to other targets.\n            const key = (!e.key || e.key === 'Dead') ? e.keyCode : e.key;\n            this.props.vm.postIOData('keyboard', {\n                key: key,\n                isDown: false\n            });\n\n            // E.g., prevent scroll.\n            if (e.target !== document && e.target !== document.body) {\n                e.preventDefault();\n            }\n        }\n        render () {\n            const {\n                /* eslint-disable no-unused-vars */\n                attachKeyboardEvents,\n                projectChanged,\n                shouldUpdateTargets,\n                shouldUpdateProjectChanged,\n                onBlockDragUpdate,\n                onGreenFlag,\n                onKeyDown,\n                onKeyUp,\n                onMicListeningUpdate,\n                onMonitorsUpdate,\n                onTargetsUpdate,\n                onProjectChanged,\n                onProjectRunStart,\n                onProjectRunStop,\n                onProjectSaved,\n                onRuntimeStarted,\n                onTurboModeOff,\n                onTurboModeOn,\n                onShowExtensionAlert,\n                /* eslint-enable no-unused-vars */\n                ...props\n            } = this.props;\n            return <WrappedComponent {...props} />;\n        }\n    }\n    VMListener.propTypes = {\n        attachKeyboardEvents: PropTypes.bool,\n        onBlockDragUpdate: PropTypes.func.isRequired,\n        onGreenFlag: PropTypes.func,\n        onKeyDown: PropTypes.func,\n        onKeyUp: PropTypes.func,\n        onMicListeningUpdate: PropTypes.func.isRequired,\n        onMonitorsUpdate: PropTypes.func.isRequired,\n        onProjectChanged: PropTypes.func.isRequired,\n        onProjectRunStart: PropTypes.func.isRequired,\n        onProjectRunStop: PropTypes.func.isRequired,\n        onProjectSaved: PropTypes.func.isRequired,\n        onRuntimeStarted: PropTypes.func.isRequired,\n        onShowExtensionAlert: PropTypes.func.isRequired,\n        onTargetsUpdate: PropTypes.func.isRequired,\n        onTurboModeOff: PropTypes.func.isRequired,\n        onTurboModeOn: PropTypes.func.isRequired,\n        projectChanged: PropTypes.bool,\n        shouldUpdateTargets: PropTypes.bool,\n        shouldUpdateProjectChanged: PropTypes.bool,\n        username: PropTypes.string,\n        vm: PropTypes.instanceOf(VM).isRequired\n    };\n    VMListener.defaultProps = {\n        attachKeyboardEvents: true,\n        onGreenFlag: () => ({})\n    };\n    const mapStateToProps = state => ({\n        projectChanged: state.scratchGui.projectChanged,\n        // Do not emit target or project updates in fullscreen or player only mode\n        // or when recording sounds (it leads to garbled recordings on low-power machines)\n        shouldUpdateTargets: !state.scratchGui.mode.isFullScreen && !state.scratchGui.mode.isPlayerOnly &&\n            !state.scratchGui.modals.soundRecorder,\n        // Do not update the projectChanged state in fullscreen or player only mode\n        shouldUpdateProjectChanged: !state.scratchGui.mode.isFullScreen && !state.scratchGui.mode.isPlayerOnly,\n        vm: state.scratchGui.vm,\n        username: state.session && state.session.session && state.session.session.user ?\n            state.session.session.user.username : ''\n    });\n    const mapDispatchToProps = dispatch => ({\n        onTargetsUpdate: data => {\n            dispatch(updateTargets(data.targetList, data.editingTarget));\n        },\n        onMonitorsUpdate: monitorList => {\n            dispatch(updateMonitors(monitorList));\n        },\n        onBlockDragUpdate: areBlocksOverGui => {\n            dispatch(updateBlockDrag(areBlocksOverGui));\n        },\n        onProjectRunStart: () => dispatch(setRunningState(true)),\n        onProjectRunStop: () => dispatch(setRunningState(false)),\n        onProjectChanged: () => dispatch(setProjectChanged()),\n        onProjectSaved: () => dispatch(setProjectUnchanged()),\n        onRuntimeStarted: () => dispatch(setStartedState(true)),\n        onTurboModeOn: () => dispatch(setTurboState(true)),\n        onTurboModeOff: () => dispatch(setTurboState(false)),\n        onShowExtensionAlert: data => {\n            dispatch(showExtensionAlert(data));\n        },\n        onMicListeningUpdate: listening => {\n            dispatch(updateMicIndicator(listening));\n        }\n    });\n    return connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(VMListener);\n};\n\nexport default vmListenerHOC;\n","import bindAll from 'lodash.bindall';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport VM from 'scratch-vm';\nimport AudioEngine from 'scratch-audio';\n\nimport {setProjectUnchanged} from '../reducers/project-changed';\nimport {\n    LoadingStates,\n    getIsLoadingWithId,\n    onLoadedProject,\n    projectError\n} from '../reducers/project-state';\n\n/*\n * Higher Order Component to manage events emitted by the VM\n * @param {React.Component} WrappedComponent component to manage VM events for\n * @returns {React.Component} connected component with vm events bound to redux\n */\nconst vmManagerHOC = function (WrappedComponent) {\n    class VMManager extends React.Component {\n        constructor (props) {\n            super(props);\n            bindAll(this, [\n                'loadProject'\n            ]);\n        }\n        componentDidMount () {\n            if (!this.props.vm.initialized) {\n                this.audioEngine = new AudioEngine();\n                this.props.vm.attachAudioEngine(this.audioEngine);\n                this.props.vm.setCompatibilityMode(true);\n                this.props.vm.initialized = true;\n                this.props.vm.setLocale(this.props.locale, this.props.messages);\n            }\n            if (!this.props.isPlayerOnly && !this.props.isStarted) {\n                this.props.vm.start();\n            }\n        }\n        componentDidUpdate (prevProps) {\n            // if project is in loading state, AND fonts are loaded,\n            // and they weren't both that way until now... load project!\n            if (this.props.isLoadingWithId && this.props.fontsLoaded &&\n                (!prevProps.isLoadingWithId || !prevProps.fontsLoaded)) {\n                this.loadProject();\n            }\n            // Start the VM if entering editor mode with an unstarted vm\n            if (!this.props.isPlayerOnly && !this.props.isStarted) {\n                this.props.vm.start();\n            }\n        }\n        loadProject () {\n            return this.props.vm.loadProject(this.props.projectData)\n                .then(() => {\n                    this.props.onLoadedProject(this.props.loadingState, this.props.canSave);\n                    // Wrap in a setTimeout because skin loading in\n                    // the renderer can be async.\n                    setTimeout(() => this.props.onSetProjectUnchanged());\n\n                    // If the vm is not running, call draw on the renderer manually\n                    // This draws the state of the loaded project with no blocks running\n                    // which closely matches the 2.0 behavior, except for monitors–\n                    // 2.0 runs monitors and shows updates (e.g. timer monitor)\n                    // before the VM starts running other hat blocks.\n                    if (!this.props.isStarted) {\n                        // Wrap in a setTimeout because skin loading in\n                        // the renderer can be async.\n                        setTimeout(() => this.props.vm.renderer.draw());\n                    }\n                })\n                .catch(e => {\n                    this.props.onError(e);\n                });\n        }\n        render () {\n            const {\n                /* eslint-disable no-unused-vars */\n                fontsLoaded,\n                loadingState,\n                locale,\n                messages,\n                isStarted,\n                onError: onErrorProp,\n                onLoadedProject: onLoadedProjectProp,\n                onSetProjectUnchanged,\n                projectData,\n                /* eslint-enable no-unused-vars */\n                isLoadingWithId: isLoadingWithIdProp,\n                vm,\n                ...componentProps\n            } = this.props;\n            return (\n                <WrappedComponent\n                    isLoading={isLoadingWithIdProp}\n                    vm={vm}\n                    {...componentProps}\n                />\n            );\n        }\n    }\n\n    VMManager.propTypes = {\n        canSave: PropTypes.bool,\n        cloudHost: PropTypes.string,\n        fontsLoaded: PropTypes.bool,\n        isLoadingWithId: PropTypes.bool,\n        isPlayerOnly: PropTypes.bool,\n        isStarted: PropTypes.bool,\n        loadingState: PropTypes.oneOf(LoadingStates),\n        locale: PropTypes.string,\n        messages: PropTypes.objectOf(PropTypes.string),\n        onError: PropTypes.func,\n        onLoadedProject: PropTypes.func,\n        onSetProjectUnchanged: PropTypes.func,\n        projectData: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n        projectId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        username: PropTypes.string,\n        vm: PropTypes.instanceOf(VM).isRequired\n    };\n\n    const mapStateToProps = state => {\n        const loadingState = state.scratchGui.projectState.loadingState;\n        return {\n            fontsLoaded: state.scratchGui.fontsLoaded,\n            isLoadingWithId: getIsLoadingWithId(loadingState),\n            locale: state.locales.locale,\n            messages: state.locales.messages,\n            projectData: state.scratchGui.projectState.projectData,\n            projectId: state.scratchGui.projectState.projectId,\n            loadingState: loadingState,\n            isPlayerOnly: state.scratchGui.mode.isPlayerOnly,\n            isStarted: state.scratchGui.vmStatus.started\n        };\n    };\n\n    const mapDispatchToProps = dispatch => ({\n        onError: error => dispatch(projectError(error)),\n        onLoadedProject: (loadingState, canSave) =>\n            dispatch(onLoadedProject(loadingState, canSave, true)),\n        onSetProjectUnchanged: () => dispatch(setProjectUnchanged())\n    });\n\n    // Allow incoming props to override redux-provided props. Used to mock in tests.\n    const mergeProps = (stateProps, dispatchProps, ownProps) => Object.assign(\n        {}, stateProps, dispatchProps, ownProps\n    );\n\n    return connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(VMManager);\n};\n\nexport default vmManagerHOC;\n","import alertsData, {AlertTypes, AlertLevels} from '../lib/alerts/index.jsx';\nimport extensionData from '../lib/libraries/extensions/index.jsx';\n\nconst SHOW_ALERT = 'scratch-gui/alerts/SHOW_ALERT';\nconst SHOW_EXTENSION_ALERT = 'scratch-gui/alerts/SHOW_EXTENSION_ALERT';\nconst CLOSE_ALERT = 'scratch-gui/alerts/CLOSE_ALERT';\nconst CLOSE_ALERTS_WITH_ID = 'scratch-gui/alerts/CLOSE_ALERTS_WITH_ID';\nconst CLOSE_ALERT_WITH_ID = 'scratch-gui/alerts/CLOSE_ALERT_WITH_ID';\n\n/**\n * Initial state of alerts reducer\n *\n * {bool} visible - whether the alerts are visible\n * {array} alertsList - list of alerts, each with properties:\n *  * alertType (required): one of AlertTypes\n *  * closeButton (optional): bool indicating that we should show close button\n *  * content (optional): react element (a <FormattedMessage />)\n *  * extentionId (optional): id string that identifies the extension\n *  * iconURL (optional): string\n *  * level (required): string, one of AlertLevels\n *  * message (optional): string\n *  * showReconnect (optional): bool\n */\nconst initialState = {\n    visible: true,\n    alertsList: []\n};\n\nconst filterPopupAlerts = alertsList => (\n    alertsList.filter(curAlert => (\n        curAlert.alertType === AlertTypes.STANDARD ||\n        curAlert.alertType === AlertTypes.EXTENSION\n    ))\n);\n\nconst filterInlineAlerts = alertsList => (\n    alertsList.filter(curAlert => (\n        curAlert.alertType === AlertTypes.INLINE\n    ))\n);\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case SHOW_ALERT: { // intended to show standard and inline alerts, but not extensions\n        const alertId = action.alertId;\n        if (alertId) {\n            const newAlert = {\n                alertId: alertId,\n                level: AlertLevels.WARN // default level\n            };\n            const alertData = alertsData.find(thisAlertData => thisAlertData.alertId === alertId);\n            if (alertData) {\n                const newList = state.alertsList.filter(curAlert => (\n                    !alertData.clearList || alertData.clearList.indexOf(curAlert.alertId) === -1\n                ));\n                if (action.data && action.data.message) {\n                    newAlert.message = action.data.message;\n                }\n\n                newAlert.alertType = alertData.alertType || AlertTypes.STANDARD;\n                newAlert.closeButton = alertData.closeButton;\n                newAlert.content = alertData.content;\n                newAlert.iconURL = alertData.iconURL;\n                newAlert.iconSpinner = alertData.iconSpinner;\n                newAlert.level = alertData.level;\n                newAlert.showDownload = alertData.showDownload;\n                newAlert.showSaveNow = alertData.showSaveNow;\n\n                newList.push(newAlert);\n                return Object.assign({}, state, {\n                    alertsList: newList\n                });\n            }\n        }\n        return state; // if alert not found, show nothing\n    }\n    case SHOW_EXTENSION_ALERT: {\n        const extensionId = action.data.extensionId;\n        if (extensionId) {\n            const extension = extensionData.find(ext => ext.extensionId === extensionId);\n            if (extension) {\n                const newList = state.alertsList.slice();\n                const newAlert = {\n                    alertType: AlertTypes.EXTENSION,\n                    closeButton: true,\n                    extensionId: extensionId,\n                    extensionName: extension.name,\n                    iconURL: extension.connectionSmallIconURL,\n                    level: AlertLevels.WARN,\n                    showReconnect: true\n                };\n                newList.push(newAlert);\n\n                return Object.assign({}, state, {\n                    alertsList: newList\n                });\n            }\n        }\n        return state; // if alert not found, show nothing\n    }\n    case CLOSE_ALERT_WITH_ID:\n    case CLOSE_ALERT: {\n        if (action.alertId) {\n            action.index = state.alertsList.findIndex(a => a.alertId === action.alertId);\n            if (action.index === -1) return state;\n        }\n        const newList = state.alertsList.slice();\n        newList.splice(action.index, 1);\n        return Object.assign({}, state, {\n            alertsList: newList\n        });\n    }\n    case CLOSE_ALERTS_WITH_ID: {\n        return Object.assign({}, state, {\n            alertsList: state.alertsList.filter(curAlert => (\n                curAlert.alertId !== action.alertId\n            ))\n        });\n    }\n    default:\n        return state;\n    }\n};\n\n/**\n * Action creator to close an alert with the given index.\n *\n * @param {object} index - the index of the alert to close.\n * @return {object} - an object to be passed to the reducer.\n */\nconst closeAlert = function (index) {\n    return {\n        type: CLOSE_ALERT,\n        index\n    };\n};\n\n/**\n * Action creator to close all alerts with a given ID.\n *\n * @param {string} alertId - id string of the alert to close\n * @return {object} - an object to be passed to the reducer.\n */\nconst closeAlertsWithId = function (alertId) {\n    return {\n        type: CLOSE_ALERTS_WITH_ID,\n        alertId\n    };\n};\n\n/**\n * Action creator to close a single alert with a given ID.\n *\n * @param {string} alertId - id string of the alert to close\n * @return {object} - an object to be passed to the reducer.\n */\nconst closeAlertWithId = function (alertId) {\n    return {\n        type: CLOSE_ALERT_WITH_ID,\n        alertId\n    };\n};\n\n/**\n * Action creator to show an alert with the given alertId.\n *\n * @param {string} alertId - id string of the alert to show\n * @return {object} - an object to be passed to the reducer.\n */\nconst showStandardAlert = function (alertId) {\n    return {\n        type: SHOW_ALERT,\n        alertId\n    };\n};\n\n/**\n * Action creator to show an alert with the given input data.\n *\n * @param {object} data - data for the alert\n * @param {string} data.message - message for the alert\n * @param {string} data.extensionId - extension ID for the alert\n * @return {object} - an object to be passed to the reducer.\n */\nconst showExtensionAlert = function (data) {\n    return {\n        type: SHOW_EXTENSION_ALERT,\n        data\n    };\n};\n\n/**\n * Function to dispatch showing an alert, with optional\n * timeout to make it close/go away.\n *\n * @param {object} dispatch - dispatch function\n * @param {string} alertId - the ID of the alert\n */\nconst showAlertWithTimeout = function (dispatch, alertId) {\n    const alertData = alertsData.find(thisAlertData => thisAlertData.alertId === alertId);\n    if (alertData) {\n        dispatch(showStandardAlert(alertId));\n        if (alertData.maxDisplaySecs) {\n            setTimeout(() => {\n                dispatch(closeAlertsWithId(alertId));\n            }, alertData.maxDisplaySecs * 1000);\n        }\n    }\n};\n\nexport {\n    reducer as default,\n    initialState as alertsInitialState,\n    closeAlert,\n    closeAlertWithId,\n    filterInlineAlerts,\n    filterPopupAlerts,\n    showAlertWithTimeout,\n    showExtensionAlert,\n    showStandardAlert\n};\n","const DRAG_UPDATE = 'scratch-gui/asset-drag/DRAG_UPDATE';\n\nconst initialState = {\n    dragging: false,\n    currentOffset: null,\n    img: null\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n\n    switch (action.type) {\n    case DRAG_UPDATE:\n        return Object.assign({}, state, action.state);\n    default:\n        return state;\n    }\n};\n\nconst updateAssetDrag = function (state) {\n    return {\n        type: DRAG_UPDATE,\n        state: state\n    };\n};\n\nexport {\n    reducer as default,\n    initialState as assetDragInitialState,\n    updateAssetDrag\n};\n","const BLOCK_DRAG_UPDATE = 'scratch-gui/block-drag/BLOCK_DRAG_UPDATE';\n\nconst initialState = false;\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case BLOCK_DRAG_UPDATE:\n        return action.areBlocksOverGui;\n    default:\n        return state;\n    }\n};\n\nconst updateBlockDrag = function (areBlocksOverGui) {\n    return {\n        type: BLOCK_DRAG_UPDATE,\n        areBlocksOverGui: areBlocksOverGui,\n        meta: {\n            throttle: 30\n        }\n    };\n};\n\nexport {\n    reducer as default,\n    initialState as blockDragInitialState,\n    updateBlockDrag\n};\n","import analytics from '../lib/analytics';\n\nimport decks from '../lib/libraries/decks/index.jsx';\n\nconst CLOSE_CARDS = 'scratch-gui/cards/CLOSE_CARDS';\nconst SHRINK_EXPAND_CARDS = 'scratch-gui/cards/SHRINK_EXPAND_CARDS';\nconst VIEW_CARDS = 'scratch-gui/cards/VIEW_CARDS';\nconst ACTIVATE_DECK = 'scratch-gui/cards/ACTIVATE_DECK';\nconst NEXT_STEP = 'scratch-gui/cards/NEXT_STEP';\nconst PREV_STEP = 'scratch-gui/cards/PREV_STEP';\nconst DRAG_CARD = 'scratch-gui/cards/DRAG_CARD';\nconst START_DRAG = 'scratch-gui/cards/START_DRAG';\nconst END_DRAG = 'scratch-gui/cards/END_DRAG';\n\nconst initialState = {\n    visible: false,\n    content: decks,\n    activeDeckId: null,\n    step: 0,\n    x: 0,\n    y: 0,\n    expanded: true,\n    dragging: false\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case CLOSE_CARDS:\n        return Object.assign({}, state, {\n            visible: false\n        });\n    case SHRINK_EXPAND_CARDS:\n        return Object.assign({}, state, {\n            expanded: !state.expanded\n        });\n    case VIEW_CARDS:\n        return Object.assign({}, state, {\n            visible: true\n        });\n    case ACTIVATE_DECK:\n        return Object.assign({}, state, {\n            activeDeckId: action.activeDeckId,\n            step: 0,\n            x: 0,\n            y: 0,\n            expanded: true,\n            visible: true\n        });\n    case NEXT_STEP:\n        if (state.activeDeckId !== null) {\n            analytics.event({\n                category: 'how-to',\n                action: 'next step',\n                label: `${state.activeDeckId} - ${state.step}`\n            });\n            return Object.assign({}, state, {\n                step: state.step + 1\n            });\n        }\n        return state;\n    case PREV_STEP:\n        if (state.activeDeckId !== null) {\n            if (state.step > 0) {\n                return Object.assign({}, state, {\n                    step: state.step - 1\n                });\n            }\n        }\n        return state;\n    case DRAG_CARD:\n        return Object.assign({}, state, {\n            x: action.x,\n            y: action.y\n        });\n    case START_DRAG:\n        return Object.assign({}, state, {\n            dragging: true\n        });\n    case END_DRAG:\n        return Object.assign({}, state, {\n            dragging: false\n        });\n    default:\n        return state;\n    }\n};\n\nconst activateDeck = function (activeDeckId) {\n    return {\n        type: ACTIVATE_DECK,\n        activeDeckId\n    };\n};\n\nconst viewCards = function () {\n    return {type: VIEW_CARDS};\n};\n\nconst closeCards = function () {\n    return {type: CLOSE_CARDS};\n};\n\nconst shrinkExpandCards = function () {\n    return {type: SHRINK_EXPAND_CARDS};\n};\n\nconst nextStep = function () {\n    return {type: NEXT_STEP};\n};\n\nconst prevStep = function () {\n    return {type: PREV_STEP};\n};\n\nconst dragCard = function (x, y) {\n    return {type: DRAG_CARD, x, y};\n};\n\nconst startDrag = function () {\n    return {type: START_DRAG};\n};\n\nconst endDrag = function () {\n    return {type: END_DRAG};\n};\n\nexport {\n    reducer as default,\n    initialState as cardsInitialState,\n    activateDeck,\n    viewCards,\n    closeCards,\n    shrinkExpandCards,\n    nextStep,\n    prevStep,\n    dragCard,\n    startDrag,\n    endDrag\n};\n","const ACTIVATE_COLOR_PICKER = 'scratch-gui/color-picker/ACTIVATE_COLOR_PICKER';\nconst DEACTIVATE_COLOR_PICKER = 'scratch-gui/color-picker/DEACTIVATE_COLOR_PICKER';\nconst SET_CALLBACK = 'scratch-gui/color-picker/SET_CALLBACK';\n\nconst initialState = {\n    active: false,\n    callback: () => {\n        throw new Error('Color picker callback not initialized');\n    }\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case ACTIVATE_COLOR_PICKER:\n        return Object.assign({}, state, {active: true, callback: action.callback});\n    case DEACTIVATE_COLOR_PICKER:\n        // Can be called without a string to deactivate without setting color\n        // i.e. when clicking on the modal background\n        if (typeof action.color === 'string') {\n            state.callback(action.color);\n        }\n        return Object.assign({}, state, {active: false});\n    case SET_CALLBACK:\n        return Object.assign({}, state, {callback: action.callback});\n    default:\n        return state;\n    }\n};\n\nconst activateColorPicker = callback => ({type: ACTIVATE_COLOR_PICKER, callback: callback});\nconst deactivateColorPicker = color => ({type: DEACTIVATE_COLOR_PICKER, color: color});\nconst setCallback = callback => ({type: SET_CALLBACK, callback: callback});\n\nexport {\n    reducer as default,\n    initialState as colorPickerInitialState,\n    activateColorPicker,\n    deactivateColorPicker,\n    setCallback\n};\n","const SET_ID = 'scratch-gui/connection-modal/setId';\n\nconst initialState = {\n    extensionId: null\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case SET_ID:\n        return Object.assign({}, state, {\n            extensionId: action.extensionId\n        });\n    default:\n        return state;\n    }\n};\n\nconst setConnectionModalExtensionId = function (extensionId) {\n    return {\n        type: SET_ID,\n        extensionId: extensionId\n    };\n};\n\nexport {\n    reducer as default,\n    initialState as connectionModalInitialState,\n    setConnectionModalExtensionId\n};\n","const ACTIVATE_CUSTOM_PROCEDURES = 'scratch-gui/custom-procedures/ACTIVATE_CUSTOM_PROCEDURES';\nconst DEACTIVATE_CUSTOM_PROCEDURES = 'scratch-gui/custom-procedures/DEACTIVATE_CUSTOM_PROCEDURES';\nconst SET_CALLBACK = 'scratch-gui/custom-procedures/SET_CALLBACK';\n\nconst initialState = {\n    active: false,\n    mutator: null,\n    callback: null\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case ACTIVATE_CUSTOM_PROCEDURES:\n        return Object.assign({}, state, {\n            active: true,\n            mutator: action.mutator,\n            callback: action.callback\n        });\n    case DEACTIVATE_CUSTOM_PROCEDURES:\n        // Can be called without a mutator to deactivate without new procedure\n        // i.e. when clicking on the modal background\n        if (action.mutator) {\n            state.callback(action.mutator);\n        }\n        return Object.assign({}, state, {\n            active: false,\n            mutator: null,\n            callback: null\n        });\n    case SET_CALLBACK:\n        return Object.assign({}, state, {callback: action.callback});\n    default:\n        return state;\n    }\n};\n\n/**\n * Action creator to open the custom procedures modal.\n * @param {!Element} mutator The XML node of the mutator for the procedure.\n * @param {!function(!Element)} callback The function to call when done editing procedure.\n *     Expect the callback to be a function that takes a new XML mutator node.\n * @returns {object} An action object with type ACTIVATE_CUSTOM_PROCEDURES.\n */\nconst activateCustomProcedures = (mutator, callback) => ({\n    type: ACTIVATE_CUSTOM_PROCEDURES,\n    mutator: mutator,\n    callback: callback\n});\n\n/**\n * Action creator to close the custom procedures modal.\n * @param {?Element} mutator The new mutator, or null if the callback should not be called.\n * @returns {object} An action object with type ACTIVATE_CUSTOM_PROCEDURES.\n */\nconst deactivateCustomProcedures = mutator => ({\n    type: DEACTIVATE_CUSTOM_PROCEDURES,\n    mutator: mutator\n});\n\nexport {\n    reducer as default,\n    initialState as customProceduresInitialState,\n    activateCustomProcedures,\n    deactivateCustomProcedures\n};\n","const ACTIVATE_TAB = 'scratch-gui/navigation/ACTIVATE_TAB';\n\n// Constants use numbers to make it easier to work with react-tabs\nconst BLOCKS_TAB_INDEX = 0;\nconst COSTUMES_TAB_INDEX = 1;\nconst SOUNDS_TAB_INDEX = 2;\n\nconst initialState = {\n    activeTabIndex: BLOCKS_TAB_INDEX\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case ACTIVATE_TAB:\n        return Object.assign({}, state, {\n            activeTabIndex: action.activeTabIndex\n        });\n    default:\n        return state;\n    }\n};\n\nconst activateTab = function (tab) {\n    return {\n        type: ACTIVATE_TAB,\n        activeTabIndex: tab\n    };\n};\n\nexport {\n    reducer as default,\n    initialState as editorTabInitialState,\n    activateTab,\n    BLOCKS_TAB_INDEX,\n    COSTUMES_TAB_INDEX,\n    SOUNDS_TAB_INDEX\n};\n","const SET_FONTS_LOADED = 'fontsLoaded/SET_FONTS_LOADED';\n\nconst initialState = false;\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case SET_FONTS_LOADED:\n        return action.loaded;\n    default:\n        return state;\n    }\n};\nconst setFontsLoaded = () => ({\n    type: SET_FONTS_LOADED,\n    loaded: true\n});\n\nexport {\n    reducer as default,\n    initialState as fontsLoadedInitialState,\n    setFontsLoaded\n};\n","import {applyMiddleware, compose, combineReducers} from 'redux';\nimport alertsReducer, {alertsInitialState} from './alerts';\nimport assetDragReducer, {assetDragInitialState} from './asset-drag';\nimport cardsReducer, {cardsInitialState} from './cards';\nimport colorPickerReducer, {colorPickerInitialState} from './color-picker';\nimport connectionModalReducer, {connectionModalInitialState} from './connection-modal';\nimport customProceduresReducer, {customProceduresInitialState} from './custom-procedures';\nimport blockDragReducer, {blockDragInitialState} from './block-drag';\nimport editorTabReducer, {editorTabInitialState} from './editor-tab';\nimport hoveredTargetReducer, {hoveredTargetInitialState} from './hovered-target';\nimport menuReducer, {menuInitialState} from './menus';\nimport micIndicatorReducer, {micIndicatorInitialState} from './mic-indicator';\nimport modalReducer, {modalsInitialState} from './modals';\nimport modeReducer, {modeInitialState} from './mode';\nimport monitorReducer, {monitorsInitialState} from './monitors';\nimport monitorLayoutReducer, {monitorLayoutInitialState} from './monitor-layout';\nimport projectChangedReducer, {projectChangedInitialState} from './project-changed';\nimport projectStateReducer, {projectStateInitialState} from './project-state';\nimport projectTitleReducer, {projectTitleInitialState} from './project-title';\nimport fontsLoadedReducer, {fontsLoadedInitialState} from './fonts-loaded';\nimport restoreDeletionReducer, {restoreDeletionInitialState} from './restore-deletion';\nimport stageSizeReducer, {stageSizeInitialState} from './stage-size';\nimport targetReducer, {targetsInitialState} from './targets';\nimport themeReducer, {themeInitialState} from './theme';\nimport timeoutReducer, {timeoutInitialState} from './timeout';\nimport timeTravelReducer, {timeTravelInitialState} from './time-travel';\nimport toolboxReducer, {toolboxInitialState} from './toolbox';\nimport vmReducer, {vmInitialState} from './vm';\nimport vmStatusReducer, {vmStatusInitialState} from './vm-status';\nimport workspaceMetricsReducer, {workspaceMetricsInitialState} from './workspace-metrics';\nimport throttle from 'redux-throttle';\n\nimport decks from '../lib/libraries/decks/index.jsx';\n\nconst guiMiddleware = compose(applyMiddleware(throttle(300, {leading: true, trailing: true})));\n\nconst guiInitialState = {\n    alerts: alertsInitialState,\n    assetDrag: assetDragInitialState,\n    blockDrag: blockDragInitialState,\n    cards: cardsInitialState,\n    colorPicker: colorPickerInitialState,\n    connectionModal: connectionModalInitialState,\n    customProcedures: customProceduresInitialState,\n    editorTab: editorTabInitialState,\n    mode: modeInitialState,\n    hoveredTarget: hoveredTargetInitialState,\n    stageSize: stageSizeInitialState,\n    menus: menuInitialState,\n    micIndicator: micIndicatorInitialState,\n    modals: modalsInitialState,\n    monitors: monitorsInitialState,\n    monitorLayout: monitorLayoutInitialState,\n    projectChanged: projectChangedInitialState,\n    projectState: projectStateInitialState,\n    projectTitle: projectTitleInitialState,\n    fontsLoaded: fontsLoadedInitialState,\n    restoreDeletion: restoreDeletionInitialState,\n    targets: targetsInitialState,\n    theme: themeInitialState,\n    timeout: timeoutInitialState,\n    timeTravel: timeTravelInitialState,\n    toolbox: toolboxInitialState,\n    vm: vmInitialState,\n    vmStatus: vmStatusInitialState,\n    workspaceMetrics: workspaceMetricsInitialState\n};\n\nconst initPlayer = function (currentState) {\n    return Object.assign(\n        {},\n        currentState,\n        {mode: {\n            isFullScreen: currentState.mode.isFullScreen,\n            isPlayerOnly: true,\n            // When initializing in player mode, make sure to reset\n            // hasEverEnteredEditorMode\n            hasEverEnteredEditor: false\n        }}\n    );\n};\nconst initFullScreen = function (currentState) {\n    return Object.assign(\n        {},\n        currentState,\n        {mode: {\n            isFullScreen: true,\n            isPlayerOnly: currentState.mode.isPlayerOnly,\n            hasEverEnteredEditor: currentState.mode.hasEverEnteredEditor\n        }}\n    );\n};\n\nconst initEmbedded = function (currentState) {\n    return Object.assign(\n        {},\n        currentState,\n        {mode: {\n            showBranding: true,\n            isFullScreen: true,\n            isPlayerOnly: true,\n            hasEverEnteredEditor: false\n        }}\n    );\n};\n\nconst initTutorialCard = function (currentState, deckId) {\n    return Object.assign(\n        {},\n        currentState,\n        {\n            cards: {\n                visible: true,\n                content: decks,\n                activeDeckId: deckId,\n                expanded: true,\n                step: 0,\n                x: 0,\n                y: 0,\n                dragging: false\n            }\n        }\n    );\n};\n\nconst initTelemetryModal = function (currentState) {\n    return Object.assign(\n        {},\n        currentState,\n        {\n            modals: {\n                telemetryModal: true // this key must match `MODAL_TELEMETRY` in modals.js\n            }\n        }\n    );\n};\n\nconst guiReducer = combineReducers({\n    alerts: alertsReducer,\n    assetDrag: assetDragReducer,\n    blockDrag: blockDragReducer,\n    cards: cardsReducer,\n    colorPicker: colorPickerReducer,\n    connectionModal: connectionModalReducer,\n    customProcedures: customProceduresReducer,\n    editorTab: editorTabReducer,\n    mode: modeReducer,\n    hoveredTarget: hoveredTargetReducer,\n    stageSize: stageSizeReducer,\n    menus: menuReducer,\n    micIndicator: micIndicatorReducer,\n    modals: modalReducer,\n    monitors: monitorReducer,\n    monitorLayout: monitorLayoutReducer,\n    projectChanged: projectChangedReducer,\n    projectState: projectStateReducer,\n    projectTitle: projectTitleReducer,\n    fontsLoaded: fontsLoadedReducer,\n    restoreDeletion: restoreDeletionReducer,\n    targets: targetReducer,\n    theme: themeReducer,\n    timeout: timeoutReducer,\n    timeTravel: timeTravelReducer,\n    toolbox: toolboxReducer,\n    vm: vmReducer,\n    vmStatus: vmStatusReducer,\n    workspaceMetrics: workspaceMetricsReducer\n});\n\nexport {\n    guiReducer as default,\n    guiInitialState,\n    guiMiddleware,\n    initEmbedded,\n    initFullScreen,\n    initPlayer,\n    initTelemetryModal,\n    initTutorialCard\n};\n","const SET_HOVERED_SPRITE = 'scratch-gui/hovered-target/SET_HOVERED_SPRITE';\nconst SET_RECEIVED_BLOCKS = 'scratch-gui/hovered-target/SET_RECEIVED_BLOCKS';\n\nconst initialState = {\n    sprite: null,\n    receivedBlocks: false\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case SET_HOVERED_SPRITE:\n        return {\n            sprite: action.spriteId,\n            receivedBlocks: false\n        };\n    case SET_RECEIVED_BLOCKS:\n        return {\n            sprite: state.sprite,\n            receivedBlocks: action.receivedBlocks\n        };\n    default:\n        return state;\n    }\n};\n\nconst setHoveredSprite = function (spriteId) {\n    return {\n        type: SET_HOVERED_SPRITE,\n        spriteId: spriteId,\n        meta: {\n            throttle: 30\n        }\n    };\n};\n\nconst setReceivedBlocks = function (receivedBlocks) {\n    return {\n        type: SET_RECEIVED_BLOCKS,\n        receivedBlocks: receivedBlocks\n    };\n};\n\nexport {\n    reducer as default,\n    initialState as hoveredTargetInitialState,\n    setHoveredSprite,\n    setReceivedBlocks\n};\n","import {addLocaleData} from 'react-intl';\n\nimport {localeData, isRtl} from 'scratch-l10n';\nimport editorMessages from 'scratch-l10n/locales/editor-msgs';\n\naddLocaleData(localeData);\n\nconst UPDATE_LOCALES = 'scratch-gui/locales/UPDATE_LOCALES';\nconst SELECT_LOCALE = 'scratch-gui/locales/SELECT_LOCALE';\n\nconst initialState = {\n    isRtl: false,\n    locale: 'en',\n    messagesByLocale: editorMessages,\n    messages: editorMessages.en\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case SELECT_LOCALE:\n        return Object.assign({}, state, {\n            isRtl: isRtl(action.locale),\n            locale: action.locale,\n            messagesByLocale: state.messagesByLocale,\n            messages: state.messagesByLocale[action.locale]\n        });\n    case UPDATE_LOCALES:\n        return Object.assign({}, state, {\n            isRtl: state.isRtl,\n            locale: state.locale,\n            messagesByLocale: action.messagesByLocale,\n            messages: action.messagesByLocale[state.locale]\n        });\n    default:\n        return state;\n    }\n};\n\nconst selectLocale = function (locale) {\n    return {\n        type: SELECT_LOCALE,\n        locale: locale\n    };\n};\n\nconst setLocales = function (localesMessages) {\n    return {\n        type: UPDATE_LOCALES,\n        messagesByLocale: localesMessages\n    };\n};\nconst initLocale = function (currentState, locale) {\n    if (Object.prototype.hasOwnProperty.call(currentState.messagesByLocale, locale)) {\n        return Object.assign(\n            {},\n            currentState,\n            {\n                isRtl: isRtl(locale),\n                locale: locale,\n                messagesByLocale: currentState.messagesByLocale,\n                messages: currentState.messagesByLocale[locale]\n            }\n        );\n    }\n    // don't change locale if it's not in the current messages\n    return currentState;\n};\nexport {\n    reducer as default,\n    initialState as localesInitialState,\n    initLocale,\n    selectLocale,\n    setLocales\n};\n","const OPEN_MENU = 'scratch-gui/menus/OPEN_MENU';\nconst CLOSE_MENU = 'scratch-gui/menus/CLOSE_MENU';\n\nconst MENU_ABOUT = 'aboutMenu';\nconst MENU_ACCOUNT = 'accountMenu';\nconst MENU_EDIT = 'editMenu';\nconst MENU_FILE = 'fileMenu';\nconst MENU_LANGUAGE = 'languageMenu';\nconst MENU_LOGIN = 'loginMenu';\nconst MENU_MODE = 'modeMenu';\nconst MENU_SETTINGS = 'settingsMenu';\nconst MENU_THEME = 'themeMenu';\n\nclass Menu {\n    constructor (id) {\n        this.id = id;\n        this.children = [];\n        this.parent = null;\n    }\n\n    addChild (menu) {\n        this.children.push(menu);\n        menu.parent = this;\n        return this;\n    }\n\n    descendants () {\n        return this.children.flatMap(child => [child, ...child.descendants()]);\n    }\n\n    siblings () {\n        if (!this.parent) return [];\n\n        return this.parent.children.filter(child => child.id !== this.id);\n    }\n\n    findById (id) {\n        if (this.id === id) return this;\n\n        for (const child of this.children) {\n            const found = child.findById(id);\n            if (found) return found;\n        }\n\n        return null;\n    }\n}\n\n// Structure of nested menus, used for collapsing submenus logic.\nconst rootMenu = new Menu('root')\n    .addChild(\n        new Menu(MENU_SETTINGS)\n            .addChild(new Menu(MENU_LANGUAGE))\n            .addChild(new Menu(MENU_THEME))\n    )\n    .addChild(new Menu(MENU_FILE))\n    .addChild(new Menu(MENU_EDIT))\n    .addChild(new Menu(MENU_MODE))\n    .addChild(new Menu(MENU_SETTINGS))\n    .addChild(new Menu(MENU_LOGIN))\n    .addChild(new Menu(MENU_ACCOUNT))\n    .addChild(new Menu(MENU_ABOUT));\n\nconst initialState = {\n    [MENU_ABOUT]: false,\n    [MENU_ACCOUNT]: false,\n    [MENU_EDIT]: false,\n    [MENU_FILE]: false,\n    [MENU_LANGUAGE]: false,\n    [MENU_LOGIN]: false,\n    [MENU_MODE]: false,\n    [MENU_SETTINGS]: false,\n    [MENU_THEME]: false\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case OPEN_MENU: {\n        const menu = rootMenu.findById(action.menu);\n        // Close siblings when opening a menu\n        const toClose = menu.siblings().flatMap(sibling => [sibling, ...sibling.descendants()]);\n\n        return {\n            ...state,\n            [action.menu]: true,\n            ...Object.fromEntries(toClose.map(({id}) => [id, false]))\n        };\n    }\n    case CLOSE_MENU: {\n        const menu = rootMenu.findById(action.menu);\n        // Close this menu and any submenus\n        const toClose = [menu, ...menu.descendants()];\n\n        return {\n            ...state,\n            ...Object.fromEntries(toClose.map(({id}) => [id, false]))\n        };\n    }\n    default:\n        return state;\n    }\n};\nconst openMenu = menu => ({\n    type: OPEN_MENU,\n    menu: menu\n});\nconst closeMenu = menu => ({\n    type: CLOSE_MENU,\n    menu: menu\n});\n\nconst openAboutMenu = () => openMenu(MENU_ABOUT);\nconst closeAboutMenu = () => closeMenu(MENU_ABOUT);\nconst aboutMenuOpen = state => state.scratchGui.menus[MENU_ABOUT];\n\nconst openAccountMenu = () => openMenu(MENU_ACCOUNT);\nconst closeAccountMenu = () => closeMenu(MENU_ACCOUNT);\nconst accountMenuOpen = state => state.scratchGui.menus[MENU_ACCOUNT];\n\nconst openEditMenu = () => openMenu(MENU_EDIT);\nconst closeEditMenu = () => closeMenu(MENU_EDIT);\nconst editMenuOpen = state => state.scratchGui.menus[MENU_EDIT];\n\nconst openFileMenu = () => openMenu(MENU_FILE);\nconst closeFileMenu = () => closeMenu(MENU_FILE);\nconst fileMenuOpen = state => state.scratchGui.menus[MENU_FILE];\n\nconst openLanguageMenu = () => openMenu(MENU_LANGUAGE);\nconst closeLanguageMenu = () => closeMenu(MENU_LANGUAGE);\nconst languageMenuOpen = state => state.scratchGui.menus[MENU_LANGUAGE];\n\nconst openLoginMenu = () => openMenu(MENU_LOGIN);\nconst closeLoginMenu = () => closeMenu(MENU_LOGIN);\nconst loginMenuOpen = state => state.scratchGui.menus[MENU_LOGIN];\n\nconst openModeMenu = () => openMenu(MENU_MODE);\nconst closeModeMenu = () => closeMenu(MENU_MODE);\nconst modeMenuOpen = state => state.scratchGui.menus[MENU_MODE];\n\nconst openSettingsMenu = () => openMenu(MENU_SETTINGS);\nconst closeSettingsMenu = () => closeMenu(MENU_SETTINGS);\nconst settingsMenuOpen = state => state.scratchGui.menus[MENU_SETTINGS];\n\nconst openThemeMenu = () => openMenu(MENU_THEME);\nconst closeThemeMenu = () => closeMenu(MENU_THEME);\nconst themeMenuOpen = state => state.scratchGui.menus[MENU_THEME];\n\nexport {\n    reducer as default,\n    initialState as menuInitialState,\n    openAboutMenu,\n    closeAboutMenu,\n    aboutMenuOpen,\n    openAccountMenu,\n    closeAccountMenu,\n    accountMenuOpen,\n    openEditMenu,\n    closeEditMenu,\n    editMenuOpen,\n    openFileMenu,\n    closeFileMenu,\n    fileMenuOpen,\n    openLanguageMenu,\n    closeLanguageMenu,\n    languageMenuOpen,\n    openLoginMenu,\n    closeLoginMenu,\n    loginMenuOpen,\n    openModeMenu,\n    closeModeMenu,\n    modeMenuOpen,\n    openSettingsMenu,\n    closeSettingsMenu,\n    settingsMenuOpen,\n    openThemeMenu,\n    closeThemeMenu,\n    themeMenuOpen\n};\n","const UPDATE = 'scratch-gui/mic-indicator/UPDATE';\n\nconst initialState = false;\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case UPDATE:\n        return action.visible;\n    default:\n        return state;\n    }\n};\n\nconst updateMicIndicator = function (visible) {\n    return {\n        type: UPDATE,\n        visible: visible\n    };\n};\n\nexport {\n    reducer as default,\n    initialState as micIndicatorInitialState,\n    updateMicIndicator\n};\n","const OPEN_MODAL = 'scratch-gui/modals/OPEN_MODAL';\nconst CLOSE_MODAL = 'scratch-gui/modals/CLOSE_MODAL';\n\nconst MODAL_BACKDROP_LIBRARY = 'backdropLibrary';\nconst MODAL_COSTUME_LIBRARY = 'costumeLibrary';\nconst MODAL_EXTENSION_LIBRARY = 'extensionLibrary';\nconst MODAL_LOADING_PROJECT = 'loadingProject';\nconst MODAL_TELEMETRY = 'telemetryModal';\nconst MODAL_SOUND_LIBRARY = 'soundLibrary';\nconst MODAL_SPRITE_LIBRARY = 'spriteLibrary';\nconst MODAL_SOUND_RECORDER = 'soundRecorder';\nconst MODAL_CONNECTION = 'connectionModal';\nconst MODAL_TIPS_LIBRARY = 'tipsLibrary';\n\nconst initialState = {\n    [MODAL_BACKDROP_LIBRARY]: false,\n    [MODAL_COSTUME_LIBRARY]: false,\n    [MODAL_EXTENSION_LIBRARY]: false,\n    [MODAL_LOADING_PROJECT]: false,\n    [MODAL_TELEMETRY]: false,\n    [MODAL_SOUND_LIBRARY]: false,\n    [MODAL_SPRITE_LIBRARY]: false,\n    [MODAL_SOUND_RECORDER]: false,\n    [MODAL_CONNECTION]: false,\n    [MODAL_TIPS_LIBRARY]: false\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case OPEN_MODAL:\n        return Object.assign({}, state, {\n            [action.modal]: true\n        });\n    case CLOSE_MODAL:\n        return Object.assign({}, state, {\n            [action.modal]: false\n        });\n    default:\n        return state;\n    }\n};\nconst openModal = function (modal) {\n    return {\n        type: OPEN_MODAL,\n        modal: modal\n    };\n};\nconst closeModal = function (modal) {\n    return {\n        type: CLOSE_MODAL,\n        modal: modal\n    };\n};\nconst openBackdropLibrary = function () {\n    return openModal(MODAL_BACKDROP_LIBRARY);\n};\nconst openCostumeLibrary = function () {\n    return openModal(MODAL_COSTUME_LIBRARY);\n};\nconst openExtensionLibrary = function () {\n    return openModal(MODAL_EXTENSION_LIBRARY);\n};\nconst openLoadingProject = function () {\n    return openModal(MODAL_LOADING_PROJECT);\n};\nconst openTelemetryModal = function () {\n    return openModal(MODAL_TELEMETRY);\n};\nconst openSoundLibrary = function () {\n    return openModal(MODAL_SOUND_LIBRARY);\n};\nconst openSpriteLibrary = function () {\n    return openModal(MODAL_SPRITE_LIBRARY);\n};\nconst openSoundRecorder = function () {\n    return openModal(MODAL_SOUND_RECORDER);\n};\nconst openConnectionModal = function () {\n    return openModal(MODAL_CONNECTION);\n};\nconst openTipsLibrary = function () {\n    return openModal(MODAL_TIPS_LIBRARY);\n};\nconst closeBackdropLibrary = function () {\n    return closeModal(MODAL_BACKDROP_LIBRARY);\n};\nconst closeCostumeLibrary = function () {\n    return closeModal(MODAL_COSTUME_LIBRARY);\n};\nconst closeExtensionLibrary = function () {\n    return closeModal(MODAL_EXTENSION_LIBRARY);\n};\nconst closeLoadingProject = function () {\n    return closeModal(MODAL_LOADING_PROJECT);\n};\nconst closeTelemetryModal = function () {\n    return closeModal(MODAL_TELEMETRY);\n};\nconst closeSpriteLibrary = function () {\n    return closeModal(MODAL_SPRITE_LIBRARY);\n};\nconst closeSoundLibrary = function () {\n    return closeModal(MODAL_SOUND_LIBRARY);\n};\nconst closeSoundRecorder = function () {\n    return closeModal(MODAL_SOUND_RECORDER);\n};\nconst closeTipsLibrary = function () {\n    return closeModal(MODAL_TIPS_LIBRARY);\n};\nconst closeConnectionModal = function () {\n    return closeModal(MODAL_CONNECTION);\n};\nexport {\n    reducer as default,\n    initialState as modalsInitialState,\n    openBackdropLibrary,\n    openCostumeLibrary,\n    openExtensionLibrary,\n    openLoadingProject,\n    openSoundLibrary,\n    openSpriteLibrary,\n    openSoundRecorder,\n    openTelemetryModal,\n    openTipsLibrary,\n    openConnectionModal,\n    closeBackdropLibrary,\n    closeCostumeLibrary,\n    closeExtensionLibrary,\n    closeLoadingProject,\n    closeSpriteLibrary,\n    closeSoundLibrary,\n    closeSoundRecorder,\n    closeTelemetryModal,\n    closeTipsLibrary,\n    closeConnectionModal\n};\n","const SET_FULL_SCREEN = 'scratch-gui/mode/SET_FULL_SCREEN';\nconst SET_PLAYER = 'scratch-gui/mode/SET_PLAYER';\n\nconst initialState = {\n    showBranding: false,\n    isFullScreen: false,\n    isPlayerOnly: false,\n    hasEverEnteredEditor: true\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case SET_FULL_SCREEN:\n        return Object.assign({}, state, {\n            isFullScreen: action.isFullScreen\n        });\n    case SET_PLAYER:\n        return Object.assign({}, state, {\n            isPlayerOnly: action.isPlayerOnly,\n            hasEverEnteredEditor: state.hasEverEnteredEditor || !action.isPlayerOnly\n        });\n    default:\n        return state;\n    }\n};\n\nconst setFullScreen = function (isFullScreen) {\n    return {\n        type: SET_FULL_SCREEN,\n        isFullScreen: isFullScreen\n    };\n};\nconst setPlayer = function (isPlayerOnly) {\n    return {\n        type: SET_PLAYER,\n        isPlayerOnly: isPlayerOnly\n    };\n};\n\nexport {\n    reducer as default,\n    initialState as modeInitialState,\n    setFullScreen,\n    setPlayer\n};\n","import log from '../lib/log';\n\nconst ADD_MONITOR_RECT = 'scratch-gui/monitors/ADD_MONITOR_RECT';\nconst MOVE_MONITOR_RECT = 'scratch-gui/monitors/MOVE_MONITOR_RECT';\nconst RESIZE_MONITOR_RECT = 'scratch-gui/monitors/RESIZE_MONITOR_RECT';\nconst REMOVE_MONITOR_RECT = 'scratch-gui/monitors/REMOVE_MONITOR_RECT';\n\nconst initialState = {\n    monitors: {},\n    savedMonitorPositions: {}\n};\n\n// Verify that the rectangle formed by the 2 points is well-formed\nconst _verifyRect = function (upperStart, lowerEnd) {\n    if (isNaN(upperStart.x) || isNaN(upperStart.y) || isNaN(lowerEnd.x) || isNaN(lowerEnd.y)) {\n        return false;\n    }\n    if (!(upperStart.x < lowerEnd.x)) {\n        return false;\n    }\n    if (!(upperStart.y < lowerEnd.y)) {\n        return false;\n    }\n    return true;\n};\n\nconst _addMonitorRect = function (state, action) {\n    if (Object.prototype.hasOwnProperty.call(state.monitors, action.monitorId)) {\n        log.error(`Can't add monitor, monitor with id ${action.monitorId} already exists.`);\n        return state;\n    }\n    if (!_verifyRect(action.upperStart, action.lowerEnd)) {\n        log.error(`Monitor rectangle not formatted correctly`);\n        return state;\n    }\n    return {\n        monitors: Object.assign({}, state.monitors, {\n            [action.monitorId]: {\n                upperStart: action.upperStart,\n                lowerEnd: action.lowerEnd\n            }\n        }),\n        savedMonitorPositions: action.savePosition ?\n            Object.assign({}, state.savedMonitorPositions, {\n                [action.monitorId]: {x: action.upperStart.x, y: action.upperStart.y}\n            }) :\n            state.savedMonitorPositions\n    };\n};\n\nconst _moveMonitorRect = function (state, action) {\n    if (!Object.prototype.hasOwnProperty.call(state.monitors, action.monitorId)) {\n        log.error(`Can't move monitor, monitor with id ${action.monitorId} does not exist.`);\n        return state;\n    }\n    if (isNaN(action.newX) || isNaN(action.newY)) {\n        log.error(`Monitor rectangle not formatted correctly`);\n        return state;\n    }\n\n    const oldMonitor = state.monitors[action.monitorId];\n    if (oldMonitor.upperStart.x === action.newX &&\n            oldMonitor.upperStart.y === action.newY) {\n        // Hasn't moved\n        return state;\n    }\n    const monitorWidth = oldMonitor.lowerEnd.x - oldMonitor.upperStart.x;\n    const monitorHeight = oldMonitor.lowerEnd.y - oldMonitor.upperStart.y;\n    return {\n        monitors: Object.assign({}, state.monitors, {\n            [action.monitorId]: {\n                upperStart: {x: action.newX, y: action.newY},\n                lowerEnd: {x: action.newX + monitorWidth, y: action.newY + monitorHeight}\n            }\n        }),\n        // User generated position is saved\n        savedMonitorPositions: Object.assign({}, state.savedMonitorPositions, {\n            [action.monitorId]: {x: action.newX, y: action.newY}\n        })\n    };\n};\n\nconst _resizeMonitorRect = function (state, action) {\n    if (!Object.prototype.hasOwnProperty.call(state.monitors, action.monitorId)) {\n        log.error(`Can't resize monitor, monitor with id ${action.monitorId} does not exist.`);\n        return state;\n    }\n    if (isNaN(action.newWidth) || isNaN(action.newHeight) ||\n            action.newWidth <= 0 || action.newHeight <= 0) {\n        log.error(`Monitor rectangle not formatted correctly`);\n        return state;\n    }\n\n    const oldMonitor = state.monitors[action.monitorId];\n    const newMonitor = {\n        upperStart: oldMonitor.upperStart,\n        lowerEnd: {\n            x: oldMonitor.upperStart.x + action.newWidth,\n            y: oldMonitor.upperStart.y + action.newHeight\n        }\n    };\n    if (newMonitor.lowerEnd.x === oldMonitor.lowerEnd.x &&\n            newMonitor.lowerEnd.y === oldMonitor.lowerEnd.y) {\n        // no change\n        return state;\n    }\n\n    return {\n        monitors: Object.assign({}, state.monitors, {[action.monitorId]: newMonitor}),\n        savedMonitorPositions: state.savedMonitorPositions\n    };\n\n};\n\nconst _removeMonitorRect = function (state, action) {\n    if (!Object.prototype.hasOwnProperty.call(state.monitors, action.monitorId)) {\n        log.error(`Can't remove monitor, monitor with id ${action.monitorId} does not exist.`);\n        return state;\n    }\n\n    const newMonitors = Object.assign({}, state.monitors);\n    delete newMonitors[action.monitorId];\n    return {\n        monitors: newMonitors,\n        savedMonitorPositions: state.savedMonitorPositions\n    };\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case ADD_MONITOR_RECT:\n        return _addMonitorRect(state, action);\n    case MOVE_MONITOR_RECT:\n        return _moveMonitorRect(state, action);\n    case RESIZE_MONITOR_RECT:\n        return _resizeMonitorRect(state, action);\n    case REMOVE_MONITOR_RECT:\n        return _removeMonitorRect(state, action);\n    default:\n        return state;\n    }\n};\n\n// Init position --------------------------\nconst PADDING = 5;\n// @todo fix these numbers when we fix https://github.com/LLK/scratch-gui/issues/980\nconst SCREEN_WIDTH = 400;\nconst SCREEN_HEIGHT = 300;\nconst SCREEN_EDGE_BUFFER = 40;\n\nconst _rectsIntersect = function (rect1, rect2) {\n    // If one rectangle is on left side of other\n    if (rect1.upperStart.x >= rect2.lowerEnd.x || rect2.upperStart.x >= rect1.lowerEnd.x) return false;\n    // If one rectangle is above other\n    if (rect1.upperStart.y >= rect2.lowerEnd.y || rect2.upperStart.y >= rect1.lowerEnd.y) return false;\n    return true;\n};\n\n// We need to place a monitor with the given width and height. Return a rect defining where it should be placed.\nconst getInitialPosition = function (state, monitorId, eltWidth, eltHeight) {\n    // If this monitor was purposefully moved to a certain position before, put it back in that position\n    if (Object.prototype.hasOwnProperty.call(state.savedMonitorPositions, monitorId)) {\n        const saved = state.savedMonitorPositions[monitorId];\n        return {\n            upperStart: saved,\n            lowerEnd: {x: saved.x + eltWidth, y: saved.y + eltHeight}\n        };\n    }\n\n    // Try all starting positions for the new monitor to find one that doesn't intersect others\n    const endXs = [0];\n    const endYs = [0];\n    let lastX = null;\n    let lastY = null;\n    for (const monitor in state.monitors) {\n        let x = state.monitors[monitor].lowerEnd.x;\n        x = Math.ceil(x / 50) * 50; // Try to choose a sensible \"tab width\" so more monitors line up\n        endXs.push(x);\n        endYs.push(Math.ceil(state.monitors[monitor].lowerEnd.y));\n    }\n    endXs.sort((a, b) => a - b);\n    endYs.sort((a, b) => a - b);\n    // We'll use plan B if the monitor doesn't fit anywhere (too long or tall)\n    let planB = null;\n    for (const x of endXs) {\n        if (x === lastX) {\n            continue;\n        }\n        lastX = x;\n        outer:\n        for (const y of endYs) {\n            if (y === lastY) {\n                continue;\n            }\n            lastY = y;\n            const monitorRect = {\n                upperStart: {x: x + PADDING, y: y + PADDING},\n                lowerEnd: {x: x + PADDING + eltWidth, y: y + PADDING + eltHeight}\n            };\n            // Intersection testing rect that includes padding\n            const rect = {\n                upperStart: {x, y},\n                lowerEnd: {x: x + eltWidth + (2 * PADDING), y: y + eltHeight + (2 * PADDING)}\n            };\n            for (const monitor in state.monitors) {\n                if (_rectsIntersect(state.monitors[monitor], rect)) {\n                    continue outer;\n                }\n            }\n            // If the rect overlaps the ends of the screen\n            if (rect.lowerEnd.x > SCREEN_WIDTH || rect.lowerEnd.y > SCREEN_HEIGHT) {\n                // If rect is not too close to completely off screen, set it as plan B\n                if (!planB &&\n                        !(rect.upperStart.x + SCREEN_EDGE_BUFFER > SCREEN_WIDTH ||\n                            rect.upperStart.y + SCREEN_EDGE_BUFFER > SCREEN_HEIGHT)) {\n                    planB = monitorRect;\n                }\n                continue;\n            }\n            return monitorRect;\n        }\n    }\n    // If the monitor is too long to fit anywhere, put it in the leftmost spot available\n    // that intersects the right or bottom edge and isn't too close to the edge.\n    if (planB) {\n        return planB;\n    }\n\n    // If plan B fails and there's nowhere reasonable to put it, plan C is to place the monitor randomly\n    const randX = Math.ceil(Math.random() * (SCREEN_WIDTH / 2));\n    const randY = Math.ceil(Math.random() * (SCREEN_HEIGHT - SCREEN_EDGE_BUFFER));\n    return {\n        upperStart: {\n            x: randX,\n            y: randY\n        },\n        lowerEnd: {\n            x: randX + eltWidth,\n            y: randY + eltHeight\n        }\n    };\n};\n\n// Action creators ------------------------\n/**\n * @param {!string} monitorId Id to add\n * @param {!object} upperStart upper point defining the rectangle\n * @param {!number} upperStart.x X of top point that defines the monitor location\n * @param {!number} upperStart.y Y of top point that defines the monitor location\n * @param {!object} lowerEnd lower point defining the rectangle\n * @param {!number} lowerEnd.x X of bottom point that defines the monitor location\n * @param {!number} lowerEnd.y Y of bottom point that defines the monitor location\n * @param {?boolean} savePosition True if the placement should be saved when adding the monitor\n * @returns {object} action to add a new monitor at the location\n */\nconst addMonitorRect = function (monitorId, upperStart, lowerEnd, savePosition) {\n    return {\n        type: ADD_MONITOR_RECT,\n        monitorId: monitorId,\n        upperStart: upperStart,\n        lowerEnd: lowerEnd,\n        savePosition: savePosition\n    };\n};\n\n/**\n * @param {!string} monitorId Id for monitor to move\n * @param {!number} newX X of top point that defines the monitor location\n * @param {!number} newY Y of top point that defines the monitor location\n * @returns {object} action to move an existing monitor to the location\n */\nconst moveMonitorRect = function (monitorId, newX, newY) {\n    return {\n        type: MOVE_MONITOR_RECT,\n        monitorId: monitorId,\n        newX: newX,\n        newY: newY\n    };\n};\n\n/**\n * @param {!string} monitorId Id for monitor to resize\n * @param {!number} newWidth Width to set monitor to\n * @param {!number} newHeight Height to set monitor to\n * @returns {object} action to resize an existing monitor to the given dimensions\n */\nconst resizeMonitorRect = function (monitorId, newWidth, newHeight) {\n    return {\n        type: RESIZE_MONITOR_RECT,\n        monitorId: monitorId,\n        newWidth: newWidth,\n        newHeight: newHeight\n    };\n};\n\n/**\n * @param {!string} monitorId Id for monitor to remove\n * @returns {object} action to remove an existing monitor\n */\nconst removeMonitorRect = function (monitorId) {\n    return {\n        type: REMOVE_MONITOR_RECT,\n        monitorId: monitorId\n    };\n};\n\nexport {\n    reducer as default,\n    initialState as monitorLayoutInitialState,\n    addMonitorRect,\n    getInitialPosition,\n    moveMonitorRect,\n    resizeMonitorRect,\n    removeMonitorRect,\n    PADDING,\n    SCREEN_HEIGHT,\n    SCREEN_WIDTH\n};\n","const UPDATE_MONITORS = 'scratch-gui/monitors/UPDATE_MONITORS';\nimport {OrderedMap} from 'immutable';\n\nconst initialState = OrderedMap();\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case UPDATE_MONITORS:\n        return action.monitors;\n    default:\n        return state;\n    }\n};\n\nconst updateMonitors = function (monitors) {\n    return {\n        type: UPDATE_MONITORS,\n        monitors: monitors,\n        meta: {\n            throttle: 30\n        }\n    };\n};\n\nexport {\n    reducer as default,\n    initialState as monitorsInitialState,\n    updateMonitors\n};\n","const SET_PROJECT_CHANGED = 'scratch-gui/project-changed/SET_PROJECT_CHANGED';\n\nconst initialState = false;\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case SET_PROJECT_CHANGED:\n        return action.changed;\n    default:\n        return state;\n    }\n};\nconst setProjectChanged = () => ({\n    type: SET_PROJECT_CHANGED,\n    changed: true\n});\nconst setProjectUnchanged = () => ({\n    type: SET_PROJECT_CHANGED,\n    changed: false\n});\n\nexport {\n    reducer as default,\n    initialState as projectChangedInitialState,\n    setProjectChanged,\n    setProjectUnchanged\n};\n","import keyMirror from 'keymirror';\n\nconst DONE_CREATING_COPY = 'scratch-gui/project-state/DONE_CREATING_COPY';\nconst DONE_CREATING_NEW = 'scratch-gui/project-state/DONE_CREATING_NEW';\nconst DONE_FETCHING_DEFAULT = 'scratch-gui/project-state/DONE_FETCHING_DEFAULT';\nconst DONE_FETCHING_WITH_ID = 'scratch-gui/project-state/DONE_FETCHING_WITH_ID';\nconst DONE_LOADING_VM_TO_SAVE = 'scratch-gui/project-state/DONE_LOADING_VM_TO_SAVE';\nconst DONE_LOADING_VM_WITH_ID = 'scratch-gui/project-state/DONE_LOADING_VM_WITH_ID';\nconst DONE_LOADING_VM_WITHOUT_ID = 'scratch-gui/project-state/DONE_LOADING_VM_WITHOUT_ID';\nconst DONE_REMIXING = 'scratch-gui/project-state/DONE_REMIXING';\nconst DONE_UPDATING = 'scratch-gui/project-state/DONE_UPDATING';\nconst DONE_UPDATING_BEFORE_COPY = 'scratch-gui/project-state/DONE_UPDATING_BEFORE_COPY';\nconst DONE_UPDATING_BEFORE_NEW = 'scratch-gui/project-state/DONE_UPDATING_BEFORE_NEW';\nconst RETURN_TO_SHOWING = 'scratch-gui/project-state/RETURN_TO_SHOWING';\nconst SET_PROJECT_ID = 'scratch-gui/project-state/SET_PROJECT_ID';\nconst START_AUTO_UPDATING = 'scratch-gui/project-state/START_AUTO_UPDATING';\nconst START_CREATING_NEW = 'scratch-gui/project-state/START_CREATING_NEW';\nconst START_ERROR = 'scratch-gui/project-state/START_ERROR';\nconst START_FETCHING_NEW = 'scratch-gui/project-state/START_FETCHING_NEW';\nconst START_LOADING_VM_FILE_UPLOAD = 'scratch-gui/project-state/START_LOADING_VM_FILE_UPLOAD';\nconst START_MANUAL_UPDATING = 'scratch-gui/project-state/START_MANUAL_UPDATING';\nconst START_REMIXING = 'scratch-gui/project-state/START_REMIXING';\nconst START_UPDATING_BEFORE_CREATING_COPY = 'scratch-gui/project-state/START_UPDATING_BEFORE_CREATING_COPY';\nconst START_UPDATING_BEFORE_CREATING_NEW = 'scratch-gui/project-state/START_UPDATING_BEFORE_CREATING_NEW';\n\nconst defaultProjectId = '0'; // hardcoded id of default project\n\nconst LoadingState = keyMirror({\n    NOT_LOADED: null,\n    ERROR: null,\n    AUTO_UPDATING: null,\n    CREATING_COPY: null,\n    CREATING_NEW: null,\n    FETCHING_NEW_DEFAULT: null,\n    FETCHING_WITH_ID: null,\n    LOADING_VM_FILE_UPLOAD: null,\n    LOADING_VM_NEW_DEFAULT: null,\n    LOADING_VM_WITH_ID: null,\n    MANUAL_UPDATING: null,\n    REMIXING: null,\n    SHOWING_WITH_ID: null,\n    SHOWING_WITHOUT_ID: null,\n    UPDATING_BEFORE_COPY: null,\n    UPDATING_BEFORE_NEW: null\n});\n\nconst LoadingStates = Object.keys(LoadingState);\n\nconst getIsFetchingWithoutId = loadingState => (\n    // LOADING_VM_FILE_UPLOAD is an honorary fetch, since there is no fetching step for file uploads\n    loadingState === LoadingState.LOADING_VM_FILE_UPLOAD ||\n    loadingState === LoadingState.FETCHING_NEW_DEFAULT\n);\nconst getIsFetchingWithId = loadingState => (\n    loadingState === LoadingState.FETCHING_WITH_ID ||\n    loadingState === LoadingState.FETCHING_NEW_DEFAULT\n);\nconst getIsLoadingWithId = loadingState => (\n    loadingState === LoadingState.LOADING_VM_WITH_ID ||\n    loadingState === LoadingState.LOADING_VM_NEW_DEFAULT\n);\nconst getIsLoading = loadingState => (\n    loadingState === LoadingState.LOADING_VM_FILE_UPLOAD ||\n    loadingState === LoadingState.LOADING_VM_WITH_ID ||\n    loadingState === LoadingState.LOADING_VM_NEW_DEFAULT\n);\nconst getIsLoadingUpload = loadingState => (\n    loadingState === LoadingState.LOADING_VM_FILE_UPLOAD\n);\nconst getIsCreatingNew = loadingState => (\n    loadingState === LoadingState.CREATING_NEW\n);\nconst getIsAnyCreatingNewState = loadingState => (\n    loadingState === LoadingState.FETCHING_NEW_DEFAULT ||\n    loadingState === LoadingState.LOADING_VM_NEW_DEFAULT ||\n    loadingState === LoadingState.CREATING_NEW\n);\nconst getIsCreatingCopy = loadingState => (\n    loadingState === LoadingState.CREATING_COPY\n);\nconst getIsManualUpdating = loadingState => (\n    loadingState === LoadingState.MANUAL_UPDATING\n);\nconst getIsRemixing = loadingState => (\n    loadingState === LoadingState.REMIXING\n);\nconst getIsUpdating = loadingState => (\n    loadingState === LoadingState.AUTO_UPDATING ||\n    loadingState === LoadingState.MANUAL_UPDATING ||\n    loadingState === LoadingState.UPDATING_BEFORE_COPY ||\n    loadingState === LoadingState.UPDATING_BEFORE_NEW\n);\nconst getIsShowingProject = loadingState => (\n    loadingState === LoadingState.SHOWING_WITH_ID ||\n    loadingState === LoadingState.SHOWING_WITHOUT_ID\n);\nconst getIsShowingWithId = loadingState => (\n    loadingState === LoadingState.SHOWING_WITH_ID\n);\nconst getIsShowingWithoutId = loadingState => (\n    loadingState === LoadingState.SHOWING_WITHOUT_ID\n);\nconst getIsError = loadingState => (\n    loadingState === LoadingState.ERROR\n);\n\nconst initialState = {\n    error: null,\n    projectData: null,\n    projectId: null,\n    loadingState: LoadingState.NOT_LOADED\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n\n    switch (action.type) {\n    case DONE_CREATING_NEW:\n        // We need to set project id since we just created new project on the server.\n        // No need to load, we should have data already in vm.\n        if (state.loadingState === LoadingState.CREATING_NEW) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.SHOWING_WITH_ID,\n                projectId: action.projectId\n            });\n        }\n        return state;\n    case DONE_FETCHING_WITH_ID:\n        if (state.loadingState === LoadingState.FETCHING_WITH_ID) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.LOADING_VM_WITH_ID,\n                projectData: action.projectData\n            });\n        }\n        return state;\n    case DONE_FETCHING_DEFAULT:\n        if (state.loadingState === LoadingState.FETCHING_NEW_DEFAULT) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.LOADING_VM_NEW_DEFAULT,\n                projectData: action.projectData\n            });\n        }\n        return state;\n    case DONE_LOADING_VM_WITHOUT_ID:\n        if (state.loadingState === LoadingState.LOADING_VM_FILE_UPLOAD ||\n            state.loadingState === LoadingState.LOADING_VM_NEW_DEFAULT) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.SHOWING_WITHOUT_ID,\n                projectId: defaultProjectId\n            });\n        }\n        return state;\n    case DONE_LOADING_VM_WITH_ID:\n        if (state.loadingState === LoadingState.LOADING_VM_WITH_ID) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.SHOWING_WITH_ID\n            });\n        }\n        return state;\n    case DONE_LOADING_VM_TO_SAVE:\n        if (state.loadingState === LoadingState.LOADING_VM_FILE_UPLOAD) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.AUTO_UPDATING\n            });\n        }\n        return state;\n    case DONE_REMIXING:\n        // We need to set project id since we just created new project on the server.\n        // No need to load, we should have data already in vm.\n        if (state.loadingState === LoadingState.REMIXING) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.SHOWING_WITH_ID,\n                projectId: action.projectId\n            });\n        }\n        return state;\n    case DONE_CREATING_COPY:\n        // We need to set project id since we just created new project on the server.\n        // No need to load, we should have data already in vm.\n        if (state.loadingState === LoadingState.CREATING_COPY) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.SHOWING_WITH_ID,\n                projectId: action.projectId\n            });\n        }\n        return state;\n    case DONE_UPDATING:\n        if (state.loadingState === LoadingState.AUTO_UPDATING ||\n            state.loadingState === LoadingState.MANUAL_UPDATING) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.SHOWING_WITH_ID\n            });\n        }\n        return state;\n    case DONE_UPDATING_BEFORE_COPY:\n        if (state.loadingState === LoadingState.UPDATING_BEFORE_COPY) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.CREATING_COPY\n            });\n        }\n        return state;\n    case DONE_UPDATING_BEFORE_NEW:\n        if (state.loadingState === LoadingState.UPDATING_BEFORE_NEW) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.FETCHING_NEW_DEFAULT,\n                projectId: defaultProjectId\n            });\n        }\n        return state;\n    case RETURN_TO_SHOWING:\n        if (state.projectId === null || state.projectId === defaultProjectId) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.SHOWING_WITHOUT_ID,\n                projectId: defaultProjectId\n            });\n        }\n        return Object.assign({}, state, {\n            loadingState: LoadingState.SHOWING_WITH_ID\n        });\n    case SET_PROJECT_ID:\n        // if the projectId hasn't actually changed do nothing\n        if (state.projectId === action.projectId) {\n            return state;\n        }\n        // if we were already showing a project, and a different projectId is set, only fetch that project if\n        // projectId has changed. This prevents re-fetching projects unnecessarily.\n        if (state.loadingState === LoadingState.SHOWING_WITH_ID) {\n            // if setting the default project id, specifically fetch that project\n            if (action.projectId === defaultProjectId || action.projectId === null) {\n                return Object.assign({}, state, {\n                    loadingState: LoadingState.FETCHING_NEW_DEFAULT,\n                    projectId: defaultProjectId\n                });\n            }\n            return Object.assign({}, state, {\n                loadingState: LoadingState.FETCHING_WITH_ID,\n                projectId: action.projectId\n            });\n        } else if (state.loadingState === LoadingState.SHOWING_WITHOUT_ID) {\n            // if we were showing a project already, don't transition to default project.\n            if (action.projectId !== defaultProjectId && action.projectId !== null) {\n                return Object.assign({}, state, {\n                    loadingState: LoadingState.FETCHING_WITH_ID,\n                    projectId: action.projectId\n                });\n            }\n        } else { // allow any other states to transition to fetching project\n            // if setting the default project id, specifically fetch that project\n            if (action.projectId === defaultProjectId || action.projectId === null) {\n                return Object.assign({}, state, {\n                    loadingState: LoadingState.FETCHING_NEW_DEFAULT,\n                    projectId: defaultProjectId\n                });\n            }\n            return Object.assign({}, state, {\n                loadingState: LoadingState.FETCHING_WITH_ID,\n                projectId: action.projectId\n            });\n        }\n        return state;\n    case START_AUTO_UPDATING:\n        if (state.loadingState === LoadingState.SHOWING_WITH_ID) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.AUTO_UPDATING\n            });\n        }\n        return state;\n    case START_CREATING_NEW:\n        if (state.loadingState === LoadingState.SHOWING_WITHOUT_ID) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.CREATING_NEW\n            });\n        }\n        return state;\n    case START_FETCHING_NEW:\n        if ([\n            LoadingState.SHOWING_WITH_ID,\n            LoadingState.SHOWING_WITHOUT_ID\n        ].includes(state.loadingState)) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.FETCHING_NEW_DEFAULT,\n                projectId: defaultProjectId\n            });\n        }\n        return state;\n    case START_LOADING_VM_FILE_UPLOAD:\n        if ([\n            LoadingState.NOT_LOADED,\n            LoadingState.SHOWING_WITH_ID,\n            LoadingState.SHOWING_WITHOUT_ID\n        ].includes(state.loadingState)) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.LOADING_VM_FILE_UPLOAD\n            });\n        }\n        return state;\n    case START_MANUAL_UPDATING:\n        if (state.loadingState === LoadingState.SHOWING_WITH_ID) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.MANUAL_UPDATING\n            });\n        }\n        return state;\n    case START_REMIXING:\n        if (state.loadingState === LoadingState.SHOWING_WITH_ID) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.REMIXING\n            });\n        }\n        return state;\n    case START_UPDATING_BEFORE_CREATING_COPY:\n        if (state.loadingState === LoadingState.SHOWING_WITH_ID) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.UPDATING_BEFORE_COPY\n            });\n        }\n        return state;\n    case START_UPDATING_BEFORE_CREATING_NEW:\n        if (state.loadingState === LoadingState.SHOWING_WITH_ID) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.UPDATING_BEFORE_NEW\n            });\n        }\n        return state;\n    case START_ERROR:\n        // fatal errors: there's no correct editor state for us to show\n        if ([\n            LoadingState.FETCHING_NEW_DEFAULT,\n            LoadingState.FETCHING_WITH_ID,\n            LoadingState.LOADING_VM_NEW_DEFAULT,\n            LoadingState.LOADING_VM_WITH_ID\n        ].includes(state.loadingState)) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.ERROR,\n                error: action.error\n            });\n        }\n        // non-fatal errors: can keep showing editor state fine\n        if ([\n            LoadingState.AUTO_UPDATING,\n            LoadingState.CREATING_COPY,\n            LoadingState.MANUAL_UPDATING,\n            LoadingState.REMIXING,\n            LoadingState.UPDATING_BEFORE_COPY,\n            LoadingState.UPDATING_BEFORE_NEW\n        ].includes(state.loadingState)) {\n            return Object.assign({}, state, {\n                loadingState: LoadingState.SHOWING_WITH_ID,\n                error: action.error\n            });\n        }\n        // non-fatal error; state to show depends on whether project we're showing\n        // has an id or not\n        if (state.loadingState === LoadingState.CREATING_NEW) {\n            if (state.projectId === defaultProjectId || state.projectId === null) {\n                return Object.assign({}, state, {\n                    loadingState: LoadingState.SHOWING_WITHOUT_ID,\n                    error: action.error\n                });\n            }\n            return Object.assign({}, state, {\n                loadingState: LoadingState.SHOWING_WITH_ID,\n                error: action.error\n            });\n        }\n        return state;\n    default:\n        return state;\n    }\n};\n\nconst createProject = () => ({\n    type: START_CREATING_NEW\n});\n\nconst doneCreatingProject = (id, loadingState) => {\n    switch (loadingState) {\n    case LoadingState.CREATING_NEW:\n        return {\n            type: DONE_CREATING_NEW,\n            projectId: id\n        };\n    case LoadingState.CREATING_COPY:\n        return {\n            type: DONE_CREATING_COPY,\n            projectId: id\n        };\n    case LoadingState.REMIXING:\n        return {\n            type: DONE_REMIXING,\n            projectId: id\n        };\n    default:\n        break;\n    }\n};\n\nconst onFetchedProjectData = (projectData, loadingState) => {\n    switch (loadingState) {\n    case LoadingState.FETCHING_WITH_ID:\n        return {\n            type: DONE_FETCHING_WITH_ID,\n            projectData: projectData\n        };\n    case LoadingState.FETCHING_NEW_DEFAULT:\n        return {\n            type: DONE_FETCHING_DEFAULT,\n            projectData: projectData\n        };\n    default:\n        break;\n    }\n};\n\nconst onLoadedProject = (loadingState, canSave, success) => {\n    switch (loadingState) {\n    case LoadingState.LOADING_VM_WITH_ID:\n        if (success) {\n            return {type: DONE_LOADING_VM_WITH_ID};\n        }\n        // failed to load project; just keep showing current project\n        return {type: RETURN_TO_SHOWING};\n    case LoadingState.LOADING_VM_FILE_UPLOAD:\n        if (success) {\n            if (canSave) {\n                return {type: DONE_LOADING_VM_TO_SAVE};\n            }\n            return {type: DONE_LOADING_VM_WITHOUT_ID};\n        }\n        // failed to load project; just keep showing current project\n        return {type: RETURN_TO_SHOWING};\n    case LoadingState.LOADING_VM_NEW_DEFAULT:\n        if (success) {\n            return {type: DONE_LOADING_VM_WITHOUT_ID};\n        }\n        // failed to load default project; show error\n        return {type: START_ERROR};\n    default:\n        return;\n    }\n};\n\nconst doneUpdatingProject = loadingState => {\n    switch (loadingState) {\n    case LoadingState.AUTO_UPDATING:\n    case LoadingState.MANUAL_UPDATING:\n        return {\n            type: DONE_UPDATING\n        };\n    case LoadingState.UPDATING_BEFORE_COPY:\n        return {\n            type: DONE_UPDATING_BEFORE_COPY\n        };\n    case LoadingState.UPDATING_BEFORE_NEW:\n        return {\n            type: DONE_UPDATING_BEFORE_NEW\n        };\n    default:\n        break;\n    }\n};\n\nconst projectError = error => ({\n    type: START_ERROR,\n    error: error\n});\n\nconst setProjectId = id => ({\n    type: SET_PROJECT_ID,\n    projectId: id\n});\n\nconst requestNewProject = needSave => {\n    if (needSave) return {type: START_UPDATING_BEFORE_CREATING_NEW};\n    return {type: START_FETCHING_NEW};\n};\n\nconst requestProjectUpload = loadingState => {\n    switch (loadingState) {\n    case LoadingState.NOT_LOADED:\n    case LoadingState.SHOWING_WITH_ID:\n    case LoadingState.SHOWING_WITHOUT_ID:\n        return {\n            type: START_LOADING_VM_FILE_UPLOAD\n        };\n    default:\n        break;\n    }\n};\n\nconst autoUpdateProject = () => ({\n    type: START_AUTO_UPDATING\n});\n\nconst manualUpdateProject = () => ({\n    type: START_MANUAL_UPDATING\n});\n\nconst saveProjectAsCopy = () => ({\n    type: START_UPDATING_BEFORE_CREATING_COPY\n});\n\nconst remixProject = () => ({\n    type: START_REMIXING\n});\n\nexport {\n    reducer as default,\n    initialState as projectStateInitialState,\n    LoadingState,\n    LoadingStates,\n    autoUpdateProject,\n    createProject,\n    defaultProjectId,\n    doneCreatingProject,\n    doneUpdatingProject,\n    getIsAnyCreatingNewState,\n    getIsCreatingCopy,\n    getIsCreatingNew,\n    getIsError,\n    getIsFetchingWithId,\n    getIsFetchingWithoutId,\n    getIsLoading,\n    getIsLoadingWithId,\n    getIsLoadingUpload,\n    getIsManualUpdating,\n    getIsRemixing,\n    getIsShowingProject,\n    getIsShowingWithId,\n    getIsShowingWithoutId,\n    getIsUpdating,\n    manualUpdateProject,\n    onFetchedProjectData,\n    onLoadedProject,\n    projectError,\n    remixProject,\n    requestNewProject,\n    requestProjectUpload,\n    saveProjectAsCopy,\n    setProjectId\n};\n","const SET_PROJECT_TITLE = 'projectTitle/SET_PROJECT_TITLE';\n\n// we are initializing to a blank string instead of an actual title,\n// because it would be hard to localize here\nconst initialState = '';\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case SET_PROJECT_TITLE:\n        return action.title;\n    default:\n        return state;\n    }\n};\nconst setProjectTitle = title => ({\n    type: SET_PROJECT_TITLE,\n    title: title\n});\n\nexport {\n    reducer as default,\n    initialState as projectTitleInitialState,\n    setProjectTitle\n};\n","const RESTORE_UPDATE = 'scratch-gui/restore-deletion/RESTORE_UPDATE';\n\nconst initialState = {\n    restoreFun: null,\n    deletedItem: ''\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n\n    switch (action.type) {\n    case RESTORE_UPDATE:\n        return Object.assign({}, state, action.state);\n    default:\n        return state;\n    }\n};\n\nconst setRestore = function (state) {\n    return {\n        type: RESTORE_UPDATE,\n        state: {\n            restoreFun: state.restoreFun,\n            deletedItem: state.deletedItem\n        }\n    };\n};\n\nexport {\n    reducer as default,\n    initialState as restoreDeletionInitialState,\n    setRestore\n};\n","import {STAGE_DISPLAY_SIZES} from '../lib/layout-constants.js';\n\nconst SET_STAGE_SIZE = 'scratch-gui/StageSize/SET_STAGE_SIZE';\n\nconst initialState = {\n    stageSize: STAGE_DISPLAY_SIZES.large\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case SET_STAGE_SIZE:\n        return {\n            stageSize: action.stageSize\n        };\n    default:\n        return state;\n    }\n};\n\nconst setStageSize = function (stageSize) {\n    return {\n        type: SET_STAGE_SIZE,\n        stageSize: stageSize\n    };\n};\n\nexport {\n    reducer as default,\n    initialState as stageSizeInitialState,\n    setStageSize\n};\n","const UPDATE_TARGET_LIST = 'scratch-gui/targets/UPDATE_TARGET_LIST';\nconst HIGHLIGHT_TARGET = 'scratch-gui/targets/HIGHLIGHT_TARGET';\n\nconst initialState = {\n    sprites: {},\n    stage: {},\n    highlightedTargetId: null,\n    highlightedTargetTime: null\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case UPDATE_TARGET_LIST:\n        return Object.assign({}, state, {\n            sprites: action.targets\n                .filter(target => !target.isStage)\n                .reduce(\n                    (targets, target, listId) => Object.assign(\n                        targets,\n                        {[target.id]: {order: listId, ...target}}\n                    ),\n                    {}\n                ),\n            stage: action.targets\n                .filter(target => target.isStage)[0] || {},\n            editingTarget: action.editingTarget\n        });\n    case HIGHLIGHT_TARGET:\n        return Object.assign({}, state, {\n            highlightedTargetId: action.targetId,\n            highlightedTargetTime: action.updateTime\n        });\n    default:\n        return state;\n    }\n};\nconst updateTargets = function (targetList, editingTarget) {\n    return {\n        type: UPDATE_TARGET_LIST,\n        targets: targetList,\n        editingTarget: editingTarget\n    };\n};\nconst highlightTarget = function (targetId) {\n    return {\n        type: HIGHLIGHT_TARGET,\n        targetId: targetId,\n        updateTime: Date.now()\n    };\n};\nexport {\n    reducer as default,\n    initialState as targetsInitialState,\n    updateTargets,\n    highlightTarget\n};\n","import {detectTheme} from '../lib/themes/themePersistance';\n\nconst SET_THEME = 'scratch-gui/theme/SET_THEME';\n\nconst initialState = {\n    theme: detectTheme()\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n    case SET_THEME:\n        return {...state, theme: action.theme};\n    default:\n        return state;\n    }\n};\n\nconst setTheme = theme => ({\n    type: SET_THEME,\n    theme\n});\n\nexport {\n    reducer as default,\n    initialState as themeInitialState,\n    setTheme\n};\n","const SET_TIME_TRAVEL = 'scratch-gui/time-travel/SET_TIME_TRAVEL';\nconst initialState = {\n    year: 'NOW'\n};\n\nconst NOW = 'NOW';\nconst YEAR_2020 = '2020';\nconst YEAR_1990 = '1990';\nconst YEAR_1920 = '1920';\nconst YEAR_220022BC = '220022BC';\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case SET_TIME_TRAVEL:\n        return Object.assign({}, state, {\n            year: action.year\n        });\n    default:\n        return state;\n    }\n};\n\nconst isTimeTravel220022BC = function (state) {\n    return state.scratchGui.timeTravel.year === YEAR_220022BC;\n};\nconst setTimeTravel220022BC = function () {\n    return {\n        type: SET_TIME_TRAVEL,\n        year: YEAR_220022BC\n    };\n};\n\nconst isTimeTravel1920 = function (state) {\n    return state.scratchGui.timeTravel.year === YEAR_1920;\n};\nconst setTimeTravel1920 = function () {\n    return {\n        type: SET_TIME_TRAVEL,\n        year: YEAR_1920\n    };\n};\n\nconst isTimeTravel1990 = function (state) {\n    return state.scratchGui.timeTravel.year === YEAR_1990;\n};\nconst setTimeTravel1990 = function () {\n    return {\n        type: SET_TIME_TRAVEL,\n        year: YEAR_1990\n    };\n};\n\n\nconst isTimeTravel2020 = function (state) {\n    return state.scratchGui.timeTravel.year === YEAR_2020;\n};\nconst setTimeTravel2020 = function () {\n    return {\n        type: SET_TIME_TRAVEL,\n        year: YEAR_2020\n    };\n};\n\nconst isTimeTravelNow = function (state) {\n    return state.scratchGui.timeTravel.year === NOW;\n};\nconst setTimeTravelNow = function () {\n    return {\n        type: SET_TIME_TRAVEL,\n        year: NOW\n    };\n};\n\nconst setTimeTravel = function (mode) {\n    return {\n        type: SET_TIME_TRAVEL,\n        year: mode\n    };\n};\n\nexport {\n    reducer as default,\n    initialState as timeTravelInitialState,\n    isTimeTravel220022BC,\n    isTimeTravel1920,\n    isTimeTravel1990,\n    isTimeTravel2020,\n    isTimeTravelNow,\n    setTimeTravel220022BC,\n    setTimeTravel1920,\n    setTimeTravel1990,\n    setTimeTravel2020,\n    setTimeTravelNow,\n    setTimeTravel\n};\n","const SET_AUTOSAVE_TIMEOUT_ID = 'timeout/SET_AUTOSAVE_TIMEOUT_ID';\n\nconst initialState = {\n    autoSaveTimeoutId: null\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case SET_AUTOSAVE_TIMEOUT_ID:\n        return Object.assign({}, state, {\n            autoSaveTimeoutId: action.id\n        });\n    default:\n        return state;\n    }\n};\nconst setAutoSaveTimeoutId = id => ({\n    type: SET_AUTOSAVE_TIMEOUT_ID,\n    id\n});\n\nexport {\n    reducer as default,\n    initialState as timeoutInitialState,\n    setAutoSaveTimeoutId\n};\n","const UPDATE_TOOLBOX = 'scratch-gui/toolbox/UPDATE_TOOLBOX';\nimport makeToolboxXML from '../lib/make-toolbox-xml';\n\nconst initialState = {\n    toolboxXML: makeToolboxXML(true)\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case UPDATE_TOOLBOX:\n        return Object.assign({}, state, {\n            toolboxXML: action.toolboxXML\n        });\n    default:\n        return state;\n    }\n};\n\nconst updateToolbox = function (toolboxXML) {\n    return {\n        type: UPDATE_TOOLBOX,\n        toolboxXML: toolboxXML\n    };\n};\n\nexport {\n    reducer as default,\n    initialState as toolboxInitialState,\n    updateToolbox\n};\n","const SET_RUNNING_STATE = 'scratch-gui/vm-status/SET_RUNNING_STATE';\nconst SET_TURBO_STATE = 'scratch-gui/vm-status/SET_TURBO_STATE';\nconst SET_STARTED_STATE = 'scratch-gui/vm-status/SET_STARTED_STATE';\n\nconst initialState = {\n    running: false,\n    started: false,\n    turbo: false\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case SET_STARTED_STATE:\n        return Object.assign({}, state, {\n            started: action.started\n        });\n    case SET_RUNNING_STATE:\n        return Object.assign({}, state, {\n            running: action.running\n        });\n    case SET_TURBO_STATE:\n        return Object.assign({}, state, {\n            turbo: action.turbo\n        });\n    default:\n        return state;\n    }\n};\n\nconst setStartedState = function (started) {\n    return {\n        type: SET_STARTED_STATE,\n        started: started\n    };\n};\n\n\nconst setRunningState = function (running) {\n    return {\n        type: SET_RUNNING_STATE,\n        running: running\n    };\n};\n\nconst setTurboState = function (turbo) {\n    return {\n        type: SET_TURBO_STATE,\n        turbo: turbo\n    };\n};\n\nexport {\n    reducer as default,\n    initialState as vmStatusInitialState,\n    setRunningState,\n    setStartedState,\n    setTurboState\n};\n","import VM from 'scratch-vm';\nimport storage from '../lib/storage';\n\nconst SET_VM = 'scratch-gui/vm/SET_VM';\nconst defaultVM = new VM();\ndefaultVM.attachStorage(storage);\nconst initialState = defaultVM;\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n    switch (action.type) {\n    case SET_VM:\n        return action.vm;\n    default:\n        return state;\n    }\n};\nconst setVM = function (vm) {\n    return {\n        type: SET_VM,\n        vm: vm\n    };\n};\n\nexport {\n    reducer as default,\n    initialState as vmInitialState,\n    setVM\n};\n","const UPDATE_METRICS = 'scratch-gui/workspace-metrics/UPDATE_METRICS';\n\nconst initialState = {\n    targets: {}\n};\n\nconst reducer = function (state, action) {\n    if (typeof state === 'undefined') state = initialState;\n\n    switch (action.type) {\n    case UPDATE_METRICS:\n        return Object.assign({}, state, {\n            targets: Object.assign({}, state.targets, {\n                [action.targetID]: {\n                    scrollX: action.scrollX,\n                    scrollY: action.scrollY,\n                    scale: action.scale\n                }\n            })\n        });\n    default:\n        return state;\n    }\n};\n\nconst updateMetrics = function (metrics) {\n    return {\n        type: UPDATE_METRICS,\n        ...metrics\n    };\n};\n\nexport {\n    reducer as default,\n    initialState as workspaceMetricsInitialState,\n    updateMetrics\n};\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* make sure to keep these in sync with other constants,\\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\\n\\n/* layout contants from `layout-constants.js` */\\n\\n/* #E5F0FF */\\n\\n/* #E9F1FC */\\n\\n/* #D9E3F2 */\\n\\n/* 90% transparent version of motion-primary */\\n\\n/* #FFFFFF */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 15% transparent version of black */\\n\\n/* #575E75 */\\n\\n/* #4C97FF */\\n\\n/* #3373CC */\\n\\n/* #855CD6 */\\n\\n/* 35% transparent version of looks-tertiary */\\n\\n/* 15% transparent version of looks-tertiary */\\n\\n/* #714EB6 */\\n\\n/* #FF661A */\\n\\n/* #E64D00 */\\n\\n/* #CF63CF */\\n\\n/* #BD42BD */\\n\\n/* #FFAB19 */\\n\\n/* #FF8C1A */\\n\\n/* #0FBD8C */\\n\\n/* #0FBD8C */\\n\\n/* #0B8E69 */\\n\\n/* #FF8C1A */\\n\\n/* #FFB366 */\\n\\n/* #FF8C1A */\\n\\n/* #0FBD8C */\\n\\n/* #0B8E69 */\\n\\n/* 35% transparent version of extensions-primary */\\n\\n/* opaque version of extensions-transparent, on white bg */\\n\\n/* lighter than motion-primary */\\n\\n/*\\n    Contains constants for the z-index values of elements that are part of the global stack context.\\n    In other words, z-index values that are \\\"inside\\\" a component are not added here.\\n    This prevents conflicts between identical z-index values in different components.\\n*/\\n\\n/* Toolbox z-index: 40; set in scratch-blocks */\\n\\n/* tooltips should go over add buttons if they overlap */\\n\\n/* monitors go over add buttons */\\n\\n/* \\\"ask\\\" block text input goes above monitors */\\n\\n/* menu-bar should go over monitors, alerts and tutorials */\\n\\n/* Block drag z-index: 1000; default 50 is overriden in blocks.css */\\n\\n/* so it is draggable into other panes */\\n\\n/* in most interfaces, the context menu is always on top */\\n\\n.alert_alert_2Ou-m {\\n    width: 100%;\\n    display: flex;\\n    flex-direction: row;\\n    overflow: hidden;\\n    justify-content: flex-start;\\n    border-radius: 0.5rem;\\n    padding-top: .875rem;\\n    padding-bottom: .875rem;\\n    padding-left: 1rem;\\n    padding-right: 1rem;\\n    margin-bottom: 7px;\\n    min-height: 1.5rem;\\n    pointer-events: all;\\n}\\n\\n.alert_alert_2Ou-m.alert_warn_2441l {\\n    background: #FFF0DF;\\n    border: 1px solid #FF8C1A;\\n    box-shadow: 0px 0px 0px 2px rgba(255, 140, 26, 0.25);\\n}\\n\\n.alert_alert_2Ou-m.alert_success_1TbgT {\\n    background: hsla(163, 57%, 85%, 1);\\n    border: 1px solid hsla(163, 85%, 30%, 1);\\n    box-shadow: 0px 0px 0px 2px hsla(163, 57%, 85%, 1);\\n}\\n\\n.alert_alert-spinner_2JcbE {\\n    self-align: center;\\n}\\n\\n.alert_icon-section_2DC1x {\\n    min-width: 1.25rem;\\n    min-height: 1.25rem;\\n    display: flex;\\n    padding-right: 1rem;\\n}\\n\\n.alert_alert-icon_3-jQB {\\n    vertical-align: middle;\\n}\\n\\n.alert_alert-message_3dEDJ {\\n    color: #555;\\n    font-weight: bold;\\n    font-size: .8125rem;\\n    line-height: .875rem;\\n    display: flex;\\n    align-items: center;\\n    padding-right: .5rem;\\n}\\n\\n.alert_alert-buttons_CZbh6 {\\n    display: flex;\\n    flex-direction: row;\\n}\\n\\n.alert_alert-close-button_2ci8S {\\n    outline-style:none;\\n}\\n\\n.alert_alert-close-button-container_2m64w {\\n    outline-style: none;\\n    width: 30px;\\n    height: 30px;\\n    align-self: center;\\n}\\n\\n.alert_alert-connection-button_ETbfk {\\n    min-height: 2rem;\\n    width: 6.5rem;\\n    padding: 0.55rem 0.9rem;\\n    border-radius: 0.35rem;\\n    background: #FF8C1A;\\n    color: white;\\n    font-weight: 700;\\n    font-size: 0.77rem;\\n    border: none;\\n    cursor: pointer;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    align-self: stretch;\\n    outline-style:none;\\n}\\n\\n[dir=\\\"ltr\\\"] .alert_alert-connection-button_ETbfk {\\n    margin-right: 13px;\\n}\\n\\n[dir=\\\"rtl\\\"] .alert_alert-connection-button_ETbfk {\\n    margin-left: 13px;\\n}\\n\\n/* prevent last button in list from too much margin to edge of alert */\\n\\n.alert_alert-buttons_CZbh6 > :last-child {\\n    margin-left: 0;\\n    margin-right: 0;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"alert\": \"alert_alert_2Ou-m\",\n\t\"warn\": \"alert_warn_2441l\",\n\t\"success\": \"alert_success_1TbgT\",\n\t\"alert-spinner\": \"alert_alert-spinner_2JcbE\",\n\t\"alertSpinner\": \"alert_alert-spinner_2JcbE\",\n\t\"icon-section\": \"alert_icon-section_2DC1x\",\n\t\"iconSection\": \"alert_icon-section_2DC1x\",\n\t\"alert-icon\": \"alert_alert-icon_3-jQB\",\n\t\"alertIcon\": \"alert_alert-icon_3-jQB\",\n\t\"alert-message\": \"alert_alert-message_3dEDJ\",\n\t\"alertMessage\": \"alert_alert-message_3dEDJ\",\n\t\"alert-buttons\": \"alert_alert-buttons_CZbh6\",\n\t\"alertButtons\": \"alert_alert-buttons_CZbh6\",\n\t\"alert-close-button\": \"alert_alert-close-button_2ci8S\",\n\t\"alertCloseButton\": \"alert_alert-close-button_2ci8S\",\n\t\"alert-close-button-container\": \"alert_alert-close-button-container_2m64w\",\n\t\"alertCloseButtonContainer\": \"alert_alert-close-button-container_2m64w\",\n\t\"alert-connection-button\": \"alert_alert-connection-button_ETbfk\",\n\t\"alertConnectionButton\": \"alert_alert-connection-button_ETbfk\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".alerts_alerts-inner-container_1KTuF {\\n    min-width: 200px;\\n    max-width: 548px;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"alerts-inner-container\": \"alerts_alerts-inner-container_1KTuF\",\n\t\"alertsInnerContainer\": \"alerts_alerts-inner-container_1KTuF\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".box_box_2jjDp {\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"box\": \"box_box_2jjDp\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* #855CD6 */ /* 35% transparent version of looks-tertiary */ /* 15% transparent version of looks-tertiary */ /* #714EB6 */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #0B8E69 */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ body {\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n} h2 {\\n    font-size: 1.5rem;\\n    font-weight: bold;\\n} p {\\n    font-size: 1rem;\\n    line-height: 1.5em;\\n} /*\\n    Contains constants for the z-index values of elements that are part of the global stack context.\\n    In other words, z-index values that are \\\"inside\\\" a component are not added here.\\n    This prevents conflicts between identical z-index values in different components.\\n*/ /* Toolbox z-index: 40; set in scratch-blocks */ /* tooltips should go over add buttons if they overlap */ /* monitors go over add buttons */ /* \\\"ask\\\" block text input goes above monitors */ /* menu-bar should go over monitors, alerts and tutorials */ /* Block drag z-index: 1000; default 50 is overriden in blocks.css */ /* so it is draggable into other panes */ /* in most interfaces, the context menu is always on top */ .browser-modal_modal-overlay_3TDyF {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    z-index: 510;\\n    background-color: hsla(215, 100%, 65%, 0.9);\\n} .browser-modal_modal-content_3iHow {\\n    margin: 100px auto;\\n    outline: none;\\n    border: .25rem solid hsla(0, 100%, 100%, 0.25);\\n    padding: 0;\\n    border-radius: 0.5rem;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    width: 500px;\\n\\n    color: hsla(225, 15%, 40%, 1);\\n    overflow: hidden;\\n} .browser-modal_illustration_1qhRy {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100px;\\n    background-color: hsla(38, 100%, 55%, 1);\\n} [dir=\\\"rtl\\\"] .browser-modal_illustration_1qhRy {\\n    transform: scaleX(-1);\\n} .browser-modal_illustration_1qhRy img {\\n    height: 80%;\\n    width: auto;\\n} .browser-modal_body_1pvBQ {\\n    background: hsla(0, 100%, 100%, 1);\\n    padding: 1.5rem 2.25rem;\\n    text-align: center;\\n} /* Confirmation buttons at the bottom of the modal */ .browser-modal_button-row_15bbH {\\n    margin: 1.5rem 0;\\n    font-weight: bolder;\\n    text-align: right;\\n    display: flex;\\n    justify-content: center;\\n} .browser-modal_button-row_15bbH button {\\n    border: 1px solid hsla(260, 60%, 60%, 1);\\n    border-radius: 0.25rem;\\n    padding: 0.5rem 2rem;\\n    background: hsla(260, 60%, 60%, 1);\\n    color: white;\\n    font-weight: bold;\\n    font-size: 0.875rem;\\n    cursor: pointer;\\n} .browser-modal_faq-link-text_1e8bS {\\n    margin: 2rem 0 .5rem 0;\\n    font-size: .875rem;\\n    color: hsla(225, 15%, 40%, 1);\\n} .browser-modal_faq-link_3leDC {\\n    color: hsla(260, 60%, 60%, 1);\\n    text-decoration: none;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"modal-overlay\": \"browser-modal_modal-overlay_3TDyF\",\n\t\"modalOverlay\": \"browser-modal_modal-overlay_3TDyF\",\n\t\"modal-content\": \"browser-modal_modal-content_3iHow\",\n\t\"modalContent\": \"browser-modal_modal-content_3iHow\",\n\t\"illustration\": \"browser-modal_illustration_1qhRy\",\n\t\"body\": \"browser-modal_body_1pvBQ\",\n\t\"button-row\": \"browser-modal_button-row_15bbH\",\n\t\"buttonRow\": \"browser-modal_button-row_15bbH\",\n\t\"faq-link-text\": \"browser-modal_faq-link-text_1e8bS\",\n\t\"faqLinkText\": \"browser-modal_faq-link-text_1e8bS\",\n\t\"faq-link\": \"browser-modal_faq-link_3leDC\",\n\t\"faqLink\": \"browser-modal_faq-link_3leDC\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* make sure to keep these in sync with other constants,\\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\\n\\n/* layout contants from `layout-constants.js` */\\n\\n.button_outlined-button_1bS__ {\\n    cursor: pointer;\\n    border-radius: calc(0.5rem / 2);\\n    font-weight: bold;\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n    padding-left: .75rem;\\n    padding-right: .75rem;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n}\\n\\n.button_icon_77d8G {\\n    height: 1.5rem;\\n}\\n\\n[dir=\\\"ltr\\\"] .button_icon_77d8G {\\n    margin-right: .5rem;\\n}\\n\\n[dir=\\\"rtl\\\"] .button_icon_77d8G {\\n    margin-left: .5rem;\\n}\\n\\n.button_content_3jdgj {\\n    white-space: nowrap;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"outlined-button\": \"button_outlined-button_1bS__\",\n\t\"outlinedButton\": \"button_outlined-button_1bS__\",\n\t\"icon\": \"button_icon_77d8G\",\n\t\"content\": \"button_content_3jdgj\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* #855CD6 */ /* 35% transparent version of looks-tertiary */ /* 15% transparent version of looks-tertiary */ /* #714EB6 */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #0B8E69 */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ .close-button_close-button_lOp2G {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n\\n    overflow: hidden;  /* Mask the icon animation */\\n    background-color: hsla(0, 0%, 0%, 0.15);\\n    border-radius: 50%;\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    cursor: pointer;\\n    transition: all 0.15s ease-out;\\n} .close-button_close-button_lOp2G.close-button_large_2oadS:hover {\\n    transform: scale(1.1, 1.1);\\n    box-shadow: 0 0 0 4px hsla(0, 0%, 0%, 0.15);\\n} .close-button_close-button_lOp2G.close-button_large_2oadS.close-button_orange_3I0rs:hover {\\n    transform: scale(1.1, 1.1);\\n    box-shadow: 0px 0px 0px 4px hsla(29, 100%, 54%, 0.2);\\n} .close-button_small_3BsRW {\\n    width: 0.825rem;\\n    height: 0.825rem;\\n    background-color: hsla(260, 60%, 60%, 1);\\n    color: hsla(0, 100%, 100%, 1);\\n} .close-button_large_2oadS {\\n    width: 1.75rem;\\n    height: 1.75rem;\\n    box-shadow: 0 0 0 2px hsla(0, 0%, 0%, 0.15);\\n} .close-button_large_2oadS.close-button_orange_3I0rs {\\n    background-color: hsla(29, 100%, 54%, 0.2);\\n    box-shadow: 0px 0px 0px 2px hsla(29, 100%, 54%, 0.2);\\n} .close-button_close-icon_HBCuO {\\n    position: relative;\\n    margin: 0.25rem;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    transform-origin: 50%;\\n    transform: rotate(45deg);\\n} .close-button_close-icon_HBCuO.close-button_orange_3I0rs {\\n    transform: rotate(45deg);\\n    transform: scale(1.4);\\n} .close-button_small_3BsRW .close-button_close-icon_HBCuO {\\n    width: 50%;\\n} .close-button_large_2oadS .close-button_close-icon_HBCuO {\\n    width: 0.75rem;\\n    height: 0.75rem;\\n} .close-button_back-icon_tlcJm {\\n  position: relative;\\n  margin: 0.25rem;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n} .close-button_small_3BsRW .close-button_back-icon_tlcJm {\\n    width: 50%;\\n} .close-button_large_2oadS .close-button_back-icon_tlcJm {\\n    width: 2rem;\\n    height: 2rem;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"close-button\": \"close-button_close-button_lOp2G\",\n\t\"closeButton\": \"close-button_close-button_lOp2G\",\n\t\"large\": \"close-button_large_2oadS\",\n\t\"orange\": \"close-button_orange_3I0rs\",\n\t\"small\": \"close-button_small_3BsRW\",\n\t\"close-icon\": \"close-button_close-icon_HBCuO\",\n\t\"closeIcon\": \"close-button_close-icon_HBCuO\",\n\t\"back-icon\": \"close-button_back-icon_tlcJm\",\n\t\"backIcon\": \"close-button_back-icon_tlcJm\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* #855CD6 */ /* 35% transparent version of looks-tertiary */ /* 15% transparent version of looks-tertiary */ /* #714EB6 */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #0B8E69 */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ /*\\n    Contains constants for the z-index values of elements that are part of the global stack context.\\n    In other words, z-index values that are \\\"inside\\\" a component are not added here.\\n    This prevents conflicts between identical z-index values in different components.\\n*/ /* Toolbox z-index: 40; set in scratch-blocks */ /* tooltips should go over add buttons if they overlap */ /* monitors go over add buttons */ /* \\\"ask\\\" block text input goes above monitors */ /* menu-bar should go over monitors, alerts and tutorials */ /* Block drag z-index: 1000; default 50 is overriden in blocks.css */ /* so it is draggable into other panes */ /* in most interfaces, the context menu is always on top */ .context-menu_context-menu_2SJM- {\\n    min-width: 130px;\\n    padding: 5px 0; /* The white strip at the top and bottom of the menu */\\n    margin: 2px 0 0; /* To keep the menu below the cursor comfortably */\\n    font-size: 0.85rem;\\n    text-align: left;\\n    background-color: hsla(0, 100%, 100%, 1);\\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\\n    border-radius: calc(0.5rem / 2);\\n    box-shadow: 0px 0px 5px 1px hsla(0, 0%, 0%, 0.15);\\n    pointer-events: none;\\n    transition: opacity 0.2s ease;\\n    z-index: 10000;\\n} .context-menu_menu-item_3cioN {\\n    padding: 8px 12px;\\n    white-space: nowrap;\\n    cursor: pointer;\\n    transition: 0.1s ease;\\n} .context-menu_menu-item_3cioN:hover {\\n    background: hsla(260, 60%, 60%, 1);\\n    color: white;\\n} .context-menu_menu-item-bordered_29CJG {\\n    border-top: 1px solid hsla(0, 0%, 0%, 0.15);\\n} .context-menu_menu-item-danger_1tJg0:hover {\\n    background: hsla(30, 100%, 55%, 1);\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"context-menu\": \"context-menu_context-menu_2SJM-\",\n\t\"contextMenu\": \"context-menu_context-menu_2SJM-\",\n\t\"menu-item\": \"context-menu_menu-item_3cioN\",\n\t\"menuItem\": \"context-menu_menu-item_3cioN\",\n\t\"menu-item-bordered\": \"context-menu_menu-item-bordered_29CJG\",\n\t\"menuItemBordered\": \"context-menu_menu-item-bordered_29CJG\",\n\t\"menu-item-danger\": \"context-menu_menu-item-danger_1tJg0\",\n\t\"menuItemDanger\": \"context-menu_menu-item-danger_1tJg0\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".controls_controls-container_2xinB {\\n    display: flex;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"controls-container\": \"controls_controls-container_2xinB\",\n\t\"controlsContainer\": \"controls_controls-container_2xinB\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* #855CD6 */ /* 35% transparent version of looks-tertiary */ /* 15% transparent version of looks-tertiary */ /* #714EB6 */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #0B8E69 */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ body {\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n} h2 {\\n    font-size: 1.5rem;\\n    font-weight: bold;\\n} p {\\n    font-size: 1rem;\\n    line-height: 1.5em;\\n} .crash-message_crash-wrapper_25B61 {\\n    background-color: hsla(215, 100%, 65%, 1);\\n    width: 100%;\\n    height: 100%;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n} .crash-message_body_1q0lu {\\n    width: 35%;\\n    color: white;\\n    text-align: center;\\n} /* scratch-www was overriding the colors */ .crash-message_body_1q0lu p, .crash-message_body_1q0lu h2 {\\n    color: inherit;\\n} .crash-message_reloadButton_FoS7x {\\n    border: 1px solid hsla(215, 100%, 65%, 1);\\n    border-radius: 0.25rem;\\n    padding: 0.5rem 2rem;\\n    background: white;\\n    color: hsla(215, 100%, 65%, 1);\\n    font-weight: bold;\\n    font-size: 0.875rem;\\n    cursor: pointer;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"crash-wrapper\": \"crash-message_crash-wrapper_25B61\",\n\t\"crashWrapper\": \"crash-message_crash-wrapper_25B61\",\n\t\"body\": \"crash-message_body_1q0lu\",\n\t\"reloadButton\": \"crash-message_reloadButton_FoS7x\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* make sure to keep these in sync with other constants,\\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\\n\\n/* layout contants from `layout-constants.js` */\\n\\n/* #E5F0FF */\\n\\n/* #E9F1FC */\\n\\n/* #D9E3F2 */\\n\\n/* 90% transparent version of motion-primary */\\n\\n/* #FFFFFF */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 15% transparent version of black */\\n\\n/* #575E75 */\\n\\n/* #4C97FF */\\n\\n/* #3373CC */\\n\\n/* #855CD6 */\\n\\n/* 35% transparent version of looks-tertiary */\\n\\n/* 15% transparent version of looks-tertiary */\\n\\n/* #714EB6 */\\n\\n/* #FF661A */\\n\\n/* #E64D00 */\\n\\n/* #CF63CF */\\n\\n/* #BD42BD */\\n\\n/* #FFAB19 */\\n\\n/* #FF8C1A */\\n\\n/* #0FBD8C */\\n\\n/* #0FBD8C */\\n\\n/* #0B8E69 */\\n\\n/* #FF8C1A */\\n\\n/* #FFB366 */\\n\\n/* #FF8C1A */\\n\\n/* #0FBD8C */\\n\\n/* #0B8E69 */\\n\\n/* 35% transparent version of extensions-primary */\\n\\n/* opaque version of extensions-transparent, on white bg */\\n\\n/* lighter than motion-primary */\\n\\n.input_input-form_l9eYg {\\n    height: 2rem;\\n    padding: 0 0.75rem;\\n\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n    font-size: 0.625rem;\\n    font-weight: bold;\\n    color: hsla(225, 15%, 40%, 1);\\n\\n    border-width: 1px;\\n    border-style: solid;\\n    border-color: hsla(0, 0%, 0%, 0.15);\\n    border-radius: 2rem;\\n\\n    outline: none;\\n    cursor: text;\\n    transition: 0.25s ease-out; /* @todo: standardize with var */\\n    box-shadow: none;\\n\\n    /*\\n        For truncating overflowing text gracefully\\n        Min-width is for a bug: https://css-tricks.com/flexbox-truncated-text\\n        @todo: move this out into a mixin or a helper component\\n    */\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    min-width: 0;\\n}\\n\\n.input_input-form_l9eYg:hover {\\n    border-color: hsla(260, 60%, 60%, 1);\\n}\\n\\n.input_input-form_l9eYg:focus {\\n    border-color: hsla(260, 60%, 60%, 1);\\n    box-shadow: 0 0 0 0.25rem hsla(260, 60%, 60%, 0.35);\\n}\\n\\n.input_input-small_2qj1C {\\n    width: 3rem;\\n    padding: 0 0.5rem;\\n    text-overflow: clip;\\n    text-align: center;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"input-form\": \"input_input-form_l9eYg\",\n\t\"inputForm\": \"input_input-form_l9eYg\",\n\t\"input-small\": \"input_input-small_2qj1C\",\n\t\"inputSmall\": \"input_input-small_2qj1C\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* #855CD6 */ /* 35% transparent version of looks-tertiary */ /* 15% transparent version of looks-tertiary */ /* #714EB6 */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #0B8E69 */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .green-flag_green-flag_1kiAo {\\n    width: 2rem;\\n    height: 2rem;\\n    padding: 0.375rem;\\n    border-radius: 0.25rem;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    user-drag: none;\\n    cursor: pointer;\\n} .green-flag_green-flag_1kiAo:hover {\\n    background-color: hsla(260, 60%, 60%, 0.15);\\n} .green-flag_green-flag_1kiAo.green-flag_is-active_2oExT {\\n    background-color: hsla(260, 60%, 60%, 0.35);\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"green-flag\": \"green-flag_green-flag_1kiAo\",\n\t\"greenFlag\": \"green-flag_green-flag_1kiAo\",\n\t\"is-active\": \"green-flag_is-active_2oExT\",\n\t\"isActive\": \"green-flag_is-active_2oExT\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* make sure to keep these in sync with other constants,\\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\\n\\n/* layout contants from `layout-constants.js` */\\n\\n/* #E5F0FF */\\n\\n/* #E9F1FC */\\n\\n/* #D9E3F2 */\\n\\n/* 90% transparent version of motion-primary */\\n\\n/* #FFFFFF */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 15% transparent version of black */\\n\\n/* #575E75 */\\n\\n/* #4C97FF */\\n\\n/* #3373CC */\\n\\n/* #855CD6 */\\n\\n/* 35% transparent version of looks-tertiary */\\n\\n/* 15% transparent version of looks-tertiary */\\n\\n/* #714EB6 */\\n\\n/* #FF661A */\\n\\n/* #E64D00 */\\n\\n/* #CF63CF */\\n\\n/* #BD42BD */\\n\\n/* #FFAB19 */\\n\\n/* #FF8C1A */\\n\\n/* #0FBD8C */\\n\\n/* #0FBD8C */\\n\\n/* #0B8E69 */\\n\\n/* #FF8C1A */\\n\\n/* #FFB366 */\\n\\n/* #FF8C1A */\\n\\n/* #0FBD8C */\\n\\n/* #0B8E69 */\\n\\n/* 35% transparent version of extensions-primary */\\n\\n/* opaque version of extensions-transparent, on white bg */\\n\\n/* lighter than motion-primary */\\n\\n/*\\n    Contains constants for the z-index values of elements that are part of the global stack context.\\n    In other words, z-index values that are \\\"inside\\\" a component are not added here.\\n    This prevents conflicts between identical z-index values in different components.\\n*/\\n\\n/* Toolbox z-index: 40; set in scratch-blocks */\\n\\n/* tooltips should go over add buttons if they overlap */\\n\\n/* monitors go over add buttons */\\n\\n/* \\\"ask\\\" block text input goes above monitors */\\n\\n/* menu-bar should go over monitors, alerts and tutorials */\\n\\n/* Block drag z-index: 1000; default 50 is overriden in blocks.css */\\n\\n/* so it is draggable into other panes */\\n\\n/* in most interfaces, the context menu is always on top */\\n\\n.gui_page-wrapper_1cgy0 {\\n    height: 100%;\\n}\\n\\n.gui_body-wrapper_-N0sA {\\n    height: calc(100% - 3rem);\\n    background-color: hsla(215, 100%, 95%, 1);\\n}\\n\\n.gui_body-wrapper_-N0sA * {\\n    box-sizing: border-box;\\n}\\n\\n.gui_flex-wrapper_uXHkj {\\n    display: flex;\\n\\n    /*\\n        Make 2 columns:\\n        a) for the blocks + workspace panes, and\\n        b) for combined stage menu + stage + sprite/stage selectors\\n    */\\n    flex-direction: row;\\n    height: 100%;\\n\\n    /*\\n        Stop scrollbar popping in and out from scratch-blocks border issue\\n        https://github.com/LLK/scratch-gui/issues/318\\n    */\\n    overflow-y: hidden;\\n}\\n\\n.gui_editor-wrapper_2DYcj {\\n    /*\\n        This is carefully balanced--  the minimum width at which the GUI will be displayed is 1024px.\\n        At that size, the stage pane is 408px wide, with $space of padding to each side.\\n        However, we must also add the border width to the stage pane. All-in-all, the stage pane's final width is\\n        408px + ($space + $stage-standard-border-width * 2) (one border & padding per left/right side).\\n\\n        @todo This is in place to prevent \\\"doubling up\\\" of horizontal scrollbars in narrow windows, but there are likely\\n        much better ways to solve that (e.g. undo #2124, remove this flex-basis entirely). However, they run their own\\n        risks of breaking things, so let's just leave this as-is for the time being.\\n    */\\n    flex-basis: calc(1024px - 408px - ((0.5rem + 0.0625rem) * 2));\\n    flex-grow: 1;\\n    flex-shrink: 0;\\n    position: relative;\\n\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.gui_tab-list_87TYM {\\n    height: 2.75rem;\\n    width: 250px; /* Match width of the toolbox */\\n    display: flex;\\n    align-items: flex-end;\\n    flex-shrink: 0;\\n\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n    font-weight: 500;\\n    font-size: 0.80rem;\\n\\n    /* Overrides for react-tabs styling */\\n    margin: 0 !important;\\n    border-bottom: 0 !important;\\n}\\n\\n.gui_tab_27Unf {\\n    flex-grow: 1;\\n    height: 80%;\\n    margin-bottom: 0;\\n\\n    border-radius: 1rem 1rem 0 0;\\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\\n\\n    padding: 0.125rem 1.25rem 0;\\n    font-size: 0.75rem;\\n\\n    background-color: hsla(215, 50%, 90%, 1);\\n    color: hsla(225, 15%, 40%, 0.75);\\n\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n\\n    -webkit-user-select: none;\\n\\n       -moz-user-select: none;\\n\\n        -ms-user-select: none;\\n\\n            user-select: none;\\n    white-space: nowrap;\\n}\\n\\n[dir=\\\"ltr\\\"] .gui_tab_27Unf {\\n    margin-left: -0.5rem;\\n}\\n\\n[dir=\\\"rtl\\\"] .gui_tab_27Unf {\\n    margin-right: -0.5rem;\\n}\\n\\n[dir=\\\"ltr\\\"] .gui_tab_27Unf:nth-of-type(1) {\\n    margin-left: 0;\\n}\\n\\n[dir=\\\"rtl\\\"] .gui_tab_27Unf:nth-of-type(1) {\\n    margin-right: 0;\\n}\\n\\n/* Use z-indices to force left-on-top for tabs */\\n\\n.gui_tab_27Unf:nth-of-type(1) {\\n    z-index: 3;\\n}\\n\\n.gui_tab_27Unf:nth-of-type(2) {\\n    z-index: 2;\\n}\\n\\n.gui_tab_27Unf:nth-of-type(3) {\\n    z-index: 1;\\n}\\n\\n.gui_tab_27Unf:hover {\\n  background-color: hsla(215, 100%, 95%, 1);\\n}\\n\\n.gui_tab_27Unf.gui_is-selected_sHAiu {\\n    height: 90%;\\n    color: hsla(260, 60%, 60%, 1);\\n    background-color: hsla(0, 100%, 100%, 1);\\n    z-index: 4; /* Make sure selected is always above */\\n}\\n\\n.gui_tab_27Unf img {\\n    width: 1.375rem;\\n    filter: grayscale(100%);\\n}\\n\\n[dir=\\\"ltr\\\"] .gui_tab_27Unf img {\\n    margin-right: 0.125rem;\\n}\\n\\n[dir=\\\"rtl\\\"] .gui_tab_27Unf img {\\n    margin-left: 0.125rem;\\n}\\n\\n/* mirror blocks and sound tab icons */\\n\\n[dir=\\\"rtl\\\"] .gui_tab_27Unf:nth-of-type(1) img {\\n    transform: scaleX(-1);\\n}\\n\\n[dir=\\\"rtl\\\"] .gui_tab_27Unf:nth-of-type(3) img {\\n    transform: scaleX(-1);\\n}\\n\\n.gui_tab_27Unf.gui_is-selected_sHAiu img {\\n    filter: none;\\n}\\n\\n/* Tab style overrides from react-tabs */\\n\\n.gui_tab_27Unf.gui_is-selected_sHAiu:after {\\n    display: none;\\n}\\n\\n.gui_tab_27Unf.gui_is-selected_sHAiu:focus {\\n    outline: none;\\n    box-shadow: none;\\n    border-color: hsla(0, 0%, 0%, 0.15);\\n}\\n\\n.gui_tab_27Unf.gui_is-selected_sHAiu:focus:after {\\n    display: none;\\n}\\n\\n/* Body of the tabs */\\n\\n.gui_tabs_AgmuP {\\n    position: relative;\\n    flex-grow: 1;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.gui_tab-panel_22sLx {\\n    position: relative;\\n    flex-grow: 1;\\n    display: none;\\n}\\n\\n.gui_tab-panel_22sLx.gui_is-selected_sHAiu {\\n    display: flex;\\n}\\n\\n.gui_blocks-wrapper_1ccgf {\\n    flex-grow: 1;\\n    position: relative;\\n}\\n\\n.gui_stage-and-target-wrapper_69KBf {\\n    /*\\n        Makes rows for children:\\n          1) stage menu\\n          2) stage\\n          3) sprite/stage selectors\\n        Only reason we need this, is so .targetWrapper, which holds the selectors,\\n        goes to full vertical height of the window\\n    */\\n    display: flex;\\n    flex-direction: column;\\n    /* pad entire wrapper to the left and right; allow children to fill width */\\n    padding-left: 0.5rem;\\n    padding-right: 0.5rem;\\n\\n    /* this will only ever be as wide as the stage */\\n    flex-basis: 0;\\n}\\n\\n.gui_target-wrapper_36Gbz {\\n    display: flex;\\n    flex-grow: 1;\\n    flex-basis: 0;\\n\\n    padding-top: 0.5rem;\\n    min-height: 0; /* this makes it work in Firefox */\\n\\n    /*\\n        For making the sprite-selector a scrollable pane\\n        @todo: Not working in Safari\\n    */\\n    /* TODO this also breaks the thermometer menu */\\n    /* overflow: hidden; */\\n}\\n\\n.gui_extension-button-container_b4rCs {\\n    width: 3.75rem;\\n    height: 3.25rem;\\n    position: absolute;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n    z-index: 42;\\n    background: hsla(260, 60%, 60%, 1);\\n\\n    border: 1px solid hsla(260, 60%, 60%, 1);\\n    box-sizing: content-box; /* To match scratch-block vertical toolbox borders */\\n}\\n\\n.gui_extension-button-container_b4rCs:before {\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: calc(calc(-1 * 15px) - 1px);\\n    left: -1px;\\n    background: linear-gradient(rgba(0, 0, 0, 0),rgba(0, 0, 0, 0.15));\\n    height: 15px;\\n    width: calc(100% + 0.5px);\\n}\\n\\n.gui_extension-button_2T7PA {\\n    background: none;\\n    border: none;\\n    outline: none;\\n    width: 100%;\\n    height: 100%;\\n    cursor: pointer;\\n}\\n\\n.gui_extension-button-icon_S4gDk {\\n    width: 1.75rem;\\n    height: 1.75rem;\\n}\\n\\n[dir=\\\"rtl\\\"] .gui_extension-button-icon_S4gDk {\\n    transform: scaleX(-1);\\n}\\n\\n.gui_extension-button_2T7PA > div {\\n    margin-top: 0;\\n}\\n\\n/* Sprite Selection Watermark */\\n\\n.gui_watermark_3vBYb {\\n    position: absolute;\\n    top: 1.25rem;\\n    pointer-events: none;\\n}\\n\\n[dir=\\\"ltr\\\"] .gui_watermark_3vBYb {\\n    right: 1.25rem;\\n}\\n\\n[dir=\\\"rtl\\\"] .gui_watermark_3vBYb {\\n    left: 1.25rem;\\n}\\n\\n/* Menu */\\n\\n.gui_menu-bar-position_3U1T0 {\\n    position: relative;\\n    z-index: 491;\\n}\\n\\n/* Alerts */\\n\\n.gui_alerts-container_15BWp {\\n    display: flex;\\n    justify-content: center;\\n    width: 100%;\\n    z-index: 490;\\n    position: absolute;\\n    margin-top: 53px;\\n    pointer-events: none;\\n}\\n\\n/*\\n    Make the (background) page not scrollable when modals are open\\n    This CSS class is automatically added to the body when react-modal is open\\n*/\\n\\n.ReactModal__Body--open {\\n    overflow: hidden;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"page-wrapper\": \"gui_page-wrapper_1cgy0\",\n\t\"pageWrapper\": \"gui_page-wrapper_1cgy0\",\n\t\"body-wrapper\": \"gui_body-wrapper_-N0sA\",\n\t\"bodyWrapper\": \"gui_body-wrapper_-N0sA\",\n\t\"flex-wrapper\": \"gui_flex-wrapper_uXHkj\",\n\t\"flexWrapper\": \"gui_flex-wrapper_uXHkj\",\n\t\"editor-wrapper\": \"gui_editor-wrapper_2DYcj\",\n\t\"editorWrapper\": \"gui_editor-wrapper_2DYcj\",\n\t\"tab-list\": \"gui_tab-list_87TYM\",\n\t\"tabList\": \"gui_tab-list_87TYM\",\n\t\"tab\": \"gui_tab_27Unf\",\n\t\"is-selected\": \"gui_is-selected_sHAiu\",\n\t\"isSelected\": \"gui_is-selected_sHAiu\",\n\t\"tabs\": \"gui_tabs_AgmuP\",\n\t\"tab-panel\": \"gui_tab-panel_22sLx\",\n\t\"tabPanel\": \"gui_tab-panel_22sLx\",\n\t\"blocks-wrapper\": \"gui_blocks-wrapper_1ccgf\",\n\t\"blocksWrapper\": \"gui_blocks-wrapper_1ccgf\",\n\t\"stage-and-target-wrapper\": \"gui_stage-and-target-wrapper_69KBf\",\n\t\"stageAndTargetWrapper\": \"gui_stage-and-target-wrapper_69KBf\",\n\t\"target-wrapper\": \"gui_target-wrapper_36Gbz\",\n\t\"targetWrapper\": \"gui_target-wrapper_36Gbz\",\n\t\"extension-button-container\": \"gui_extension-button-container_b4rCs\",\n\t\"extensionButtonContainer\": \"gui_extension-button-container_b4rCs\",\n\t\"extension-button\": \"gui_extension-button_2T7PA\",\n\t\"extensionButton\": \"gui_extension-button_2T7PA\",\n\t\"extension-button-icon\": \"gui_extension-button-icon_S4gDk\",\n\t\"extensionButtonIcon\": \"gui_extension-button-icon_S4gDk\",\n\t\"watermark\": \"gui_watermark_3vBYb\",\n\t\"menu-bar-position\": \"gui_menu-bar-position_3U1T0\",\n\t\"menuBarPosition\": \"gui_menu-bar-position_3U1T0\",\n\t\"alerts-container\": \"gui_alerts-container_15BWp\",\n\t\"alertsContainer\": \"gui_alerts-container_15BWp\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* #855CD6 */ /* 35% transparent version of looks-tertiary */ /* 15% transparent version of looks-tertiary */ /* #714EB6 */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #0B8E69 */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*\\n    Contains constants for the z-index values of elements that are part of the global stack context.\\n    In other words, z-index values that are \\\"inside\\\" a component are not added here.\\n    This prevents conflicts between identical z-index values in different components.\\n*/ /* Toolbox z-index: 40; set in scratch-blocks */ /* tooltips should go over add buttons if they overlap */ /* monitors go over add buttons */ /* \\\"ask\\\" block text input goes above monitors */ /* menu-bar should go over monitors, alerts and tutorials */ /* Block drag z-index: 1000; default 50 is overriden in blocks.css */ /* so it is draggable into other panes */ /* in most interfaces, the context menu is always on top */ .loader_background_2DPrW {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    z-index: 500;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    background-color: hsla(215, 100%, 65%, 1);\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n    text-align: center;\\n    color: white;\\n} .loader_fullscreen_29EhP {\\n    /* Break out of the layout using position: fixed to cover the whole screen */\\n    position: fixed;\\n    /* Use the fullscreen stage z-index to allow covering full-screen mode */\\n    z-index: 5000;\\n} .loader_block-animation_12MqO {\\n    width: 125px;\\n    height: 150px;\\n    margin: 50px auto 0px;\\n} .loader_block-animation_12MqO img {\\n    display: block;\\n    position: relative;\\n    height: 30%;\\n    margin-top: -4px;\\n} .loader_top-block_3P7pK {\\n    animation: loader_top-slide-in_8ngR8 1.5s ease infinite;\\n} .loader_middle-block_CKcTg {\\n    animation: loader_middle-slide-in_In2DU 1.5s ease infinite;\\n} .loader_bottom-block_1-3rO {\\n    animation: loader_bottom-slide-in_2DZ1B 1.5s ease infinite;\\n} [dir=\\\"rtl\\\"] .loader_top-block_3P7pK {\\n    animation: loader_top-slide-in-rtl_1vHi4 1.5s ease infinite;\\n} [dir=\\\"rtl\\\"] .loader_middle-block_CKcTg {\\n    animation: loader_middle-slide-in-rtl_21ALw 1.5s ease infinite;\\n} [dir=\\\"rtl\\\"] .loader_bottom-block_1-3rO {\\n    animation: loader_bottom-slide-in-rtl_3kdB0 1.5s ease infinite;\\n} @keyframes loader_top-slide-in_8ngR8 {\\n  0% {\\n    transform: translateY(50px);\\n    opacity: 0;\\n  }\\n\\n  33% {\\n    transform: translateY(0px);\\n    opacity: 1;\\n  }\\n} @keyframes loader_middle-slide-in_In2DU {\\n  0% {\\n    transform: translateY(50px);\\n    opacity: 0;\\n  }\\n\\n  33% {\\n    transform: translateY(50px);\\n    opacity: 0;\\n  }\\n\\n  66% {\\n    transform: translateY(0px);\\n    opacity: 1;\\n  }\\n} @keyframes loader_bottom-slide-in_2DZ1B {\\n  0% {\\n    transform: translateY(50px);\\n    opacity: 0;\\n  }\\n\\n  66% {\\n    transform: translateY(50px);\\n    opacity: 0;\\n  }\\n\\n  100% {\\n    transform: translateY(0px);\\n    opacity: 1;\\n  }\\n} @keyframes loader_top-slide-in-rtl_1vHi4 {\\n  0% {\\n    transform: translateY(50px) scaleX(-1);\\n    opacity: 0;\\n  }\\n\\n  33% {\\n    transform: translateY(0px) scaleX(-1);\\n    opacity: 1;\\n  }\\n  100% {\\n    transform: translateY(0px) scaleX(-1);\\n    opacity: 1;\\n  }\\n} @keyframes loader_middle-slide-in-rtl_21ALw {\\n  0% {\\n    transform: translateY(50px) scaleX(-1);\\n    opacity: 0;\\n  }\\n\\n  33% {\\n    transform: translateY(50px) scaleX(-1);\\n    opacity: 0;\\n  }\\n\\n  66% {\\n    transform: translateY(0px) scaleX(-1);\\n    opacity: 1;\\n  }\\n  100% {\\n    transform: translateY(0px) scaleX(-1);\\n    opacity: 1;\\n  }\\n} @keyframes loader_bottom-slide-in-rtl_3kdB0 {\\n  0% {\\n    transform: translateY(50px) scaleX(-1);\\n    opacity: 0;\\n  }\\n\\n  66% {\\n    transform: translateY(50px) scaleX(-1);\\n    opacity: 0;\\n  }\\n\\n  100% {\\n    transform: translateY(0px) scaleX(-1);\\n    opacity: 1;\\n  }\\n} .loader_title_1tlje {\\n    font-size: 2rem;\\n    font-weight: bold;\\n    margin: 0.75rem 0;\\n} .loader_message-container-outer_3oT0S {\\n    height: 30px;\\n    overflow: hidden;\\n} .loader_message-container-inner_1L7LX {\\n    transition: transform 0.5s;\\n} .loader_message_3yQvj {\\n    height: 20px;\\n    margin: 5px 0;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"background\": \"loader_background_2DPrW\",\n\t\"fullscreen\": \"loader_fullscreen_29EhP\",\n\t\"block-animation\": \"loader_block-animation_12MqO\",\n\t\"blockAnimation\": \"loader_block-animation_12MqO\",\n\t\"top-block\": \"loader_top-block_3P7pK\",\n\t\"topBlock\": \"loader_top-block_3P7pK\",\n\t\"top-slide-in\": \"loader_top-slide-in_8ngR8\",\n\t\"topSlideIn\": \"loader_top-slide-in_8ngR8\",\n\t\"middle-block\": \"loader_middle-block_CKcTg\",\n\t\"middleBlock\": \"loader_middle-block_CKcTg\",\n\t\"middle-slide-in\": \"loader_middle-slide-in_In2DU\",\n\t\"middleSlideIn\": \"loader_middle-slide-in_In2DU\",\n\t\"bottom-block\": \"loader_bottom-block_1-3rO\",\n\t\"bottomBlock\": \"loader_bottom-block_1-3rO\",\n\t\"bottom-slide-in\": \"loader_bottom-slide-in_2DZ1B\",\n\t\"bottomSlideIn\": \"loader_bottom-slide-in_2DZ1B\",\n\t\"top-slide-in-rtl\": \"loader_top-slide-in-rtl_1vHi4\",\n\t\"topSlideInRtl\": \"loader_top-slide-in-rtl_1vHi4\",\n\t\"middle-slide-in-rtl\": \"loader_middle-slide-in-rtl_21ALw\",\n\t\"middleSlideInRtl\": \"loader_middle-slide-in-rtl_21ALw\",\n\t\"bottom-slide-in-rtl\": \"loader_bottom-slide-in-rtl_3kdB0\",\n\t\"bottomSlideInRtl\": \"loader_bottom-slide-in-rtl_3kdB0\",\n\t\"title\": \"loader_title_1tlje\",\n\t\"message-container-outer\": \"loader_message-container-outer_3oT0S\",\n\t\"messageContainerOuter\": \"loader_message-container-outer_3oT0S\",\n\t\"message-container-inner\": \"loader_message-container-inner_1L7LX\",\n\t\"messageContainerInner\": \"loader_message-container-inner_1L7LX\",\n\t\"message\": \"loader_message_3yQvj\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* #855CD6 */ /* 35% transparent version of looks-tertiary */ /* 15% transparent version of looks-tertiary */ /* #714EB6 */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #0B8E69 */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .loupe_color-picker_1OaU- {\\n    position: absolute;\\n    border-radius: 100%;\\n    border: 4px solid hsla(0, 0%, 0%, 0.15);\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"color-picker\": \"loupe_color-picker_1OaU-\",\n\t\"colorPicker\": \"loupe_color-picker_1OaU-\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"@keyframes mic-indicator_popIn_2A2Un {\\n    from {transform: scale(0.5)}\\n    to {transform: scale(1)}\\n}\\n\\n.mic-indicator_mic-img_Su3yZ {\\n    margin: 10px;\\n    transform-origin: center;\\n    animation: mic-indicator_popIn_2A2Un 0.1s ease-in-out;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"mic-img\": \"mic-indicator_mic-img_Su3yZ\",\n\t\"micImg\": \"mic-indicator_mic-img_Su3yZ\",\n\t\"popIn\": \"mic-indicator_popIn_2A2Un\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* #855CD6 */ /* 35% transparent version of looks-tertiary */ /* 15% transparent version of looks-tertiary */ /* #714EB6 */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #0B8E69 */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ /*\\n    Contains constants for the z-index values of elements that are part of the global stack context.\\n    In other words, z-index values that are \\\"inside\\\" a component are not added here.\\n    This prevents conflicts between identical z-index values in different components.\\n*/ /* Toolbox z-index: 40; set in scratch-blocks */ /* tooltips should go over add buttons if they overlap */ /* monitors go over add buttons */ /* \\\"ask\\\" block text input goes above monitors */ /* menu-bar should go over monitors, alerts and tutorials */ /* Block drag z-index: 1000; default 50 is overriden in blocks.css */ /* so it is draggable into other panes */ /* in most interfaces, the context menu is always on top */ .modal_modal-overlay_1Lcbx {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    z-index: 510;\\n    background-color: hsla(215, 100%, 65%, 0.9);\\n} .modal_modal-content_1h3ll * {\\n    box-sizing: border-box;\\n} .modal_modal-content_1h3ll {\\n    margin: 100px auto;\\n    outline: none;\\n    border: 4px solid hsla(0, 100%, 100%, 0.25);\\n    padding: 0;\\n    border-radius: 0.5rem;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n    color: hsla(225, 15%, 40%, 1);\\n    overflow: hidden;\\n} .modal_modal-content_1h3ll.modal_full-screen_FA4cr {\\n    position: absolute;\\n\\n    display: flex;\\n    height: 100%;\\n    width: 100%;\\n\\n    overflow-y: auto;\\n    -webkit-overflow-scrolling: 'touch';\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n\\n    background-color: hsla(215, 75%, 95%, 1);\\n\\n    /* Default modal resets */\\n    margin: 0;\\n    border: none;\\n    border-radius: 0;\\n} /*\\n    Modal header has 3 items:\\n    |filter     title       x|\\n\\n    Use the same width for both side item containers,\\n    so that title remains centered\\n*/ .modal_header_1h7ps {\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: nowrap;\\n    justify-content: flex-start;\\n    height: 3.125rem;\\n\\n    box-sizing: border-box;\\n    width: 100%;\\n    background-color: hsla(260, 60%, 60%, 1);\\n\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n    font-size: 1rem;\\n    font-weight: normal;\\n} .modal_header-item_2zQTd {\\n    display: flex;\\n    align-items: center;\\n    padding: 1rem;\\n    text-decoration: none;\\n    color: hsla(0, 100%, 100%, 1);\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n} [dir=\\\"ltr\\\"] .modal_header-image_2KMDd {\\n    margin-right: 0.5rem;\\n} [dir=\\\"rtl\\\"] .modal_header-image_2KMDd {\\n    margin-left: 0.5rem;\\n} .modal_header-item-filter_3W-ah {\\n    display: flex;\\n    flex-basis: 20rem;\\n    justify-content: flex-start;\\n} .modal_header-item-title_tLOU5 {\\n    flex-grow: 1;\\n    flex-shrink: 0;\\n    justify-content: center;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    letter-spacing: 0.4px;\\n    cursor: default;\\n} [dir=\\\"ltr\\\"] .modal_header-item-title_tLOU5 {\\n    margin: 0 -20rem 0 0;\\n} [dir=\\\"rtl\\\"] .modal_header-item-title_tLOU5 {\\n    margin: 0 0 0 -20rem;\\n} .modal_full-screen_FA4cr [dir=\\\"ltr\\\"] .modal_header-item-title_tLOU5 {\\n    margin: 0 0 0 -20rem;\\n} .modal_full-screen_FA4cr [dir=\\\"rtl\\\"] .modal_header-item-title_tLOU5 {\\n    margin: 0 -20rem 0 0;\\n} .modal_header-item-close_2XDeL {\\n    flex-basis: 20rem;\\n    justify-content: flex-end;\\n    z-index: 1;\\n} .modal_full-screen_FA4cr .modal_header-item-close_2XDeL {\\n    order: -1;\\n    justify-content: flex-start;\\n} .modal_back-button_2ej6v {\\n    font-weight: normal;\\n    padding-right: 0;\\n    padding-left: 0;\\n} [dir=\\\"rtl\\\"] .modal_back-button_2ej6v img {\\n    transform: scaleX(-1);\\n} .modal_header-item-help_UZFrJ {\\n    padding: 0;\\n    z-index: 1;\\n} [dir=\\\"ltr\\\"] .modal_header-item-help_UZFrJ {\\n    margin-right: -4.75rem;\\n} [dir=\\\"rtl\\\"] .modal_header-item-help_UZFrJ {\\n    margin-left: -4.75rem;\\n} .modal_help-button_dLhZu {\\n    font-weight: normal;\\n    font-size: 0.75rem;\\n} [dir=\\\"ltr\\\"] .modal_help-button_dLhZu {\\n    padding-right: 0;\\n} [dir=\\\"rtl\\\"] .modal_help-button_dLhZu {\\n    padding-left: 0;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"modal-overlay\": \"modal_modal-overlay_1Lcbx\",\n\t\"modalOverlay\": \"modal_modal-overlay_1Lcbx\",\n\t\"modal-content\": \"modal_modal-content_1h3ll\",\n\t\"modalContent\": \"modal_modal-content_1h3ll\",\n\t\"full-screen\": \"modal_full-screen_FA4cr\",\n\t\"fullScreen\": \"modal_full-screen_FA4cr\",\n\t\"header\": \"modal_header_1h7ps\",\n\t\"header-item\": \"modal_header-item_2zQTd\",\n\t\"headerItem\": \"modal_header-item_2zQTd\",\n\t\"header-image\": \"modal_header-image_2KMDd\",\n\t\"headerImage\": \"modal_header-image_2KMDd\",\n\t\"header-item-filter\": \"modal_header-item-filter_3W-ah\",\n\t\"headerItemFilter\": \"modal_header-item-filter_3W-ah\",\n\t\"header-item-title\": \"modal_header-item-title_tLOU5\",\n\t\"headerItemTitle\": \"modal_header-item-title_tLOU5\",\n\t\"header-item-close\": \"modal_header-item-close_2XDeL\",\n\t\"headerItemClose\": \"modal_header-item-close_2XDeL\",\n\t\"back-button\": \"modal_back-button_2ej6v\",\n\t\"backButton\": \"modal_back-button_2ej6v\",\n\t\"header-item-help\": \"modal_header-item-help_UZFrJ\",\n\t\"headerItemHelp\": \"modal_header-item-help_UZFrJ\",\n\t\"help-button\": \"modal_help-button_dLhZu\",\n\t\"helpButton\": \"modal_help-button_dLhZu\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".monitor-list_monitor-list_20k-y {\\n    /* Width/height are set by the component, margin: auto centers in fullscreen */\\n    margin: auto;\\n    pointer-events: none;\\n    overflow: hidden;\\n}\\n\\n.monitor-list_monitor-list-scaler_143tA {\\n    /* Scaling for monitors should happen from the top left */\\n    transform-origin: left top;\\n}\\n\\n::-ms-clear { display: none; }\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"monitor-list\": \"monitor-list_monitor-list_20k-y\",\n\t\"monitorList\": \"monitor-list_monitor-list_20k-y\",\n\t\"monitor-list-scaler\": \"monitor-list_monitor-list-scaler_143tA\",\n\t\"monitorListScaler\": \"monitor-list_monitor-list-scaler_143tA\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* make sure to keep these in sync with other constants,\\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\\n\\n/* layout contants from `layout-constants.js` */\\n\\n/* #E5F0FF */\\n\\n/* #E9F1FC */\\n\\n/* #D9E3F2 */\\n\\n/* 90% transparent version of motion-primary */\\n\\n/* #FFFFFF */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 15% transparent version of black */\\n\\n/* #575E75 */\\n\\n/* #4C97FF */\\n\\n/* #3373CC */\\n\\n/* #855CD6 */\\n\\n/* 35% transparent version of looks-tertiary */\\n\\n/* 15% transparent version of looks-tertiary */\\n\\n/* #714EB6 */\\n\\n/* #FF661A */\\n\\n/* #E64D00 */\\n\\n/* #CF63CF */\\n\\n/* #BD42BD */\\n\\n/* #FFAB19 */\\n\\n/* #FF8C1A */\\n\\n/* #0FBD8C */\\n\\n/* #0FBD8C */\\n\\n/* #0B8E69 */\\n\\n/* #FF8C1A */\\n\\n/* #FFB366 */\\n\\n/* #FF8C1A */\\n\\n/* #0FBD8C */\\n\\n/* #0B8E69 */\\n\\n/* 35% transparent version of extensions-primary */\\n\\n/* opaque version of extensions-transparent, on white bg */\\n\\n/* lighter than motion-primary */\\n\\n/*\\n    Contains constants for the z-index values of elements that are part of the global stack context.\\n    In other words, z-index values that are \\\"inside\\\" a component are not added here.\\n    This prevents conflicts between identical z-index values in different components.\\n*/\\n\\n/* Toolbox z-index: 40; set in scratch-blocks */\\n\\n/* tooltips should go over add buttons if they overlap */\\n\\n/* monitors go over add buttons */\\n\\n/* \\\"ask\\\" block text input goes above monitors */\\n\\n/* menu-bar should go over monitors, alerts and tutorials */\\n\\n/* Block drag z-index: 1000; default 50 is overriden in blocks.css */\\n\\n/* so it is draggable into other panes */\\n\\n/* in most interfaces, the context menu is always on top */\\n\\n.monitor_monitor-container_2J9gl {\\n    position: absolute;\\n    background: hsla(215, 100%, 95%, 1);\\n    z-index: 48;\\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\\n    border-radius: calc(0.5rem / 2);\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n    font-size: 0.75rem;\\n    transition: box-shadow 0.2s;\\n    pointer-events: all;\\n    overflow: hidden;\\n}\\n\\n.monitor_monitor_11Vhm:hover {\\n    cursor: pointer;\\n}\\n\\n.monitor_dragging_2ZN-P {\\n    z-index: 1010;\\n    box-shadow: 3px 3px 5px #888888;\\n}\\n\\n.monitor_default-monitor_2vCcZ {\\n    display: flex;\\n    flex-direction: column;\\n    padding: 3px;\\n}\\n\\n.monitor_label_ci1ok {\\n    font-weight: bold;\\n    text-align: center;\\n    margin: 0 5px;\\n}\\n\\n.monitor_value_3Yexa {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    min-width: 40px;\\n    text-align: center;\\n    margin: 0 5px;\\n    border-radius: calc(0.5rem / 2);\\n    padding: 0 2px;\\n    white-space: pre-wrap;\\n    transform: translateZ(0); /* Fixes flickering in Safari */\\n}\\n\\n.monitor_large-value_P-rAm {\\n    min-height: 1.4rem;\\n    min-width: 3rem;\\n    padding: 0.1rem 0.25rem;\\n    text-align: center;\\n    font-size: 1rem;\\n    white-space: pre-wrap;\\n    transform: translateZ(0); /* Fixes flickering in Safari */\\n}\\n\\n.monitor_row_2y_kM {\\n    display: flex;\\n    flex-direction: row;\\n}\\n\\n.monitor_slider_1CHwk {\\n    width: 100%;\\n    transform: translateZ(0); /* Fixes flickering in Safari */\\n}\\n\\n.monitor_list-monitor_1FdIj {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.monitor_list-header_-cp0o {\\n    background: hsla(0, 100%, 100%, 1);\\n    border-bottom: 1px solid hsla(0, 0%, 0%, 0.15);\\n    text-align: center;\\n    padding: 3px;\\n    font-size: 0.75rem;\\n    font-weight: bold;\\n    color: hsla(225, 15%, 40%, 1);\\n    width: 100%;\\n}\\n\\n.monitor_list-body_2OFZ6 {\\n    background: hsla(215, 100%, 95%, 1);\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    overflow-x: hidden;\\n    height: calc(100% - 44px);\\n}\\n\\n.monitor_list-row_okCNn {\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-around;\\n    align-items: center;\\n    padding: 2px;\\n    flex-shrink: 0;\\n    transform: translateZ(0); /* Keep sharp when scaled */\\n}\\n\\n.monitor_list-index_7tKdl {\\n    font-weight: bold;\\n    color: hsla(225, 15%, 40%, 1);\\n    margin: 0 3px;\\n}\\n\\n.monitor_list-value_1zGfI {\\n    min-width: 40px;\\n    text-align: left;\\n    margin: 0 3px;\\n    border-radius: calc(0.5rem / 2);\\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\\n    flex-grow: 1;\\n    height: 22px;\\n}\\n\\n.monitor_list-footer_2HyG8 {\\n    background: hsla(0, 100%, 100%, 1);\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    padding: 3px;\\n    font-size: 0.75rem;\\n    font-weight: bold;\\n    color: hsla(225, 15%, 40%, 1);\\n}\\n\\n.monitor_list-empty_1UKsB {\\n    text-align: center;\\n    width: 100%;\\n    padding: 5px;\\n}\\n\\n.monitor_input-wrapper_2yExa {\\n    position: relative;\\n    overflow: hidden;\\n    display: flex;\\n    align-items: center;\\n    background: rgba(0, 0, 0, 0.1);\\n}\\n\\n.monitor_value-inner_3E9Ou {\\n    padding: 3px 5px;\\n    min-height: 22px;\\n    overflow: hidden; /* Don't let long values escape container */\\n    text-overflow: ellipsis;\\n    -webkit-user-select: text;\\n       -moz-user-select: text;\\n        -ms-user-select: text;\\n            user-select: text; /* Allow selecting list values for 2.0 compatibility, only relevant in player */\\n    white-space: pre;\\n}\\n\\n.monitor_list-input_3kw5o {\\n    padding: 3px 5px;\\n    border: 0;\\n    background: none;\\n    outline: none;\\n    font-size: 0.75rem;\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n    /* Workaround for Firefox */\\n    width: 0;\\n    flex: 1 1 auto;\\n}\\n\\n.monitor_remove-button_AhlwG {\\n    padding: 0;\\n    padding-right: 5px;\\n    cursor: pointer;\\n}\\n\\n.monitor_add-button_2lmvI {\\n    cursor: pointer;\\n    margin-right: 3px;\\n}\\n\\n.monitor_resize-handle_3WWBV {\\n    cursor: nwse-resize;\\n    margin-left: 3px;\\n}\\n\\n.monitor_footer-length_2_QAb {\\n    text-align: center;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"monitor-container\": \"monitor_monitor-container_2J9gl\",\n\t\"monitorContainer\": \"monitor_monitor-container_2J9gl\",\n\t\"monitor\": \"monitor_monitor_11Vhm\",\n\t\"dragging\": \"monitor_dragging_2ZN-P\",\n\t\"default-monitor\": \"monitor_default-monitor_2vCcZ\",\n\t\"defaultMonitor\": \"monitor_default-monitor_2vCcZ\",\n\t\"label\": \"monitor_label_ci1ok\",\n\t\"value\": \"monitor_value_3Yexa\",\n\t\"large-value\": \"monitor_large-value_P-rAm\",\n\t\"largeValue\": \"monitor_large-value_P-rAm\",\n\t\"row\": \"monitor_row_2y_kM\",\n\t\"slider\": \"monitor_slider_1CHwk\",\n\t\"list-monitor\": \"monitor_list-monitor_1FdIj\",\n\t\"listMonitor\": \"monitor_list-monitor_1FdIj\",\n\t\"list-header\": \"monitor_list-header_-cp0o\",\n\t\"listHeader\": \"monitor_list-header_-cp0o\",\n\t\"list-body\": \"monitor_list-body_2OFZ6\",\n\t\"listBody\": \"monitor_list-body_2OFZ6\",\n\t\"list-row\": \"monitor_list-row_okCNn\",\n\t\"listRow\": \"monitor_list-row_okCNn\",\n\t\"list-index\": \"monitor_list-index_7tKdl\",\n\t\"listIndex\": \"monitor_list-index_7tKdl\",\n\t\"list-value\": \"monitor_list-value_1zGfI\",\n\t\"listValue\": \"monitor_list-value_1zGfI\",\n\t\"list-footer\": \"monitor_list-footer_2HyG8\",\n\t\"listFooter\": \"monitor_list-footer_2HyG8\",\n\t\"list-empty\": \"monitor_list-empty_1UKsB\",\n\t\"listEmpty\": \"monitor_list-empty_1UKsB\",\n\t\"input-wrapper\": \"monitor_input-wrapper_2yExa\",\n\t\"inputWrapper\": \"monitor_input-wrapper_2yExa\",\n\t\"value-inner\": \"monitor_value-inner_3E9Ou\",\n\t\"valueInner\": \"monitor_value-inner_3E9Ou\",\n\t\"list-input\": \"monitor_list-input_3kw5o\",\n\t\"listInput\": \"monitor_list-input_3kw5o\",\n\t\"remove-button\": \"monitor_remove-button_AhlwG\",\n\t\"removeButton\": \"monitor_remove-button_AhlwG\",\n\t\"add-button\": \"monitor_add-button_2lmvI\",\n\t\"addButton\": \"monitor_add-button_2lmvI\",\n\t\"resize-handle\": \"monitor_resize-handle_3WWBV\",\n\t\"resizeHandle\": \"monitor_resize-handle_3WWBV\",\n\t\"footer-length\": \"monitor_footer-length_2_QAb\",\n\t\"footerLength\": \"monitor_footer-length_2_QAb\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* make sure to keep these in sync with other constants,\\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\\n\\n/* layout contants from `layout-constants.js` */\\n\\n/* #E5F0FF */\\n\\n/* #E9F1FC */\\n\\n/* #D9E3F2 */\\n\\n/* 90% transparent version of motion-primary */\\n\\n/* #FFFFFF */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 15% transparent version of black */\\n\\n/* #575E75 */\\n\\n/* #4C97FF */\\n\\n/* #3373CC */\\n\\n/* #855CD6 */\\n\\n/* 35% transparent version of looks-tertiary */\\n\\n/* 15% transparent version of looks-tertiary */\\n\\n/* #714EB6 */\\n\\n/* #FF661A */\\n\\n/* #E64D00 */\\n\\n/* #CF63CF */\\n\\n/* #BD42BD */\\n\\n/* #FFAB19 */\\n\\n/* #FF8C1A */\\n\\n/* #0FBD8C */\\n\\n/* #0FBD8C */\\n\\n/* #0B8E69 */\\n\\n/* #FF8C1A */\\n\\n/* #FFB366 */\\n\\n/* #FF8C1A */\\n\\n/* #0FBD8C */\\n\\n/* #0B8E69 */\\n\\n/* 35% transparent version of extensions-primary */\\n\\n/* opaque version of extensions-transparent, on white bg */\\n\\n/* lighter than motion-primary */\\n\\n.question_question-container_OuJwy {\\n    margin: 0.5rem;\\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\\n    border-radius: 0.5rem;\\n    border-width: 2px;\\n    padding: 1rem;\\n    background: white;\\n}\\n\\n.question_question-label_1tRo2 {\\n    font-size: 0.75rem;\\n    font-weight: bold;\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n    color: hsla(225, 15%, 40%, 1);\\n    padding-bottom: 0.5rem;\\n}\\n\\n.question_question-input_1oAB7 {\\n    display: flex; /* Keeps the input from going outside this container */\\n    position: relative;\\n}\\n\\n.question_question-submit-button_3nYah {\\n    position: absolute;\\n    top: calc(0.5rem / 2);\\n\\n    width: calc(2rem - 0.5rem);\\n    height: calc(2rem - 0.5rem);\\n\\n    border: none;\\n    border-radius: 100%;\\n\\n    color: white;\\n    background: hsla(260, 60%, 60%, 1);\\n}\\n\\n[dir=\\\"ltr\\\"] .question_question-submit-button_3nYah {\\n    right: calc(0.5rem / 2);\\n}\\n\\n[dir=\\\"rtl\\\"] .question_question-submit-button_3nYah {\\n    left: calc(0.5rem / 2);\\n}\\n\\n/* Input overrides: width, font-weight, focus outline and padding */\\n\\n.question_question-input_1oAB7 > input {\\n    width: 100%;\\n    font-weight: normal;\\n}\\n\\n[dir=\\\"ltr\\\"] .question_question-input_1oAB7 > input {\\n    padding: 0 2rem 0 .75rem; /* To make room for the submit button */\\n}\\n\\n[dir=\\\"rtl\\\"] .question_question-input_1oAB7 > input {\\n    padding: 0 .75rem 0 2rem; /* To make room for the submit button */\\n}\\n\\n.question_question-input_1oAB7 > input:focus {\\n    box-shadow: 0px 0px 0px 3px hsla(260, 60%, 60%, 0.35);\\n}\\n\\n.question_question-submit-button-icon_upm57 {\\n    width: calc(2rem - 0.5rem);\\n    height: calc(2rem - 0.5rem);\\n    position: relative;\\n    right: -7px;\\n    left: -7px;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"question-container\": \"question_question-container_OuJwy\",\n\t\"questionContainer\": \"question_question-container_OuJwy\",\n\t\"question-label\": \"question_question-label_1tRo2\",\n\t\"questionLabel\": \"question_question-label_1tRo2\",\n\t\"question-input\": \"question_question-input_1oAB7\",\n\t\"questionInput\": \"question_question-input_1oAB7\",\n\t\"question-submit-button\": \"question_question-submit-button_3nYah\",\n\t\"questionSubmitButton\": \"question_question-submit-button_3nYah\",\n\t\"question-submit-button-icon\": \"question_question-submit-button-icon_upm57\",\n\t\"questionSubmitButtonIcon\": \"question_question-submit-button-icon_upm57\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* #855CD6 */ /* 35% transparent version of looks-tertiary */ /* 15% transparent version of looks-tertiary */ /* #714EB6 */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #0B8E69 */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ .slider-prompt_modal-content_2vVm4 {\\n    width: 360px;\\n} .slider-prompt_body_2ZkXL {\\n    background: hsla(0, 100%, 100%, 1);\\n    padding: 1.5rem 2.25rem;\\n} .slider-prompt_label_cYsiu {\\n    font-weight: 500;\\n    margin: 0 0 0.75rem;\\n} .slider-prompt_min-input_1IxXX, .slider-prompt_max-input_1Nwbv {\\n    margin-bottom: 1.5rem;\\n    width: 100%;\\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\\n    border-radius: 5px;\\n    padding: 0 1rem;\\n    height: 3rem;\\n    color: hsla(225, 15%, 40%, 0.75);\\n    font-size: .875rem;\\n} .slider-prompt_button-row_32aCX {\\n    font-weight: bolder;\\n    text-align: right;\\n} .slider-prompt_button-row_32aCX button {\\n    padding: 0.75rem 1rem;\\n    border-radius: 0.25rem;\\n    background: white;\\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\\n    font-weight: 600;\\n    font-size: 0.85rem;\\n} .slider-prompt_button-row_32aCX button.slider-prompt_ok-button_vLj7c {\\n    background: hsla(260, 60%, 60%, 1);\\n    border: hsla(260, 60%, 60%, 1);\\n    color: white;\\n} [dir=\\\"ltr\\\"] .slider-prompt_button-row_32aCX button + button {\\n    margin-left: 0.5rem;\\n} [dir=\\\"rtl\\\"] .slider-prompt_button-row_32aCX button + button {\\n    margin-right: 0.5rem;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"modal-content\": \"slider-prompt_modal-content_2vVm4\",\n\t\"modalContent\": \"slider-prompt_modal-content_2vVm4\",\n\t\"body\": \"slider-prompt_body_2ZkXL\",\n\t\"label\": \"slider-prompt_label_cYsiu\",\n\t\"min-input\": \"slider-prompt_min-input_1IxXX\",\n\t\"minInput\": \"slider-prompt_min-input_1IxXX\",\n\t\"max-input\": \"slider-prompt_max-input_1Nwbv\",\n\t\"maxInput\": \"slider-prompt_max-input_1Nwbv\",\n\t\"button-row\": \"slider-prompt_button-row_32aCX\",\n\t\"buttonRow\": \"slider-prompt_button-row_32aCX\",\n\t\"ok-button\": \"slider-prompt_ok-button_vLj7c\",\n\t\"okButton\": \"slider-prompt_ok-button_vLj7c\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* #855CD6 */ /* 35% transparent version of looks-tertiary */ /* 15% transparent version of looks-tertiary */ /* #714EB6 */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #0B8E69 */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .spinner_spinner_2Op8D {\\n    width: 1.25rem;\\n    height: 1.25rem;\\n    display: inline-block;\\n    position: relative;\\n    border-radius: 50%;\\n    border-width: .1875rem;\\n    border-style: solid;\\n    border-color: hsla(0, 100%, 100%, 0.25);\\n    box-sizing: content-box;\\n} .spinner_spinner_2Op8D::before, .spinner_spinner_2Op8D::after {\\n    width: 1.25rem;\\n    height: 1.25rem;\\n    content: '';\\n    border-radius: 50%;\\n    display: block;\\n} .spinner_spinner_2Op8D::after {\\n    position: absolute;\\n    top: -.1875rem;\\n    left: -.1875rem;\\n    border: .1875rem solid transparent;\\n    border-top-color: hsla(0, 100%, 100%, 1);\\n    animation: spinner_spin_1ge20 1.5s cubic-bezier(0.4, 0.1, 0.4, 1) infinite;\\n} .spinner_small_1RsxO {\\n    width: .5rem;\\n    height: .5rem;\\n} .spinner_small_1RsxO::before, .spinner_small_1RsxO::after {\\n    width: .5rem;\\n    height: .5rem;\\n} .spinner_large_M0-Ov {\\n    width: 2.5rem;\\n    height: 2.5rem;\\n} .spinner_large_M0-Ov::before, .spinner_large_M0-Ov::after {\\n    width: 2.5rem;\\n    height: 2.5rem;\\n} @keyframes spinner_spin_1ge20 {\\n  0% {\\n    transform: rotate(0deg);\\n  }\\n\\n  100% {\\n    transform: rotate(360deg);\\n  }\\n} .spinner_spinner_2Op8D.spinner_success_2bEvy {\\n    border-color: hsla(163, 85%, 40%, 0.35);\\n} .spinner_spinner_2Op8D.spinner_success_2bEvy::after {\\n    border-top-color: hsla(163, 85%, 40%, 1);\\n} .spinner_spinner_2Op8D.spinner_warn_3KZAv {\\n    border-color: hsla(30, 100%, 55%, 0.25);\\n} .spinner_spinner_2Op8D.spinner_warn_3KZAv::after {\\n    border-top-color: hsla(30, 100%, 55%, 1);\\n} .spinner_spinner_2Op8D.spinner_info_2g2-l {\\n    border-color: hsla(0, 100%, 100%, 0.25);\\n} .spinner_spinner_2Op8D.spinner_info_2g2-l::after {\\n    border-top-color: hsla(0, 100%, 100%, 1);\\n} .spinner_spinner_2Op8D.spinner_primary_32PLs {\\n    border-color: hsla(260, 60%, 60%, 0.35);\\n} .spinner_spinner_2Op8D.spinner_primary_32PLs::after {\\n    border-top-color: hsla(260, 60%, 60%, 1);\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"spinner\": \"spinner_spinner_2Op8D\",\n\t\"spin\": \"spinner_spin_1ge20\",\n\t\"small\": \"spinner_small_1RsxO\",\n\t\"large\": \"spinner_large_M0-Ov\",\n\t\"success\": \"spinner_success_2bEvy\",\n\t\"warn\": \"spinner_warn_3KZAv\",\n\t\"info\": \"spinner_info_2g2-l\",\n\t\"primary\": \"spinner_primary_32PLs\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* make sure to keep these in sync with other constants,\\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\\n\\n/* layout contants from `layout-constants.js` */\\n\\n/* #E5F0FF */\\n\\n/* #E9F1FC */\\n\\n/* #D9E3F2 */\\n\\n/* 90% transparent version of motion-primary */\\n\\n/* #FFFFFF */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 15% transparent version of black */\\n\\n/* #575E75 */\\n\\n/* #4C97FF */\\n\\n/* #3373CC */\\n\\n/* #855CD6 */\\n\\n/* 35% transparent version of looks-tertiary */\\n\\n/* 15% transparent version of looks-tertiary */\\n\\n/* #714EB6 */\\n\\n/* #FF661A */\\n\\n/* #E64D00 */\\n\\n/* #CF63CF */\\n\\n/* #BD42BD */\\n\\n/* #FFAB19 */\\n\\n/* #FF8C1A */\\n\\n/* #0FBD8C */\\n\\n/* #0FBD8C */\\n\\n/* #0B8E69 */\\n\\n/* #FF8C1A */\\n\\n/* #FFB366 */\\n\\n/* #FF8C1A */\\n\\n/* #0FBD8C */\\n\\n/* #0B8E69 */\\n\\n/* 35% transparent version of extensions-primary */\\n\\n/* opaque version of extensions-transparent, on white bg */\\n\\n/* lighter than motion-primary */\\n\\n/*\\n    Contains constants for the z-index values of elements that are part of the global stack context.\\n    In other words, z-index values that are \\\"inside\\\" a component are not added here.\\n    This prevents conflicts between identical z-index values in different components.\\n*/\\n\\n/* Toolbox z-index: 40; set in scratch-blocks */\\n\\n/* tooltips should go over add buttons if they overlap */\\n\\n/* monitors go over add buttons */\\n\\n/* \\\"ask\\\" block text input goes above monitors */\\n\\n/* menu-bar should go over monitors, alerts and tutorials */\\n\\n/* Block drag z-index: 1000; default 50 is overriden in blocks.css */\\n\\n/* so it is draggable into other panes */\\n\\n/* in most interfaces, the context menu is always on top */\\n\\n.stage-header_stage-header-wrapper_1F4gT {\\n    position: relative;\\n}\\n\\n.stage-header_stage-header-wrapper-overlay_5vfJa {\\n    position: fixed;\\n    background-color: rgb(232, 237, 241);\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    z-index: 5000;\\n}\\n\\n.stage-header_stage-menu-wrapper_15JJt {\\n    display: flex;\\n    margin: auto;\\n    justify-content: space-between;\\n    flex-shrink: 0;\\n    align-items: center;\\n    height: 2.75rem;\\n    padding-top: 0.5rem;\\n    padding-bottom: 0.5rem;\\n}\\n\\n.stage-header_embed-scratch-logo_2K5GA img {\\n    height:  1.6rem;\\n    vertical-align: middle;\\n    opacity: .6;\\n}\\n\\n.stage-header_stage-size-row_14N65 {\\n    display: flex;\\n}\\n\\n.stage-header_stage-size-toggle-group_17LtK {\\n    display: flex;\\n}\\n\\n.stage-header_stage-size-row_14N65 > *, .stage-header_unselect-wrapper_1leRy {\\n    /* Use a white background so semi-transparent selection states look correct */\\n    background-color: hsla(0, 100%, 100%, 1);\\n    border-radius: calc(0.5rem / 2);\\n}\\n\\n[dir=\\\"ltr\\\"] .stage-header_stage-size-toggle-group_17LtK {\\n    margin-right: .2rem;\\n}\\n\\n[dir=\\\"rtl\\\"] .stage-header_stage-size-toggle-group_17LtK {\\n    margin-left: .2rem;\\n}\\n\\n.stage-header_stage-button_hkl9B {\\n    display: block;\\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\\n    border-radius: calc(0.5rem / 2);\\n    width: calc(2rem + 2px);\\n    height: calc(2rem + 2px);\\n    background: hsla(0, 100%, 100%, 1);\\n    padding: 0.375rem;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    cursor: pointer;\\n}\\n\\n.stage-header_stage-button_hkl9B:active {\\n    background-color: hsla(260, 60%, 60%, 0.35);\\n}\\n\\n.stage-header_stage-button-icon_3zzFK {\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n[dir=\\\"rtl\\\"] .stage-header_stage-button-icon_3zzFK {\\n    transform: scaleX(-1);\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"stage-header-wrapper\": \"stage-header_stage-header-wrapper_1F4gT\",\n\t\"stageHeaderWrapper\": \"stage-header_stage-header-wrapper_1F4gT\",\n\t\"stage-header-wrapper-overlay\": \"stage-header_stage-header-wrapper-overlay_5vfJa\",\n\t\"stageHeaderWrapperOverlay\": \"stage-header_stage-header-wrapper-overlay_5vfJa\",\n\t\"stage-menu-wrapper\": \"stage-header_stage-menu-wrapper_15JJt\",\n\t\"stageMenuWrapper\": \"stage-header_stage-menu-wrapper_15JJt\",\n\t\"embed-scratch-logo\": \"stage-header_embed-scratch-logo_2K5GA\",\n\t\"embedScratchLogo\": \"stage-header_embed-scratch-logo_2K5GA\",\n\t\"stage-size-row\": \"stage-header_stage-size-row_14N65\",\n\t\"stageSizeRow\": \"stage-header_stage-size-row_14N65\",\n\t\"stage-size-toggle-group\": \"stage-header_stage-size-toggle-group_17LtK\",\n\t\"stageSizeToggleGroup\": \"stage-header_stage-size-toggle-group_17LtK\",\n\t\"unselect-wrapper\": \"stage-header_unselect-wrapper_1leRy\",\n\t\"unselectWrapper\": \"stage-header_unselect-wrapper_1leRy\",\n\t\"stage-button\": \"stage-header_stage-button_hkl9B\",\n\t\"stageButton\": \"stage-header_stage-button_hkl9B\",\n\t\"stage-button-icon\": \"stage-header_stage-button-icon_3zzFK\",\n\t\"stageButtonIcon\": \"stage-header_stage-button-icon_3zzFK\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* make sure to keep these in sync with other constants,\\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\\n\\n/* layout contants from `layout-constants.js` */\\n\\n/* #E5F0FF */\\n\\n/* #E9F1FC */\\n\\n/* #D9E3F2 */\\n\\n/* 90% transparent version of motion-primary */\\n\\n/* #FFFFFF */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 15% transparent version of black */\\n\\n/* #575E75 */\\n\\n/* #4C97FF */\\n\\n/* #3373CC */\\n\\n/* #855CD6 */\\n\\n/* 35% transparent version of looks-tertiary */\\n\\n/* 15% transparent version of looks-tertiary */\\n\\n/* #714EB6 */\\n\\n/* #FF661A */\\n\\n/* #E64D00 */\\n\\n/* #CF63CF */\\n\\n/* #BD42BD */\\n\\n/* #FFAB19 */\\n\\n/* #FF8C1A */\\n\\n/* #0FBD8C */\\n\\n/* #0FBD8C */\\n\\n/* #0B8E69 */\\n\\n/* #FF8C1A */\\n\\n/* #FFB366 */\\n\\n/* #FF8C1A */\\n\\n/* #0FBD8C */\\n\\n/* #0B8E69 */\\n\\n/* 35% transparent version of extensions-primary */\\n\\n/* opaque version of extensions-transparent, on white bg */\\n\\n/* lighter than motion-primary */\\n\\n/*\\n    Contains constants for the z-index values of elements that are part of the global stack context.\\n    In other words, z-index values that are \\\"inside\\\" a component are not added here.\\n    This prevents conflicts between identical z-index values in different components.\\n*/\\n\\n/* Toolbox z-index: 40; set in scratch-blocks */\\n\\n/* tooltips should go over add buttons if they overlap */\\n\\n/* monitors go over add buttons */\\n\\n/* \\\"ask\\\" block text input goes above monitors */\\n\\n/* menu-bar should go over monitors, alerts and tutorials */\\n\\n/* Block drag z-index: 1000; default 50 is overriden in blocks.css */\\n\\n/* so it is draggable into other panes */\\n\\n/* in most interfaces, the context menu is always on top */\\n\\n.stage-wrapper_stage-wrapper_2bejr * {\\n    box-sizing: border-box;\\n}\\n\\n.stage-wrapper_stage-canvas-wrapper_3ewmd {\\n    /* Hides negative space between edge of rounded corners + container, when selected */\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n}\\n\\n.stage-wrapper_stage-wrapper_2bejr.stage-wrapper_full-screen_2hjMb {\\n    position: fixed;\\n    top: 2.75rem;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    z-index: 5000;\\n    background-color: hsla(0, 100%, 100%, 1);\\n    /* spacing between stage and control bar (on the top), or between\\n    stage and window edges (on left/right/bottom) */\\n    padding: 0.1875rem;\\n\\n    /* this centers the stage */\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"stage-wrapper\": \"stage-wrapper_stage-wrapper_2bejr\",\n\t\"stageWrapper\": \"stage-wrapper_stage-wrapper_2bejr\",\n\t\"stage-canvas-wrapper\": \"stage-wrapper_stage-canvas-wrapper_3ewmd\",\n\t\"stageCanvasWrapper\": \"stage-wrapper_stage-canvas-wrapper_3ewmd\",\n\t\"full-screen\": \"stage-wrapper_full-screen_2hjMb\",\n\t\"fullScreen\": \"stage-wrapper_full-screen_2hjMb\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* make sure to keep these in sync with other constants,\\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\\n\\n/* layout contants from `layout-constants.js` */\\n\\n/* #E5F0FF */\\n\\n/* #E9F1FC */\\n\\n/* #D9E3F2 */\\n\\n/* 90% transparent version of motion-primary */\\n\\n/* #FFFFFF */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 15% transparent version of black */\\n\\n/* #575E75 */\\n\\n/* #4C97FF */\\n\\n/* #3373CC */\\n\\n/* #855CD6 */\\n\\n/* 35% transparent version of looks-tertiary */\\n\\n/* 15% transparent version of looks-tertiary */\\n\\n/* #714EB6 */\\n\\n/* #FF661A */\\n\\n/* #E64D00 */\\n\\n/* #CF63CF */\\n\\n/* #BD42BD */\\n\\n/* #FFAB19 */\\n\\n/* #FF8C1A */\\n\\n/* #0FBD8C */\\n\\n/* #0FBD8C */\\n\\n/* #0B8E69 */\\n\\n/* #FF8C1A */\\n\\n/* #FFB366 */\\n\\n/* #FF8C1A */\\n\\n/* #0FBD8C */\\n\\n/* #0B8E69 */\\n\\n/* 35% transparent version of extensions-primary */\\n\\n/* opaque version of extensions-transparent, on white bg */\\n\\n/* lighter than motion-primary */\\n\\n/*\\n    Contains constants for the z-index values of elements that are part of the global stack context.\\n    In other words, z-index values that are \\\"inside\\\" a component are not added here.\\n    This prevents conflicts between identical z-index values in different components.\\n*/\\n\\n/* Toolbox z-index: 40; set in scratch-blocks */\\n\\n/* tooltips should go over add buttons if they overlap */\\n\\n/* monitors go over add buttons */\\n\\n/* \\\"ask\\\" block text input goes above monitors */\\n\\n/* menu-bar should go over monitors, alerts and tutorials */\\n\\n/* Block drag z-index: 1000; default 50 is overriden in blocks.css */\\n\\n/* so it is draggable into other panes */\\n\\n/* in most interfaces, the context menu is always on top */\\n\\n.stage_stage_1fD7k {\\n    /*\\n        Fixes a few extra pixels of margin/padding, that adds on to the bottom\\n        of the element, which messes up the chrome padding consistency\\n    */\\n    display: block;\\n\\n    border-radius: 0.5rem;\\n    border: 0.0625rem solid hsla(0, 0%, 0%, 0.15);\\n    overflow: hidden;\\n\\n    /* @todo: This is for overriding the value being set somewhere. Where is it being set? */\\n    background-color: transparent;\\n\\n    /* Allow custom touch handling to prevent scrolling on Edge */\\n    touch-action: none;\\n\\n    /* Make sure border is not included in size calculation */\\n    box-sizing: content-box !important;\\n\\n    /* enforce overflow + reset position of absolutely-positioned children */\\n    position: relative;\\n}\\n\\n.stage_stage_1fD7k.stage_full-screen_ZO7xi {\\n    border: 0.1875rem solid rgb(126, 133, 151);\\n}\\n\\n.stage_with-color-picker_1lNd5 {\\n    cursor: none;\\n    z-index: 2010;\\n}\\n\\n.stage_color-picker-background_2wCVq {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    background-color: rgba(0, 0, 0, 0.55);\\n    display: block;\\n    z-index: 2000;\\n    top: 0;\\n    left: 0;\\n}\\n\\n.stage_stage-wrapper_eRRuk {\\n    position: relative;\\n}\\n\\n/* we want stage overlays to all be positioned in the same spot as the stage, but can't put them inside the border\\nbecause we want their overflow to be visible, and the bordered element must have overflow: hidden set so that the\\nstage doesn't \\\"spill\\\" out from under its rounded corners. instead, shift these over by the border width. */\\n\\n.stage_stage-overlays_eE14L {\\n    position: absolute;\\n    top: 0.0625rem;\\n    left: 0.0625rem;\\n\\n    /* the overlay itself should not capture pointer events; only its child elements can do that */\\n    pointer-events: none;\\n}\\n\\n.stage_stage-overlays_eE14L.stage_full-screen_ZO7xi {\\n    top: 0.1875rem;\\n    left: 0.1875rem;\\n}\\n\\n.stage_monitor-wrapper_2w6m8,\\n.stage_frame-wrapper_1JaS_,\\n.stage_green-flag-overlay-wrapper_2hUi_ {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    pointer-events: none;\\n}\\n\\n.stage_dragging-sprite_pxcJj {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    z-index: 1020;\\n    filter: drop-shadow(5px 5px 5px hsla(0, 0%, 0%, 0.15));\\n}\\n\\n.stage_stage-bottom-wrapper_KIBfo {\\n    position: absolute;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: flex-end;\\n    top: 0;\\n    left: 0;\\n    overflow: hidden;\\n    pointer-events: none;\\n}\\n\\n.stage_mic-indicator_3AvN8 {\\n    transform-origin: bottom right;\\n    z-index: 45;\\n    pointer-events: none;\\n    align-self: flex-end;\\n}\\n\\n.stage_question-wrapper_3ukB4 {\\n    z-index: 49;\\n    pointer-events: auto;\\n}\\n\\n.stage_frame_OVq5G {\\n    background: hsla(260, 60%, 60%, 0.35);\\n    border: 2px solid hsla(260, 60%, 60%, 1);\\n    border-radius: 0.5rem;\\n    animation-name: stage_flash_iuAnU;\\n    animation-duration: 0.75s;\\n    animation-fill-mode: forwards; /* Leave at 0 opacity after animation */\\n}\\n\\n.stage_green-flag-overlay-wrapper_2hUi_ {\\n    width: 100%;\\n    height: 100%;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    background: rgba(0,0,0,0.25);\\n    border-radius: 0.5rem;\\n    pointer-events: all;\\n    cursor: pointer;\\n}\\n\\n.stage_green-flag-overlay_gNXnv {\\n    padding: 1rem;\\n    border-radius: 100%;\\n    background: rgba(255,255,255,0.75);\\n    border: 3px solid hsla(0, 100%, 100%, 1);\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    box-sizing: border-box;\\n    width: 5rem;\\n    height: 5rem;\\n}\\n\\n.stage_green-flag-overlay_gNXnv > img {\\n    width: 100%;\\n    object-fit: contain;\\n}\\n\\n@keyframes stage_flash_iuAnU {\\n    0% { opacity: 1; }\\n    100% { opacity: 0; }\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"stage\": \"stage_stage_1fD7k\",\n\t\"full-screen\": \"stage_full-screen_ZO7xi\",\n\t\"fullScreen\": \"stage_full-screen_ZO7xi\",\n\t\"with-color-picker\": \"stage_with-color-picker_1lNd5\",\n\t\"withColorPicker\": \"stage_with-color-picker_1lNd5\",\n\t\"color-picker-background\": \"stage_color-picker-background_2wCVq\",\n\t\"colorPickerBackground\": \"stage_color-picker-background_2wCVq\",\n\t\"stage-wrapper\": \"stage_stage-wrapper_eRRuk\",\n\t\"stageWrapper\": \"stage_stage-wrapper_eRRuk\",\n\t\"stage-overlays\": \"stage_stage-overlays_eE14L\",\n\t\"stageOverlays\": \"stage_stage-overlays_eE14L\",\n\t\"monitor-wrapper\": \"stage_monitor-wrapper_2w6m8\",\n\t\"monitorWrapper\": \"stage_monitor-wrapper_2w6m8\",\n\t\"frame-wrapper\": \"stage_frame-wrapper_1JaS_\",\n\t\"frameWrapper\": \"stage_frame-wrapper_1JaS_\",\n\t\"green-flag-overlay-wrapper\": \"stage_green-flag-overlay-wrapper_2hUi_\",\n\t\"greenFlagOverlayWrapper\": \"stage_green-flag-overlay-wrapper_2hUi_\",\n\t\"dragging-sprite\": \"stage_dragging-sprite_pxcJj\",\n\t\"draggingSprite\": \"stage_dragging-sprite_pxcJj\",\n\t\"stage-bottom-wrapper\": \"stage_stage-bottom-wrapper_KIBfo\",\n\t\"stageBottomWrapper\": \"stage_stage-bottom-wrapper_KIBfo\",\n\t\"mic-indicator\": \"stage_mic-indicator_3AvN8\",\n\t\"micIndicator\": \"stage_mic-indicator_3AvN8\",\n\t\"question-wrapper\": \"stage_question-wrapper_3ukB4\",\n\t\"questionWrapper\": \"stage_question-wrapper_3ukB4\",\n\t\"frame\": \"stage_frame_OVq5G\",\n\t\"flash\": \"stage_flash_iuAnU\",\n\t\"green-flag-overlay\": \"stage_green-flag-overlay_gNXnv\",\n\t\"greenFlagOverlay\": \"stage_green-flag-overlay_gNXnv\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* #855CD6 */ /* 35% transparent version of looks-tertiary */ /* 15% transparent version of looks-tertiary */ /* #714EB6 */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #0B8E69 */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .stop-all_stop-all_1Y8P9 {\\n    width: 2rem;\\n    height: 2rem;\\n    padding: 0.375rem;\\n    border-radius: 0.25rem;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    cursor: pointer;\\n} .stop-all_stop-all_1Y8P9:hover {\\n    background-color: hsla(260, 60%, 60%, 0.15);\\n} .stop-all_stop-all_1Y8P9 {\\n    opacity: 0.5;\\n} .stop-all_stop-all_1Y8P9.stop-all_is-active_3nog0 {\\n    opacity: 1;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"stop-all\": \"stop-all_stop-all_1Y8P9\",\n\t\"stopAll\": \"stop-all_stop-all_1Y8P9\",\n\t\"is-active\": \"stop-all_is-active_3nog0\",\n\t\"isActive\": \"stop-all_is-active_3nog0\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* make sure to keep these in sync with other constants,\\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\\n\\n/* layout contants from `layout-constants.js` */\\n\\n/* #E5F0FF */\\n\\n/* #E9F1FC */\\n\\n/* #D9E3F2 */\\n\\n/* 90% transparent version of motion-primary */\\n\\n/* #FFFFFF */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 25% transparent version of ui-white */\\n\\n/* 15% transparent version of black */\\n\\n/* #575E75 */\\n\\n/* #4C97FF */\\n\\n/* #3373CC */\\n\\n/* #855CD6 */\\n\\n/* 35% transparent version of looks-tertiary */\\n\\n/* 15% transparent version of looks-tertiary */\\n\\n/* #714EB6 */\\n\\n/* #FF661A */\\n\\n/* #E64D00 */\\n\\n/* #CF63CF */\\n\\n/* #BD42BD */\\n\\n/* #FFAB19 */\\n\\n/* #FF8C1A */\\n\\n/* #0FBD8C */\\n\\n/* #0FBD8C */\\n\\n/* #0B8E69 */\\n\\n/* #FF8C1A */\\n\\n/* #FFB366 */\\n\\n/* #FF8C1A */\\n\\n/* #0FBD8C */\\n\\n/* #0B8E69 */\\n\\n/* 35% transparent version of extensions-primary */\\n\\n/* opaque version of extensions-transparent, on white bg */\\n\\n/* lighter than motion-primary */\\n\\n.toggle-buttons_row_2j-Rm {\\n    display: flex;\\n    flex-direction: row;\\n}\\n\\n.toggle-buttons_button_1ZBU8 {\\n    margin: 0;\\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\\n    background: none;\\n    outline: none;\\n    cursor: pointer;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    position: relative;\\n    width: 34px;\\n    height: 34px;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.toggle-buttons_button_1ZBU8 > img {\\n    display: block;\\n    transition: transform 0.1s;\\n    filter: grayscale(100%) opacity(.5);\\n}\\n\\n.toggle-buttons_button_1ZBU8:not(:last-child) {\\n    border-right: none;\\n}\\n\\n[dir=\\\"rtl\\\"] .toggle-buttons_button_1ZBU8:not(:last-child) {\\n    border-left: none;\\n    border-right: 1px solid hsla(0, 0%, 0%, 0.15);\\n}\\n\\n.toggle-buttons_button_1ZBU8:focus::before {\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: -1px;\\n    right: -1px;\\n    bottom: -1px;\\n    left: -1px;\\n    border: 1px solid hsla(260, 60%, 60%, 1);\\n}\\n\\n/* round corners for first and last buttons */\\n\\n.toggle-buttons_button_1ZBU8:first-child,\\n[dir=\\\"rtl\\\"] .toggle-buttons_button_1ZBU8:last-child,\\n.toggle-buttons_button_1ZBU8:first-child:focus::before,\\n[dir=\\\"rtl\\\"] .toggle-buttons_button_1ZBU8:last-child:focus::before {\\n    border-radius: calc(0.5rem / 2) 0 0 calc(0.5rem / 2);\\n}\\n\\n.toggle-buttons_button_1ZBU8:last-child,\\n[dir=\\\"rtl\\\"] .toggle-buttons_button_1ZBU8:first-child,\\n.toggle-buttons_button_1ZBU8:last-child:focus::before,\\n[dir=\\\"rtl\\\"] .toggle-buttons_button_1ZBU8:first-child:focus::before {\\n    border-radius: 0 calc(0.5rem / 2) calc(0.5rem / 2) 0;\\n}\\n\\n/* selected button styling */\\n\\n.toggle-buttons_button_1ZBU8[aria-pressed='true'] {\\n    background-color: hsla(260, 60%, 60%, 0.15);\\n}\\n\\n.toggle-buttons_button_1ZBU8[aria-pressed='true'] > img {\\n    filter: none;\\n}\\n\\n/* pressed button styling */\\n\\n.toggle-buttons_button_1ZBU8:active {\\n    background-color: hsla(260, 60%, 60%, 0.35);\\n}\\n\\n/* disabled styling */\\n\\n.toggle-buttons_disabled_2teyj .toggle-buttons_button_1ZBU8 {\\n    cursor: default;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"row\": \"toggle-buttons_row_2j-Rm\",\n\t\"button\": \"toggle-buttons_button_1ZBU8\",\n\t\"disabled\": \"toggle-buttons_disabled_2teyj\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* #855CD6 */ /* 35% transparent version of looks-tertiary */ /* 15% transparent version of looks-tertiary */ /* #714EB6 */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #0B8E69 */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .turbo-mode_turbo-container_2ZNcq {\\n    display: flex;\\n    align-items: center;\\n    padding: 0.25rem;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n} .turbo-mode_turbo-icon_fjr8U {\\n    margin: 0.25rem;\\n} .turbo-mode_turbo-label_-1oMs {\\n    font-size: 0.625rem;\\n    font-weight: bold;\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n    color: hsla(38, 100%, 55%, 1);\\n    white-space: nowrap;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"turbo-container\": \"turbo-mode_turbo-container_2ZNcq\",\n\t\"turboContainer\": \"turbo-mode_turbo-container_2ZNcq\",\n\t\"turbo-icon\": \"turbo-mode_turbo-icon_fjr8U\",\n\t\"turboIcon\": \"turbo-mode_turbo-icon_fjr8U\",\n\t\"turbo-label\": \"turbo-mode_turbo-label_-1oMs\",\n\t\"turboLabel\": \"turbo-mode_turbo-label_-1oMs\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_GET_URL_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/getUrl.js\");\nvar ___CSS_LOADER_URL_IMPORT_0___ = require(\"./unsupported.png\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\nexports.push([module.id, \"/* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* #855CD6 */ /* 35% transparent version of looks-tertiary */ /* 15% transparent version of looks-tertiary */ /* #714EB6 */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #0B8E69 */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ body {\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n} h2 {\\n    font-size: 1.5rem;\\n    font-weight: bold;\\n} p {\\n    font-size: 1rem;\\n    line-height: 1.5em;\\n} /*\\n    Contains constants for the z-index values of elements that are part of the global stack context.\\n    In other words, z-index values that are \\\"inside\\\" a component are not added here.\\n    This prevents conflicts between identical z-index values in different components.\\n*/ /* Toolbox z-index: 40; set in scratch-blocks */ /* tooltips should go over add buttons if they overlap */ /* monitors go over add buttons */ /* \\\"ask\\\" block text input goes above monitors */ /* menu-bar should go over monitors, alerts and tutorials */ /* Block drag z-index: 1000; default 50 is overriden in blocks.css */ /* so it is draggable into other panes */ /* in most interfaces, the context menu is always on top */ .webgl-modal_modal-overlay_2yidY {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    z-index: 510;\\n    background-color: hsla(215, 100%, 65%, 0.9);\\n} .webgl-modal_modal-content_rn15F {\\n    margin: 100px auto;\\n    outline: none;\\n    border: .25rem solid hsla(0, 100%, 100%, 0.25);\\n    padding: 0;\\n    border-radius: 0.5rem;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    width: 500px;\\n\\n    color: hsla(225, 15%, 40%, 1);\\n    overflow: hidden;\\n} .webgl-modal_illustration_2ReF1 {\\n    width: 100%;\\n    height: 208px;\\n    background-color: hsla(260, 60%, 60%, 1);\\n    background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\n    background-size: cover;\\n} [dir=\\\"rtl\\\"] .webgl-modal_illustration_2ReF1 {\\n    transform: scaleX(-1);\\n} .webgl-modal_body_4eA8i {\\n    background: hsla(0, 100%, 100%, 1);\\n    padding: 1.5rem 2.25rem;\\n    text-align: center;\\n} /* Confirmation buttons at the bottom of the modal */ .webgl-modal_button-row_btS-j {\\n    margin: 1.5rem 0;\\n    font-weight: bolder;\\n    text-align: right;\\n    display: flex;\\n    justify-content: center;\\n} .webgl-modal_button-row_btS-j button {\\n    border: 1px solid hsla(260, 60%, 60%, 1);\\n    border-radius: 0.25rem;\\n    padding: 0.5rem 2rem;\\n    background: hsla(260, 60%, 60%, 1);\\n    color: white;\\n    font-weight: bold;\\n    font-size: 0.875rem;\\n} .webgl-modal_faq-link-text_YThHx {\\n    margin: 2rem 0 .5rem 0;\\n    font-size: .875rem;\\n    color: hsla(225, 15%, 40%, 1);\\n} .webgl-modal_faq-link_Fj6Lw {\\n    color: hsla(260, 60%, 60%, 1);\\n    text-decoration: none;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"modal-overlay\": \"webgl-modal_modal-overlay_2yidY\",\n\t\"modalOverlay\": \"webgl-modal_modal-overlay_2yidY\",\n\t\"modal-content\": \"webgl-modal_modal-content_rn15F\",\n\t\"modalContent\": \"webgl-modal_modal-content_rn15F\",\n\t\"illustration\": \"webgl-modal_illustration_2ReF1\",\n\t\"body\": \"webgl-modal_body_4eA8i\",\n\t\"button-row\": \"webgl-modal_button-row_btS-j\",\n\t\"buttonRow\": \"webgl-modal_button-row_btS-j\",\n\t\"faq-link-text\": \"webgl-modal_faq-link-text_YThHx\",\n\t\"faqLinkText\": \"webgl-modal_faq-link-text_YThHx\",\n\t\"faq-link\": \"webgl-modal_faq-link_Fj6Lw\",\n\t\"faqLink\": \"webgl-modal_faq-link_Fj6Lw\"\n};\nmodule.exports = exports;\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"91.90780944824219\\\" height=\\\"105.20907897949219\\\" viewBox=\\\"0.592194938659668 0.3000000357627869 91.90780944824219 105.20907897949219\\\" version=\\\"1.1\\\" xml:space=\\\"preserve\\\">\\n  <!-- Generator: Sketch 52.5 (67469) - http://www.bohemiancoding.com/sketch -->\\n  <g>\\n    <title>costume2.1</title>\\n    <desc>Created with Sketch.</desc>\\n    <g id=\\\"Page-1\\\" stroke=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n      <g id=\\\"cotsume2\\\">\\n        <g id=\\\"costume2.1\\\">\\n          <g id=\\\"tail\\\">\\n            <path d=\\\"M 12.25 67.3 C 9.15 59.5 10.85 52.5 6.55 52.9 C 2.15 53.3 -2.95 65 6.65 73.6 C 15.55 81.5 24.65 78.6 28.25 76.5 C 31.75 74.3 29.05 73.1 28.45 72.3 C 27.85 71.5 16.65 78.6 12.25 67.3 Z \\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#FFAB19\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n            <path d=\\\"M 7.05 53.4 C 4.55 53 2.35 56.6 1.85 60.1 C 1.65 63.7 2.25 65.8 2.95 67.5 C 3.05 66.8 3.95 64.4 6.85 63.9 C 9.25 63.5 10.85 65.5 10.85 65.5 C 10.85 65.5 9.85 62.5 9.35 58.1 C 8.95 55.4 9.05 53.8 7.05 53.4 Z \\\" id=\\\"detail\\\" fill=\\\"#FFFFFF\\\" stroke-width=\\\"1\\\"/>\\n          </g>\\n          <path d=\\\"M 33.15 82.7 C 32.45 83.6 30.45 87.1 25.65 90.1 C 22.35 92.2 13.85 88.7 13.85 88.7 C 14.75 97.9 7.25 97.7 5.85 94.7 C 4.75 92.3 4.95 82 7.15 81.2 C 10.55 80 15.15 82 19.25 82 C 20.45 82 21.75 79.4 24.55 76.6 C 26.55 74.6 29.15 70.9 33.35 73.5 C 36.95 75.8 35.05 80 33.15 82.7 Z \\\" id=\\\"leg\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#FFAB19\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n          <path d=\\\"M 50.35 61.5 C 50.65 63.7 50.85 72.1 53.25 73.4 C 55.55 74.6 62.55 72.6 62.95 77.5 C 63.35 82.3 56.85 82.4 51.45 80.9 C 44.45 79 41.25 68.3 45.25 61.7 C 46.75 59.4 50.05 59.2 50.35 61.5 Z \\\" id=\\\"arm\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#FFAB19\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n          <g id=\\\"body-and-leg\\\">\\n            <path d=\\\"M 42.45 77.8 C 43.65 76.9 45.45 74.5 47.05 72.1 C 48.35 70.2 49.75 66.5 49.75 66.5 C 50.65 64 51.25 59.2 47.95 59.3 C 45.75 59.4 43.75 59.1 40.35 58.6 C 34.35 57.4 33.15 56.2 30.75 60.7 C 26.25 69 20.25 74.9 28.45 79.7 C 30.45 80.9 33.65 82.9 36.45 84.9 C 38.45 86.8 35.45 90.9 33.35 93.3 C 32.45 94.4 32.45 96 33.55 97.1 C 40.85 104.2 43.05 106.7 45.85 103.6 C 49.65 99.4 43.65 95.3 43.65 95.3 C 43.65 95.3 48.45 87.8 47.85 84.5 C 47.15 81.3 42.45 77.8 42.45 77.8 Z \\\" id=\\\"body\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#FFAB19\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n            <path d=\\\"M 46.9784 71.1029 C 46.9784 71.1029 48.8784 68.6029 44.5784 65.9029 C 40.0784 63.0029 38.3784 66.2029 36.5784 68.6029 C 34.5784 71.7029 36.5784 73.2029 38.5784 75.0029 C 40.1784 76.5029 41.6784 77.7029 41.6784 77.7029 C 41.6784 77.7029 44.7784 75.6029 46.9784 71.1029 Z \\\" id=\\\"tummy\\\" fill=\\\"#FFFFFF\\\" stroke-width=\\\"1\\\"/>\\n          </g>\\n          <path d=\\\"M 32.55 64.7 C 30.35 65.7 26.25 63.9 25.15 64.1 C 24.85 64.2 23.05 69.4 21.95 72.5 C 20.45 76.9 13.65 75.6 13.25 71 C 12.95 66.7 16.85 58.4 18.15 56.9 C 21.05 53.4 30.9092 56.2083 37.4963 57.9565 \\\" id=\\\"arm\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#FFAB19\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n          <g id=\\\"head\\\">\\n            <path d=\\\"M 50.1 9 C 47.8 8.6 45.4 8.4 42.6 8.6 C 37.9 8.8 33.4 10.5 33.4 10.5 L 21.3 2.6 C 20.9 2.4 20.4 2.7 20.5 3.1 L 22.6 21 C 23.2 20.2 12 33.8 19.1 45.2 C 26.2 56.6 41.3 61.7 60.1 58 C 78.9 54.3 83.3 43.5 82.1 37.8 C 80.9 32.1 73.8 30 73.8 30 C 73.8 30 73.7 25.5 70.5 20 C 68.6 16.7 62.2 12 62.2 12 L 59.6 1.3 C 59.5 0.9 59 0.8 58.7 1 L 50.1 9 Z \\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#FFAB19\\\"/>\\n            <path d=\\\"M 73.5 30.4 C 73.5 30.4 80.4 32.2 81.6 37.9 C 82.8 43.6 78 53.9 59.4 57.5 C 35.2 62.5 23.7 48.1 30.4 37.5 C 37.1 26.8 48.6 35.9 57 35.3 C 64.2 34.8 65 28.5 73.5 30.4 Z \\\" id=\\\"face\\\" fill=\\\"#FFFFFF\\\" stroke-width=\\\"1\\\"/>\\n            <path d=\\\"M 42 41.1 C 42 40.7 42.4 40.4 42.8 40.5 C 44.7 41.2 50.1 42.8 56.1 43.2 C 61.5 43.5 64.7 43.2 66.2 42.9 C 66.7 42.8 67.1 43.3 66.9 43.8 C 66 46.5 62.2 54 51.7 53.4 C 42.6 52.4 41.7 46 42 41.1 Z \\\" id=\\\"mouth\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#FFFFFF\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n            <path d=\\\"M 80 35.4 C 80 35.4 87.2 35.3 91.9 31.5 \\\" id=\\\"whisker\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" fill=\\\"none\\\"/>\\n            <path d=\\\"M 80.4 41.3 C 80.4 41.3 84.3 43.2 90.6 42.7 \\\" id=\\\"whisker\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" fill=\\\"none\\\"/>\\n            <path d=\\\"M 56.6 32.7 C 58.7 32.7 60.9 32.9 61 33.6 C 61.1 35 59.6 37.8 58 37.9 C 56.2 38.1 52 35.6 52 34 C 51.9 32.8 54.6 32.7 56.6 32.7 Z \\\" id=\\\"nose\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#001026\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n            <path d=\\\"M 11.6 31.2 C 11.6 31.2 20.2 34 23.7 37.1 \\\" id=\\\"whisker\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" fill=\\\"none\\\"/>\\n            <path d=\\\"M 12.3 41.2 C 12.3 41.2 19.7 42.3 24 40.6 \\\" id=\\\"whisker\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" fill=\\\"none\\\"/>\\n            <g id=\\\"eye\\\">\\n              <path d=\\\"M 68.4 21 C 71.3 25.5 71.4 30.6 68.6 32.4 C 65.8 34.2 61.2 32.1 58.2 27.6 C 55.3 23.1 55.2 18 58 16.2 C 60.8 14.3 65.5 16.5 68.4 21 Z \\\" id=\\\"pupil\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#FFFFFF\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n              <path d=\\\"M 68 26.7 C 68 27.8 67.2 28.7 66.2 28.7 C 65.2 28.7 64.4 27.8 64.4 26.7 C 64.4 25.6 65.2 24.7 66.2 24.7 C 67.2 24.7 68 25.6 68 26.7 \\\" id=\\\"pupil\\\" fill=\\\"#001026\\\" stroke-width=\\\"1\\\"/>\\n            </g>\\n            <g id=\\\"eye\\\">\\n              <path d=\\\"M 43.6 23.8 C 46.6 28.2 46.4 33.6 43.7 35.5 C 40.4 37.4 36 36 33 31.6 C 29.9 27.2 29.7 21.5 32.8 19.3 C 35.9 17 40.6 19.4 43.6 23.8 Z \\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#FFFFFF\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n              <path d=\\\"M 43 29.6 C 43 30.7 42.2 31.6 41.2 31.6 C 40.2 31.6 39.4 30.7 39.4 29.6 C 39.4 28.5 40.2 27.6 41.2 27.6 C 42.2 27.7 43 28.5 43 29.6 \\\" id=\\\"pupil\\\" fill=\\\"#001026\\\" stroke-width=\\\"1\\\"/>\\n            </g>\\n          </g>\\n        </g>\\n      </g>\\n    </g>\\n  </g>\\n</svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"95.17898101806641\\\" height=\\\"100.04156036376953\\\" viewBox=\\\"0.3210171699523926 0.3000000357627869 95.17898101806641 100.04156036376953\\\" version=\\\"1.1\\\" xml:space=\\\"preserve\\\">\\n  <!-- Generator: Sketch 52.5 (67469) - http://www.bohemiancoding.com/sketch -->\\n  <g>\\n    <title>costume1.1</title>\\n    <desc>Created with Sketch.</desc>\\n    <g id=\\\"Page-1\\\" stroke=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n      <g id=\\\"costume1\\\">\\n        <g id=\\\"costume1.1\\\">\\n          <g id=\\\"tail\\\">\\n            <path d=\\\"M 21.9 73.8 C 19.5 73.3 16.6 72.5 14.2 70.3 C 8.7 65.4 7 57.3 3.2 59.4 C -0.7 61.5 -0.6 74.6 11.6 78.6 C 15.8 80 19.6 80 22.7 79.9 C 23.5 79.9 30.4 79.2 32.8 75.8 C 35.2 72.4 33.5 71.5 32.7 71.1 C 31.8 70.6 25.3 74.4 21.9 73.8 Z \\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#FFAB19\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n            <path d=\\\"M 3.8 59.6 C 1.8 60.2 0.8 64.4 1.8 67.9 C 2.8 71.4 4.4 73.2 5.7 74.5 C 5.5 73.8 5.1 71.6 6.8 70.3 C 8.9 68.6 12.6 69.5 12.6 69.5 C 12.6 69.5 9.5 65.7 7.9 63 C 6.3 60.7 5.8 59.2 3.8 59.6 Z \\\" id=\\\"detail\\\" fill=\\\"#FFFFFF\\\" stroke-width=\\\"1\\\"/>\\n          </g>\\n          <path d=\\\"M37.7,81.5 C35.9,82.7 29.7,87.1 21.8,89.6 L21.4,89.7 C21,89.8 20.8,90.3 21,90.7 C22.7,93.1 25.8,97.9 20.3,99.6 C15,101.3 5.1,87.2 9.3,83.5 C11.2,82.1 12.9,82.8 13.8,83.2 C14.3,83.4 14.8,83.4 15.3,83.3 C16.5,82.9 18.7,82.1 20.4,81.2 C24.7,79 25.7,78.1 27.7,76.6 C29.7,75.1 34.3,71.4 38,74.6 C41.2,77.3 39.4,80.3 37.7,81.5 Z\\\" id=\\\"leg\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#FFAB19\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n          <path d=\\\"M53.6,60.7 C54.1,61.1 60.2,68.3 62.2,66.5 C64.6,64.4 67.9,60.3 71.5,63.6 C75.1,66.9 68.3,72.5 65.4,74 C58.5,77.1 52.9,71.2 51.7,69.6 C50.5,68 48.4,65.3 48.4,62.7 C48.5,59.9 51.9,59.2 53.6,60.7 Z\\\" id=\\\"arm\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#FFAB19\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n          <g id=\\\"body-and-leg\\\">\\n            <path d=\\\"M 46.2 76.7 C 47.4 75.8 48.6 74.3 50.2 72 C 51.5 70.1 52.9 66.4 52.9 66.4 C 53.8 63.9 54.4 59.1 51.1 59.2 C 48.9 59.3 46.9 59 43.5 58.5 C 37.5 57.3 36.4 56.5 33.9 60.6 C 31.2 65.4 24.3 68.9 32.8 77.2 C 32.8 77.2 37.7 81 43.6 86.8 C 47.6 90.7 53.9 96.3 56.1 98.2 C 56.6 98.6 57.2 98.8 57.8 98.9 C 67.5 99.8 74.7 98.8 74.7 94.5 C 74.7 87.3 60.4 89.8 60.4 89.8 C 60.4 89.8 55.8 85.9 53.7 84 L 46.2 76.7 Z \\\" id=\\\"body\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#FFAB19\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n            <path d=\\\"M 50.6 70 C 50.6 70 52.5 67.5 48.2 64.8 C 43.7 61.9 42 65.1 40.2 67.5 C 38.2 70.6 40.2 72.1 42.2 73.9 C 43.8 75.4 45.3 76.6 45.3 76.6 C 45.3 76.6 48.4 74.5 50.6 70 Z \\\" id=\\\"tummy\\\" fill=\\\"#FFFFFF\\\" stroke-width=\\\"1\\\"/>\\n          </g>\\n          <path d=\\\"M30.2,68.4 C32.4,71.2 35.8,74.7 31.5,77.6 C25.6,80.9 20.7,70.9 19.7,67.4 C18.8,64.3 21.4,62.3 23.6,60.6 C27.9,57.5 31.5,54.7 35.5,56.2 C40.5,58 36.9,62 34.4,63.8 C32.9,64.9 31.4,66.1 30.3,66.8 C30,67.3 29.9,67.9 30.2,68.4 Z\\\" id=\\\"arm\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#FFAB19\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n          <g id=\\\"head\\\">\\n            <path d=\\\"M 53.1 9 C 50.8 8.6 48.4 8.4 45.6 8.6 C 40.9 8.8 36.4 10.5 36.4 10.5 L 24.3 2.6 C 23.9 2.4 23.4 2.7 23.5 3.1 L 25.6 21 C 26.2 20.2 15 33.8 22.1 45.2 C 29.2 56.6 44.3 61.7 63.1 58 C 81.9 54.3 86.3 43.5 85.1 37.8 C 83.9 32.1 76.8 30 76.8 30 C 76.8 30 76.7 25.5 73.5 20 C 71.6 16.7 65.2 12 65.2 12 L 62.6 1.3 C 62.5 0.9 62 0.8 61.7 1 L 53.1 9 Z \\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#FFAB19\\\"/>\\n            <path d=\\\"M 76.5 30.4 C 76.5 30.4 83.4 32.2 84.6 37.9 C 85.8 43.6 81 53.9 62.4 57.5 C 38.2 62.5 26.7 48.1 33.4 37.5 C 40.1 26.8 51.6 35.9 60 35.3 C 67.2 34.8 68 28.5 76.5 30.4 Z \\\" id=\\\"face\\\" fill=\\\"#FFFFFF\\\" stroke-width=\\\"1\\\"/>\\n            <path d=\\\"M 45 41.1 C 45 40.7 45.4 40.4 45.8 40.5 C 47.7 41.2 53.1 42.8 59.1 43.2 C 64.5 43.5 67.7 43.2 69.2 42.9 C 69.7 42.8 70.1 43.3 69.9 43.8 C 69 46.5 65.2 54 54.7 53.4 C 45.6 52.4 44.7 46 45 41.1 Z \\\" id=\\\"mouth\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#FFFFFF\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n            <path d=\\\"M 83 35.4 C 83 35.4 90.2 35.3 94.9 31.5 \\\" id=\\\"whisker\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" fill=\\\"none\\\"/>\\n            <path d=\\\"M 83.4 41.3 C 83.4 41.3 87.3 43.2 93.6 42.7 \\\" id=\\\"whisker\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" fill=\\\"none\\\"/>\\n            <path d=\\\"M 59.6 32.7 C 61.7 32.7 63.9 32.9 64 33.6 C 64.1 35 62.6 37.8 61 37.9 C 59.2 38.1 55 35.6 55 34 C 54.9 32.8 57.6 32.7 59.6 32.7 Z \\\" id=\\\"nose\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#001026\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n            <path d=\\\"M 14.6 31.2 C 14.6 31.2 23.2 34 26.7 37.1 \\\" id=\\\"whisker\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" fill=\\\"none\\\"/>\\n            <path d=\\\"M 15.3 41.2 C 15.3 41.2 22.7 42.3 27 40.6 \\\" id=\\\"whisker\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" fill=\\\"none\\\"/>\\n            <g id=\\\"eye\\\">\\n              <path d=\\\"M 71.4 21 C 74.3 25.5 74.4 30.6 71.6 32.4 C 68.8 34.2 64.2 32.1 61.2 27.6 C 58.3 23.1 58.2 18 61 16.2 C 63.8 14.3 68.5 16.5 71.4 21 Z \\\" id=\\\"pupil\\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#FFFFFF\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n              <path d=\\\"M 71 26.7 C 71 27.8 70.2 28.7 69.2 28.7 C 68.2 28.7 67.4 27.8 67.4 26.7 C 67.4 25.6 68.2 24.7 69.2 24.7 C 70.2 24.7 71 25.6 71 26.7 \\\" id=\\\"pupil\\\" fill=\\\"#001026\\\" stroke-width=\\\"1\\\"/>\\n            </g>\\n            <g id=\\\"eye\\\">\\n              <path d=\\\"M 46.6 23.8 C 49.6 28.2 49.4 33.6 46.7 35.5 C 43.4 37.4 39 36 36 31.6 C 32.9 27.2 32.7 21.5 35.8 19.3 C 38.9 17 43.6 19.4 46.6 23.8 Z \\\" stroke=\\\"#001026\\\" stroke-width=\\\"1.2\\\" fill=\\\"#FFFFFF\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n              <path d=\\\"M 46 29.6 C 46 30.7 45.2 31.6 44.2 31.6 C 43.2 31.6 42.4 30.7 42.4 29.6 C 42.4 28.5 43.2 27.6 44.2 27.6 C 45.2 27.7 46 28.5 46 29.6 \\\" id=\\\"pupil\\\" fill=\\\"#001026\\\" stroke-width=\\\"1\\\"/>\\n            </g>\\n          </g>\\n        </g>\\n      </g>\\n    </g>\\n  </g>\\n</svg>\";","export default \"<svg version=\\\"1.1\\\" width=\\\"2\\\" height=\\\"2\\\" viewBox=\\\"-1 -1 2 2\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n  <!-- Exported by Scratch - http://scratch.mit.edu/ -->\\n</svg>\";","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./alert.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./alert.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./alert.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./alerts.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./alerts.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./alerts.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./box.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./box.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./box.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./browser-modal.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./browser-modal.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./browser-modal.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./button.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./button.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./button.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./close-button.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./close-button.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./close-button.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./context-menu.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./context-menu.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./context-menu.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./controls.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./controls.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./controls.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./crash-message.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./crash-message.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./crash-message.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./input.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./input.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./input.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./green-flag.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./green-flag.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./green-flag.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./gui.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./gui.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./gui.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./loader.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./loader.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./loader.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./loupe.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./loupe.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./loupe.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./mic-indicator.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./mic-indicator.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./mic-indicator.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./modal.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./modal.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./modal.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./monitor-list.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./monitor-list.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./monitor-list.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./monitor.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./monitor.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./monitor.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./question.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./question.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./question.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./slider-prompt.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./slider-prompt.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./slider-prompt.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./spinner.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./spinner.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./spinner.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./stage-header.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./stage-header.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./stage-header.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./stage-wrapper.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./stage-wrapper.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./stage-wrapper.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./stage.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./stage.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./stage.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./stop-all.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./stop-all.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./stop-all.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./toggle-buttons.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./toggle-buttons.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./toggle-buttons.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./turbo-mode.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./turbo-mode.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./turbo-mode.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./webgl-modal.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./webgl-modal.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[5].use[2]!./webgl-modal.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":[],"sourceRoot":""}